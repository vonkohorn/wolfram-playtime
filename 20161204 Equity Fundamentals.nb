(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    928608,      17441]
NotebookOptionsPosition[    923076,      17268]
NotebookOutlinePosition[    923428,      17284]
CellTagsIndexPosition[    923385,      17281]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["W|A Financial Data Experiments", "Title",
 CellChangeTimes->{{3.672415908928276*^9, 3.6724159295217876`*^9}, 
   3.6724159654392557`*^9, {3.67336529271355*^9, 3.673365366240858*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.673374050935865*^9, 3.673374081587566*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673374088513896*^9, 3.6733740885201807`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.673710147373354*^9, 3.6898573559715137`*^9, 
  3.689862506943372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Collection of PodStates for \
\[OpenCurlyDoubleQuote]FundamentalsAndFinancials\[CloseCurlyDoubleQuote]", \
"Subsection",
 CellChangeTimes->{{3.6727578472555447`*^9, 3.672757860267158*^9}, {
   3.672765319761408*^9, 3.672765340924635*^9}, 3.673374085291603*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"podStateList", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Keep", " ", "this", " ", "ordering"}], ",", " ", 
      RowBox[{"ETL", " ", "relies", " ", "on", " ", 
       RowBox[{"it", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
    "\"\<FundamentalsAndFinancials__Fundamentals\>\"", ",", " ", 
     "\[IndentingNewLine]", "\"\<FundamentalsAndFinancials__Ratios\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<FundamentalsAndFinancials__Balance sheet (quarterly)\>\"", ",", " ",
      "\[IndentingNewLine]", 
     "\"\<FundamentalsAndFinancials__Balance sheet (annual)\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<FundamentalsAndFinancials__Income statement (TTM)\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<FundamentalsAndFinancials__Income statement (quarterly)\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<FundamentalsAndFinancials__Cash flow statement (TTM)\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<FundamentalsAndFinancials__Cash flow statement (quarterly)\>\""}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"podStateList", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"\"\<FundamentalsAndFinancials__Fundamentals\>\"", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "This", " ", "has", " ", "to", " ", "be", " ", "first", " ", "so", " ",
         "that", " ", "market", " ", "cap", " ", "is", " ", "1", 
        RowBox[{"st", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "\"\<FundamentalsAndFinancials__Ratios\>\""}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tickers", "=", 
    RowBox[{
    "StringSplit", "[", "\"\<ge googl gm jnj aapl bidu intc ibm twtr\>\"", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Names", "[", "\"\<Global`*\>\"", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.672760653282112*^9, 3.672760701874464*^9}, {
   3.672760956088015*^9, 3.672760985452189*^9}, {3.672761026589766*^9, 
   3.6727610906226683`*^9}, {3.672761940049806*^9, 3.672761947979787*^9}, 
   3.672762038189536*^9, {3.672762073235074*^9, 3.672762086276395*^9}, {
   3.672763759782661*^9, 3.672763780371765*^9}, {3.672845749580068*^9, 
   3.672845750271348*^9}, {3.6728459124980993`*^9, 3.6728459368267097`*^9}, {
   3.672845967992137*^9, 3.672845968061198*^9}, {3.6728460096749372`*^9, 
   3.672846037512727*^9}, {3.672888266033751*^9, 3.672888312051219*^9}, {
   3.672888352841753*^9, 3.672888383516144*^9}, {3.672888482632011*^9, 
   3.672888484846978*^9}, 3.672888536727813*^9, 3.6730610873518057`*^9, {
   3.673061567369364*^9, 3.673061577856406*^9}, {3.673064470402733*^9, 
   3.673064559317492*^9}, {3.673107192322246*^9, 3.673107260634472*^9}, {
   3.673107636323801*^9, 3.67310773126838*^9}, 3.673226020030672*^9, 
   3.673226168118451*^9, {3.673226270861175*^9, 3.6732262745769444`*^9}, 
   3.673226381242792*^9, {3.6732282406136827`*^9, 3.673228247055695*^9}, {
   3.673365139415555*^9, 3.673365142547061*^9}, {3.6733739729436502`*^9, 
   3.67337398281006*^9}, {3.673376027763405*^9, 3.67337604988702*^9}, {
   3.673377532399969*^9, 3.673377533685769*^9}, {3.673383962278202*^9, 
   3.673383965124214*^9}, {3.6734016217239532`*^9, 3.673401627679854*^9}, {
   3.673401706326042*^9, 3.673401725284893*^9}, {3.6737089098095093`*^9, 
   3.673708912487355*^9}, {3.6737097159699793`*^9, 3.673709772709071*^9}, {
   3.673709818792893*^9, 3.673709908073344*^9}, {3.673710004452551*^9, 
   3.673710046853538*^9}, {3.673710080696163*^9, 3.673710088651268*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"podStateList\"\>", ",", "\<\"tickers\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6737101515373363`*^9, 3.689862536666793*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["private methods", "Subsection",
 CellChangeTimes->{{3.673365165599222*^9, 3.673365171602776*^9}, {
  3.673374031441943*^9, 3.673374032287516*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"companyList", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringJoin", "[", 
      RowBox[{"\"\<ticker:\>\"", ",", "#"}], "]"}], "&"}], "/@", 
    "tickers"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sampleCompany", "=", 
    RowBox[{"companyList", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Just", " ", "a", " ", "wrapper", " ", "for", " ", "the", " ", "W"}], "|", 
    RowBox[{"A", " ", "API"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"podContentWA", "[", 
     RowBox[{"entity_", ",", "pod_", ",", "type_", ",", "ps_"}], "]"}], ":=", 
    
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"raw", "=", 
       RowBox[{"WolframAlpha", "[", 
        RowBox[{"entity", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pod", ",", "1"}], "}"}], ",", "type"}], "}"}], ",", 
         RowBox[{"PodStates", "\[Rule]", 
          RowBox[{"{", "ps", "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"flat", "=", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"raw", ",", "2"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"flatten", " ", "to", " ", "the", " ", 
        RowBox[{"attribute", "/", "value"}], " ", "pairs", " ", "and", " ", 
        "drop", " ", "the", " ", "trailing", " ", "description"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "flat", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"podContent", "[", 
     RowBox[{"entity_", ",", "pod_", ",", "type_", ",", "ps_"}], "]"}], ":=", 
    
    RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"useLocalCache", "=", "True"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"filename", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"entity", ",", "ps"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FailureQ", "[", 
         RowBox[{"pc", "=", 
          RowBox[{"Get", "[", "filename", "]"}]}], "]"}], ",", 
        RowBox[{"local", "=", "False"}], ",", " ", 
        RowBox[{"local", "=", "True"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"local", "&&", "useLocalCache"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<\\t\>\"", ",", "ps", ",", "\"\< -- loading cached\>\""}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "pc", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pc", "=", 
       RowBox[{"podContentWA", "[", 
        RowBox[{"entity", ",", "pod", ",", "type", ",", "ps"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\\t\>\"", ",", "ps", ",", "\"\< -- loading from W|A API\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Put", "[", 
       RowBox[{"pc", ",", "filename"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "pc", "]"}], ";"}], "\[IndentingNewLine]", 
     ")"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convertPodContentsToTrainingRow", "[", "pc_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"features", "=", "8"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<convert-in: \\n\>\"", ",", " ", "pc"}], "]"}], ";"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"flat", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"pc", ",", "1"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"features", "+", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"flatMagnitudes", " ", "=", " ", 
      RowBox[{"flat", "/.", 
       RowBox[{
        RowBox[{"Quantity", "[", 
         RowBox[{"x_", ",", "y_"}], "]"}], "\[RuleDelayed]", "x"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mktCap", "=", 
      RowBox[{"flatMagnitudes", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"features", "=", 
      RowBox[{"flatMagnitudes", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", ";;", 
          RowBox[{"-", "1"}]}], ",", "2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tr", "=", 
      RowBox[{"{", 
       RowBox[{"features", "\[Rule]", "mktCap"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<convert-out: \\n\>\"", ",", " ", "tr"}], "]"}], ";"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "tr", "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateTrainingRow", "[", "company_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", "company", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"podContents", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"podContent", "[", 
         RowBox[{
         "company", ",", "\"\<FundamentalsAndFinancials\>\"", ",", 
          "\"\<ComputableData\>\"", ",", "#"}], "]"}], "&"}], "/@", 
       "podStateList"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"trainingRow", "=", 
      RowBox[{"convertPodContentsToTrainingRow", "[", "podContents", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "trainingRow", "]"}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.673065788046423*^9, 3.6730659916425962`*^9}, {
   3.6730660217813873`*^9, 3.673066174009943*^9}, {3.6730663103181953`*^9, 
   3.6730663250576057`*^9}, 3.67310718623599*^9, {3.673107772539833*^9, 
   3.673107774879615*^9}, {3.673107852054398*^9, 3.673107861446241*^9}, {
   3.673107897389106*^9, 3.673108043870329*^9}, {3.673108302982696*^9, 
   3.673108309189858*^9}, {3.673111868490646*^9, 3.67311188628128*^9}, {
   3.673113806384976*^9, 3.6731138723833733`*^9}, {3.6731139042759123`*^9, 
   3.673113946828916*^9}, {3.6731141017445583`*^9, 3.673114185340144*^9}, {
   3.6731142441879787`*^9, 3.673114425371398*^9}, {3.673114456698236*^9, 
   3.6731144608265467`*^9}, {3.673120735091174*^9, 3.6731207352378187`*^9}, {
   3.673219760360407*^9, 3.673219942139381*^9}, {3.673219985100183*^9, 
   3.673220003144123*^9}, 3.6732258732919283`*^9, {3.6732261490850286`*^9, 
   3.673226174716053*^9}, {3.673226232936551*^9, 3.6732262608429403`*^9}, {
   3.6732263383310127`*^9, 3.6732263441272097`*^9}, {3.673226487328237*^9, 
   3.6732265490046167`*^9}, {3.673226622421471*^9, 3.673226748200451*^9}, {
   3.673226816736733*^9, 3.673226832180632*^9}, {3.673227258583448*^9, 
   3.67322740062885*^9}, {3.6732274322615232`*^9, 3.67322743994753*^9}, {
   3.67322751728953*^9, 3.673227573449254*^9}, {3.673227603727653*^9, 
   3.6732277448128033`*^9}, {3.6732279246195107`*^9, 
   3.6732280289485292`*^9}, {3.67322807633737*^9, 3.673228088744399*^9}, {
   3.673228151556787*^9, 3.673228191797875*^9}, {3.673228309743125*^9, 
   3.67322839876239*^9}, {3.6732284477663813`*^9, 3.6732285342126923`*^9}, 
   3.673228617571785*^9, {3.673365145256009*^9, 3.673365149350556*^9}, 
   3.673372465905951*^9, {3.673372525238998*^9, 3.673372530520625*^9}, {
   3.673374127387987*^9, 3.673374139332404*^9}, {3.67337424375984*^9, 
   3.6733743117111483`*^9}, {3.67337442315893*^9, 3.673374455482609*^9}, {
   3.673374844150532*^9, 3.673374844708351*^9}, {3.6733752466332397`*^9, 
   3.6733752482522173`*^9}, {3.6733753269271517`*^9, 3.673375396685481*^9}, 
   3.67337545252052*^9, {3.6733754990664463`*^9, 3.673375503290011*^9}, {
   3.673375642337893*^9, 3.673375698216638*^9}, {3.673375728705297*^9, 
   3.6733757480871067`*^9}, {3.673375788255924*^9, 3.6733758404608383`*^9}, {
   3.673375870714024*^9, 3.673375881674361*^9}, {3.673376248689414*^9, 
   3.673376311285829*^9}, {3.67337643690429*^9, 3.673376506900539*^9}, {
   3.673376627710237*^9, 3.673376643804564*^9}, {3.673376685049554*^9, 
   3.673376733889843*^9}, {3.673376773497115*^9, 3.6733768704722157`*^9}, {
   3.673377049276607*^9, 3.673377065212339*^9}, {3.673377192232079*^9, 
   3.6733771950691338`*^9}, {3.6733772796856327`*^9, 3.673377312156267*^9}, {
   3.6733773503066607`*^9, 3.673377352600688*^9}, {3.67337743073053*^9, 
   3.673377435877489*^9}, {3.673377491353697*^9, 3.673377495399209*^9}, {
   3.673377600581218*^9, 3.67337760125426*^9}, {3.6733802028170023`*^9, 
   3.6733803029530373`*^9}, {3.673380334848247*^9, 3.673380360064416*^9}, {
   3.673380683129167*^9, 3.673380703545739*^9}, {3.673384182244027*^9, 
   3.673384182330917*^9}, {3.6734017396320553`*^9, 3.6734017397159367`*^9}, {
   3.673709065225957*^9, 3.673709072998633*^9}, {3.6737111336162977`*^9, 
   3.673711133710023*^9}, {3.689862831367927*^9, 3.689862852407579*^9}, 
   3.689863719081523*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run testing", "Subsection",
 CellChangeTimes->{{3.6733655176494637`*^9, 3.67336553424209*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingRows", "=", 
   RowBox[{"generateTrainingRow", "/@", "companyList"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.673373987041832*^9, 3.673374007987418*^9}, 
   3.67337602173503*^9, 3.673380488778195*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"ticker:ge\"\>"], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583504251*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Fundamentals\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Fundamentals", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583516062*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Ratios\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Ratios", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.68986258353552*^9}],

Cell[BoxData["\<\"ticker:googl\"\>"], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.6898625835545893`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Fundamentals\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Fundamentals", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.6898625835704613`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Ratios\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Ratios", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583588457*^9}],

Cell[BoxData["\<\"ticker:gm\"\>"], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.68986258361375*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Fundamentals\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Fundamentals", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.68986258363358*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Ratios\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Ratios", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583654154*^9}],

Cell[BoxData["\<\"ticker:jnj\"\>"], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583673078*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Fundamentals\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Fundamentals", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583688126*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Ratios\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Ratios", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583703783*^9}],

Cell[BoxData["\<\"ticker:aapl\"\>"], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.68986258371935*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Fundamentals\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Fundamentals", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583736932*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Ratios\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Ratios", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583757114*^9}],

Cell[BoxData["\<\"ticker:bidu\"\>"], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583773048*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Fundamentals\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Fundamentals", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.68986258379425*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Ratios\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Ratios", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.6898625838091583`*^9}],

Cell[BoxData["\<\"ticker:intc\"\>"], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583823988*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Fundamentals\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Fundamentals", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.68986258383877*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Ratios\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Ratios", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.6898625838545647`*^9}],

Cell[BoxData["\<\"ticker:ibm\"\>"], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583870152*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Fundamentals\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Fundamentals", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583882496*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Ratios\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Ratios", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583957327*^9}],

Cell[BoxData["\<\"ticker:twtr\"\>"], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583970212*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Fundamentals\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Fundamentals", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583985179*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\t\"\>", 
   "\[InvisibleSpace]", "\<\"FundamentalsAndFinancials__Ratios\"\>", 
   "\[InvisibleSpace]", "\<\" -- loading cached\"\>"}],
  SequenceForm[
  "\t", "FundamentalsAndFinancials__Ratios", " -- loading cached"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710173739573*^9, 3.673711139664534*^9, 
  3.689862583998645*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", 
  "\"\<ticker:biduFundamentalsAndFinancials__Fundamentals\>\""}], "\
\[IndentingNewLine]", 
 RowBox[{"<<", 
  "\"\<ticker:biduFundamentalsAndFinancials__Ratios\>\""}]}], "Input",
 CellChangeTimes->{{3.673384133732033*^9, 3.67338414141887*^9}, {
  3.673384205132758*^9, 3.6733842098026123`*^9}, {3.673709258117853*^9, 
  3.673709288947537*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"market cap\"\>", ",", 
     TemplateBox[{
      InterpretationBox[6.407*^10, 6.407*^10, Selectable -> False],RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],"US dollars",
       "\"USDollars\""},
      "QuantityPrefix"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"revenue\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"employees\"\>", ",", "41467"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"revenue / employee\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"net income\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"shares outstanding\"\>", ",", "346296130"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"annual earnings / share\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P/E ratio\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"annual dividends / share\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"dividend yield\"\>", ",", 
     TemplateBox[{"0","\"%\"","percent","\"Percent\""},
      "QuantityPostfix"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6737110572084312`*^9, 3.673711142666704*^9, 
  3.689862594900983*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"P/E ratio\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"price / book\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"price / sales\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"price / free cash flow\"\>", ",", 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"return on equity\"\>", ",", 
     TemplateBox[{"2.41`","\"%\"","percent","\"Percent\""},
      "QuantityPostfix"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"return on assets\"\>", ",", 
     TemplateBox[{"1.32`","\"%\"","percent","\"Percent\""},
      "QuantityPostfix"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"leverage\"\>", ",", "1.824368`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"current ratio\"\>", ",", "3.005736`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"debt / capital\"\>", ",", "0.290986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"net profit margin\"\>", ",", 
     TemplateBox[{"12.56`","\"%\"","percent","\"Percent\""},
      "QuantityPostfix"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6737110572084312`*^9, 3.673711142666704*^9, 
  3.689862594916092*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"trainingRows", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6733743542215223`*^9, 3.673374356890032*^9}, {
  3.673380720814773*^9, 3.673380730440166*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1.179`*^11", ",", "333000", ",", "353900", ",", "7.638`*^9", ",", 
        "9195657000", ",", "0.77`", ",", "38.94377082300001`", ",", "1.14`"}],
        "}"}], "\[Rule]", "2.761`*^11"}]},
    {
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "7.799`*^10", ",", "61814", ",", "1.262`*^6", ",", "1.704`*^10", ",", 
        "686555233", ",", "24.07`", ",", "30.61948787202602`", ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], 
      "\[Rule]", "5.059`*^11"}]},
    {
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1.539`*^11", ",", "215000", ",", "715900", ",", "1.069`*^10", ",", 
        "1539825376", ",", "6.85`", ",", "4.564704045624186`", ",", "1.32`"}],
        "}"}], "\[Rule]", "4.817999999999999`*^10"}]},
    {
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "7.018`*^10", ",", "127100", ",", "552200", ",", "1.538`*^10", ",", 
        "2750644288", ",", "5.56`", ",", "20.29234301534128`", ",", "3.65`"}],
        "}"}], "\[Rule]", "3.105`*^11"}]},
    {
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "2.275`*^11", ",", "110000", ",", "2.069`*^6", ",", 
        "5.067999999999999`*^10", ",", "5477425000", ",", "9.04`", ",", 
        "11.107394670808004`", ",", "2.5`"}], "}"}], "\[Rule]", 
      "5.5`*^11"}]},
    {
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", "41467", 
        ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
        "346296130", ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], 
      "\[Rule]", "6.407`*^10"}]},
    {
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "5.628`*^10", ",", "107300", ",", "524500", ",", "1.147`*^10", ",", 
        "4722000000", ",", "2.42`", ",", "13.070818288225507`", ",", 
        "1.19`"}], "}"}], "\[Rule]", "1.491`*^11"}]},
    {
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "8.084`*^10", ",", "411798", ",", "196300", ",", "1.288`*^10", ",", 
        "959961852", ",", "13.23`", ",", "11.549884016603801`", ",", "7.4`"}],
        "}"}], "\[Rule]", "1.467`*^11"}]},
    {
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.377`*^9", ",", "3800", ",", "625400", ",", 
        RowBox[{"-", "4.383`*^8"}], ",", "701897432", ",", 
        RowBox[{"-", "0.66`"}], ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], 
      "\[Rule]", "1.06`*^10"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.673710189298759*^9, 3.673711145086142*^9, 
  3.689862620301862*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"I", "'"}], "d", " ", "rather", " ", "be", " ", "working", " ", 
     "with", " ", "a", " ", "dataframe", " ", "object", " ", "a", " ", "la", 
     " ", "pandas"}], ",", " ", 
    RowBox[{
    "or", " ", "an", " ", "object", " ", "with", " ", "ticker", " ", "and", 
     " ", "date", " ", "attributes", " ", "along", " ", "with", " ", "the", 
     " ", "training", " ", "rows"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"TODO", " ", "-", " ", 
    RowBox[{"Drop", " ", "bad", " ", "trainingRows", " ", 
     RowBox[{"(", 
      RowBox[{"or", " ", "create", " ", 
       RowBox[{"a", " ", "'"}], 
       RowBox[{"populated", "'"}], " ", "matrix", " ", "with", " ", 
       RowBox[{"T", "/", "F"}], " ", "on", " ", "each", " ", "input", " ", 
       RowBox[{"var", ".", "  ", "Then"}], " ", "we", " ", "can", " ", 
       "calculate", " ", "confidence", " ", "intervals", " ", "based", " ", 
       "on", " ", "the", " ", "availability", " ", "of", " ", 
       RowBox[{"inputs", "."}]}], " "}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.67370932710209*^9, 3.67370933011504*^9}, {
  3.673709366965374*^9, 3.673709644887171*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Predict", "[", 
    RowBox[{"Flatten", "[", "trainingRows", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PredictorInformation", "[", "p", "]"}]}], "Input",
 CellChangeTimes->{{3.673711168095578*^9, 3.673711176025112*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->Larger],
          FrameMargins->{{10, 0}, {-5, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.93119, 0.93119, 0.93119],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         FrameBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Method\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "\<\"Linear regression\"\>"},
             {
              StyleBox["\<\"Number of features\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "8"},
             {
              StyleBox["\<\"Number of training examples\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "9"},
             {
              StyleBox["\<\"L1 regularization coefficient\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "0"},
             {
              StyleBox["\<\"L2 regularization coefficient\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "10.`"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             FontWeight -> "Light", FontFamily -> ".SF NS Text", NumberMarks -> 
              False},
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[2.0999999999999996`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->Left,
         BaseStyle->{Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], 
          Offset[1.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Background->RGBColor[0.9802, 0.9802, 0.9802],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Association[
  "Method" -> "Linear regression", "Number of features" -> 8, 
   "Number of training examples" -> 9, "L1 regularization coefficient" -> 0, 
   "L2 regularization coefficient" -> 10.]]], "Output",
 CellChangeTimes->{
  3.6737102035167837`*^9, {3.6737111564695683`*^9, 3.673711176947085*^9}, 
   3.6898626779549*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "tickers", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "trainingRows", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "y_"}], ")"}], "\[RuleDelayed]", " ", 
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{"tickers", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<\\t Predicted \>\"", ",", 
         
         RowBox[{"p", "[", "x", "]"}], ",", "\"\< vs. \>\"", ",", "y", ",", 
         "\"\<\\t Price/prediction: \>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "/", 
             RowBox[{"p", "[", "x", "]"}]}], ")"}], "*", "100"}], "-", 
          "100"}], ",", "\"\<% \\t E[r]: \>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p", "[", "x", "]"}], "/", "y"}], ")"}], "*", "100"}], 
          "-", "100"}], ",", "\"\<%\>\""}], "]"}]}]}], ";"}]}], "  ", 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6734000049344378`*^9, 3.6734000478420477`*^9}, {
   3.6734000855269537`*^9, 3.673400219751066*^9}, {3.673400251390647*^9, 
   3.673400306247491*^9}, {3.6734003456795883`*^9, 3.673400378106222*^9}, 
   3.673708859498946*^9, {3.6737111878426437`*^9, 3.6737111925052433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ge\"\>", "\[InvisibleSpace]", "\<\"\\t Predicted \"\>", 
   "\[InvisibleSpace]", "2.1545740319791867`*^11", 
   "\[InvisibleSpace]", "\<\" vs. \"\>", "\[InvisibleSpace]", "2.761`*^11", 
   "\[InvisibleSpace]", "\<\"\\t Price/prediction: \"\>", "\[InvisibleSpace]",
    "28.14597962381231`", "\[InvisibleSpace]", "\<\"% \\t E[r]: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "21.963997393003027`"}], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "ge", "\t Predicted ", 2.1545740319791867`*^11, " vs. ", 2.761*^11, 
   "\t Price/prediction: ", 28.14597962381231, 
   "% \t E[r]: ", -21.963997393003027`, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710212225295*^9, 3.6737111945341473`*^9, 
  3.689862684218606*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"googl\"\>", "\[InvisibleSpace]", "\<\"\\t Predicted \"\>", 
   "\[InvisibleSpace]", "3.514962993635825`*^11", 
   "\[InvisibleSpace]", "\<\" vs. \"\>", "\[InvisibleSpace]", "5.059`*^11", 
   "\[InvisibleSpace]", "\<\"\\t Price/prediction: \"\>", "\[InvisibleSpace]",
    "43.927546581850265`", "\[InvisibleSpace]", "\<\"% \\t E[r]: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "30.520597081719202`"}], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "googl", "\t Predicted ", 3.514962993635825*^11, " vs. ", 5.059*^11, 
   "\t Price/prediction: ", 43.927546581850265`, 
   "% \t E[r]: ", -30.520597081719202`, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710212225295*^9, 3.6737111945341473`*^9, 
  3.689862684232798*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"gm\"\>", "\[InvisibleSpace]", "\<\"\\t Predicted \"\>", 
   "\[InvisibleSpace]", "2.3376301680546466`*^11", 
   "\[InvisibleSpace]", "\<\" vs. \"\>", "\[InvisibleSpace]", 
   "4.817999999999999`*^10", 
   "\[InvisibleSpace]", "\<\"\\t Price/prediction: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "79.38938303483013`"}], 
   "\[InvisibleSpace]", "\<\"% \\t E[r]: \"\>", "\[InvisibleSpace]", 
   "385.1868343824505`", "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "gm", "\t Predicted ", 2.3376301680546466`*^11, " vs. ", 
   4.817999999999999*^10, "\t Price/prediction: ", -79.38938303483013, 
   "% \t E[r]: ", 385.1868343824505, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710212225295*^9, 3.6737111945341473`*^9, 
  3.689862684252692*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"jnj\"\>", "\[InvisibleSpace]", "\<\"\\t Predicted \"\>", 
   "\[InvisibleSpace]", "2.3900330990817407`*^11", 
   "\[InvisibleSpace]", "\<\" vs. \"\>", "\[InvisibleSpace]", "3.105`*^11", 
   "\[InvisibleSpace]", "\<\"\\t Price/prediction: \"\>", "\[InvisibleSpace]",
    "29.914518806996938`", "\[InvisibleSpace]", "\<\"% \\t E[r]: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "23.026309208317528`"}], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "jnj", "\t Predicted ", 2.3900330990817407`*^11, " vs. ", 3.105*^11, 
   "\t Price/prediction: ", 29.914518806996938`, 
   "% \t E[r]: ", -23.026309208317528`, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710212225295*^9, 3.6737111945341473`*^9, 
  3.689862684273115*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"aapl\"\>", "\[InvisibleSpace]", "\<\"\\t Predicted \"\>", 
   "\[InvisibleSpace]", "4.676235417430051`*^11", 
   "\[InvisibleSpace]", "\<\" vs. \"\>", "\[InvisibleSpace]", "5.5`*^11", 
   "\[InvisibleSpace]", "\<\"\\t Price/prediction: \"\>", "\[InvisibleSpace]",
    "17.61597757673779`", "\[InvisibleSpace]", "\<\"% \\t E[r]: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "14.977537864908157`"}], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "aapl", "\t Predicted ", 4.676235417430051*^11, " vs. ", 5.5*^11, 
   "\t Price/prediction: ", 17.61597757673779, 
   "% \t E[r]: ", -14.977537864908157`, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710212225295*^9, 3.6737111945341473`*^9, 
  3.6898626842900887`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bidu\"\>", "\[InvisibleSpace]", "\<\"\\t Predicted \"\>", 
   "\[InvisibleSpace]", "5.755413351821979`*^10", 
   "\[InvisibleSpace]", "\<\" vs. \"\>", "\[InvisibleSpace]", "6.407`*^10", 
   "\[InvisibleSpace]", "\<\"\\t Price/prediction: \"\>", "\[InvisibleSpace]",
    "11.321283257122602`", "\[InvisibleSpace]", "\<\"% \\t E[r]: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "10.169918029936326`"}], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "bidu", "\t Predicted ", 5.755413351821979*^10, " vs. ", 6.407*^10, 
   "\t Price/prediction: ", 11.321283257122602`, 
   "% \t E[r]: ", -10.169918029936326`, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710212225295*^9, 3.6737111945341473`*^9, 
  3.6898626843027153`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"intc\"\>", "\[InvisibleSpace]", "\<\"\\t Predicted \"\>", 
   "\[InvisibleSpace]", "2.303925083973106`*^11", 
   "\[InvisibleSpace]", "\<\" vs. \"\>", "\[InvisibleSpace]", "1.491`*^11", 
   "\[InvisibleSpace]", "\<\"\\t Price/prediction: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "35.284354062903006`"}], 
   "\[InvisibleSpace]", "\<\"% \\t E[r]: \"\>", "\[InvisibleSpace]", 
   "54.522138428779755`", "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "intc", "\t Predicted ", 2.303925083973106*^11, " vs. ", 1.491*^11, 
   "\t Price/prediction: ", -35.284354062903006`, "% \t E[r]: ", 
   54.522138428779755`, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710212225295*^9, 3.6737111945341473`*^9, 
  3.6898626843153667`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ibm\"\>", "\[InvisibleSpace]", "\<\"\\t Predicted \"\>", 
   "\[InvisibleSpace]", "1.9543833440503308`*^11", 
   "\[InvisibleSpace]", "\<\" vs. \"\>", "\[InvisibleSpace]", "1.467`*^11", 
   "\[InvisibleSpace]", "\<\"\\t Price/prediction: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "24.93796038193105`"}], 
   "\[InvisibleSpace]", "\<\"% \\t E[r]: \"\>", "\[InvisibleSpace]", 
   "33.223131837105`", "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "ibm", "\t Predicted ", 1.9543833440503308`*^11, " vs. ", 1.467*^11, 
   "\t Price/prediction: ", -24.93796038193105, "% \t E[r]: ", 
   33.223131837105, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710212225295*^9, 3.6737111945341473`*^9, 
  3.689862684330717*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"twtr\"\>", "\[InvisibleSpace]", "\<\"\\t Predicted \"\>", 
   "\[InvisibleSpace]", "7.042145266129141`*^10", 
   "\[InvisibleSpace]", "\<\" vs. \"\>", "\[InvisibleSpace]", "1.06`*^10", 
   "\[InvisibleSpace]", "\<\"\\t Price/prediction: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "84.94776861394325`"}], 
   "\[InvisibleSpace]", "\<\"% \\t E[r]: \"\>", "\[InvisibleSpace]", 
   "564.3533269933152`", "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "twtr", "\t Predicted ", 7.042145266129141*^10, " vs. ", 1.06*^10, 
   "\t Price/prediction: ", -84.94776861394325, "% \t E[r]: ", 
   564.3533269933152, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.673710212225295*^9, 3.6737111945341473`*^9, 
  3.689862684346899*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6733805033358803`*^9, 3.673380504126946*^9}, {
  3.6733828993869543`*^9, 3.6733829056272697`*^9}, {3.673399905413859*^9, 
  3.673399906527382*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["drafting / debugging", "Subsection",
 CellChangeTimes->{{3.673366640993947*^9, 3.67336667553596*^9}, {
  3.673372110556848*^9, 3.6733721135448627`*^9}}],

Cell[BoxData[
 RowBox[{"Flatten", "[", "trainingRows", "]"}]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.673066440307467*^9, 3.673066444667699*^9}, 
   3.673066635017599*^9, {3.673066931733603*^9, 3.673066932605379*^9}, {
   3.673108065499795*^9, 3.67310806832864*^9}, {3.673108159987286*^9, 
   3.673108186011649*^9}, 3.673380604527673*^9}],

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", "p", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{
   "1.179`*^11", ",", "333000", ",", "353900", ",", "7.638`*^9", ",", 
    "9195657000", ",", "0.77`", ",", "38.25622169035443`", ",", "1.14`", ",", 
    "1.56`"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{
   "7.799`*^10", ",", "61814", ",", "1.262`*^6", ",", "1.704`*^10", ",", 
    "686555233", ",", "24.07`", ",", "29.8017829298379`", ",", 
    RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}], ",", "0"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{
   "1.539`*^11", ",", "215000", ",", "715900", ",", "1.069`*^10", ",", 
    "1539825376", ",", "6.85`", ",", "4.462585278572821`", ",", "1.32`", ",", 
    "2.35`"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{
   "7.018`*^10", ",", "127100", ",", "552200", ",", "1.538`*^10", ",", 
    "2750644288", ",", "5.56`", ",", "20.15933778700398`", ",", "3.65`", ",", 
    "1.34`"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.673066952017273*^9, 3.6730669589307423`*^9}, 
   3.6730670043212557`*^9, {3.67306705538237*^9, 3.67306716413441*^9}, {
   3.6731084070424843`*^9, 3.673108412247334*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.673226130764752*^9, 3.673226131835073*^9}}],

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.3", ",", "\"\<P\>\""}], "}"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.8", ",", "\"\<Q\>\""}], "}"}], "\[Rule]", "2.5"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.9", ",", "\"\<Q\>\""}], "}"}], "\[Rule]", "3"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", "\"\<P\>\""}], "}"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.2"}], ",", "\"\<P\>\""}], "}"}], "\[Rule]", 
      RowBox[{"-", "4.2"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.3", ",", "\"\<Q\>\""}], "}"}], "\[Rule]", "2"}]}], "}"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"{", 
   RowBox[{"1.8", ",", "\"\<Q\>\""}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.673104252675602*^9, 3.67310425350695*^9}, 
   3.673226121210981*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MISC", "Title",
 CellChangeTimes->{{3.672761475794379*^9, 3.672761481490469*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RunScheduledTask", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"EmitSound", "[", 
      RowBox[{"Sound", "[", 
       RowBox[{"SoundNote", "[", "]"}], "]"}], "]"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.672444082909389*^9, 3.672444082923418*^9}, {
  3.672444233541317*^9, 3.6724442460356693`*^9}, {3.672452559554777*^9, 
  3.672452564447707*^9}}],

Cell[BoxData[
 RowBox[{"DateList", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"sample", "=", 
  RowBox[{"SystemDialogInput", "[", "\"\<RecordSound\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.673064059148135*^9, 3.673064081832539*^9}, {
  3.673064254399529*^9, 3.673064266518084*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   InterpretationBox[
    GraphicsBox[{
      {GrayLevel[0.9], RectangleBox[{0, 0}, {360, -164}]}, {InsetBox[
        GraphicsBox[InsetBox[
          GraphicsBox[RasterBox[CompressedData["
1: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
+MXtUPgc7/68qx53f7g94qEBKRR3yvrrVXCNqj6Yl9KIcWrBRvJHK7CrEXJX
9MoxUeX5E1yvRsjYvCfZeY1I+plVWLFE4vKqg5K5XzUE18si8tTEiEq9Md0s
rRSXXfZmD9NFOKYl7iyYXIflk5YXfe6uxyrzFuP2tVU47siuf7SyElIzu1S3
+RbDpX568Gz5CszL+/XZ4kMV3pvVFW95VoKq+3NSZz8QQShcd/2uXRkiCyyL
efbfcWuliW2sYxc2fTWvivDqhH3GpW26jGa83Bgwqq3cBN0Faof5V1rR4J+l
kD2nFq0/Z2qdfVyHoZ+D087qNkJq/6FIHyPJGJ+iF6lQj/nTru+K6K2Ek4ac
rPX6Mnyk/c0wGS9G+443K6iJJTBKGjgM23ycP3ZX62ZECWr6TZeU2Qpx8gN/
cPOUPET8jTculuR4+9t3uUc3FQF7wnrdXxciMuw1//5HIRb4Vi9S3CFEXWKv
dad2AX7vy72pNCDAinVmh5Zm56Km8ojtweMszEyvDPzozUCD3Fj6ojgWjKOn
Zq8N5+PYbh/7J6d4kPace2xOIgPv5dqLXnrkQjRGLjVpMw/Hxh3hygcVImj9
Okv3nTx8H5PtdfOQEMW+X+f6LSvE4Q0d3CQfAcrYT5ZeKC3Ejc8/neJpAlhE
HjW7/14Is8CqORttCyC1uGdAZbwALV3dlw1O8qF7511bTEwhftxUGrfmJos4
JA6JQ+KQOCQOiUPikDgkDolD4pA4JA6JQ+KQOCQOiUPikDgkDolD4pA4JA6J
Q+KQOCQOiUPikDgkDolD4pA4JA6JQ+KQOCQO/y+H4svi/okLGYjfbfmydYQC
49K1WlGZLHzembK7xJuD1GuLhYP1XDzX2ukibudC7ZHecS+/N+CGPNv8poWJ
lSd6lFmNNMj2/7AxnsCEW/9cS3t1NpZsTAlSjmVh9iSJ6O8sbEsw2dB+noUo
J/P2w3FULFV5YXdDmY3b678NJjXxwHx67MP+A0x82TZm7AsHLn48WC57VD0b
urO1EguW5WJ3fXJg3lcuHlmLtru6sbB/zstDM9NEoG7tj7pCKYZ/yEaHREcx
NGted0/8x8Cv2zS5nwF8KHYvpVT75KLW+e/tt9aFCNe2UdXSSENpV36n6Rc2
xI9nup8e5YA/QT/BczobBkf4sk/iGOBdDzL+t5CHr3O3V4DOxQc5duv0Xi7W
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
EO0VsZrYpXDLJ6+KCWVik9d3xU8El+89KZI7P0DHS/H5NtLbKAit/7vscj4N
0T2flPOJ/a6kkjEZZEXHxf2aV986FSN3a4j8+DMmHOmP7P//fo1afMjs44JS
uJza/20G0S+yCltzxi6XIVg3PujmAg5+Kcmb/ibyTj7bflV7ig3z8M+a+hYk
nNc7srxyBxWDnykbg8U4uNGiPX9AkQS2zPjRBTVMJBZ/GjO7RwLNadXIjH1c
hH896RJQSULdPw3vI39JeLBkxt0WQzaSNQ86vSL6mMRT7deZ8oSvSu05T9tU
TfSKVHm2dhkGlwuHyMM85Lnvy7+3sQX7jh/ZKjJ4g3TPY4t99ZvAu+b1JcK8
C52Hw08OfWvFys86XkVfWzA5ejPu2j8htl80OhzrLMCCyVLpjLcdoLjs8LS8
KILhQ2VZvxUinJYM20fJaIKR9GXdfHURwqJmhIWWiOAiL/a5fbYATQdpuoP7
GvFQHBksgl+OE8rLf4/VY9C5+5Ddw35Y4lH8W+c2TLnZV9R1iPD8X9yK0+q1
MDv85tNv1QaETG4I9xuuQvQsXc/NXpVwm7dS2eL/35vzjKO5Mq4SNLb/qmUR
PKw4UPv5RUI17lw8I7gaWAXSDK/KwNgy0B+fDYht5OGb4sfC2cf48I3J+ZXO
aMOi1KzlL1V6YD59szbEtA2xvqvV0g/2Q5z2cZay3P9fT3a40rxIgDUVnYNl
u9vAPDLQt1SrHS5V2Yz4Yj4irz0e2rVOiMmKYPv/NjTgkqvNVOtDLoQbKRZG
huWYefOn7p6U/39/Uv+rp7crUaY53yq5ugLLz0Z8/WHAQ7Zk7Z+FmTRMnfKZ
XUDwZmVLICf2aCW2bUT7cTITFxIeS6f9YaGm8vyZwvcMxOe2XFCcQ3jXyYLn
85KYiPzi9kNusAgX5ptl/X8fXbSTGT4YUwz7JPLGF9tKMW1/xFfpBA12aOVe
GWJhL+ODPIPwl0sj9/QyHjNQtmiPDJlJgQ7l94W3XSy8PLc2eWpnHu4NW9SO
B1Gw+8r2vn0mTMxUuqL+muhhc13GVCfKWbit6vfNLpGBi5dEticoZOjEHohJ
WETDLrmw1IGLhah6bz025Erk68LJtHfX6QhXNtk+P7gEWenvuovNaTD7ca/c
PZKE+ec327TGsfGj9+KPDAEFzvcd+F9/kLH01LGHQUFUbFfNu3kzlAK/zDbh
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
NsTkH6nKsimQZYnJV8aXon/3qzTBEhpUSpt81xpR8Wyxpfr2HAqS7syasfsZ
GzIV3v+oIGNT6wZHj9EGfOBmzl3X3whDP+r6N8bNYEyOzB0IaCTOR+zRBfcm
+Gh82Nx6vxU9kyv+LGxvhu+yCw6JVm0YT7fTXaHdCma/jaZREh+u8hMHNxg2
wvFx1o/RdW2osLQxUlNvhULnNbP3xgQ3vzySXb6pBTPdf9iLWDU4WaHf55tY
j5k51O9m9Gp8jL5nGBBRBbO1SVfWsKpwgjTQtnGyAtueN+owjjExp6fVw/Om
CNlWVSqrtdswrTUv9tL9ZmyoCTUw3CRA2qSMmJZhFQrMFam2KgKsNlZRzFGo
xi6TkVzZBB6iFSoHa/Jr4DxfQZa8qgobTE7T73XRkXZ2a5HBWDmsTXoZI308
/PhxxmtUhY+EObY9fbuq0HTi9C7J0z2waJ0n/mdCiHe3b2h1NXagzsVF9md4
N3b7LQmV6hZir7o8dSnRf4eSdGc+vCyCwc8lriFKfPwhl/E9o0TYx4pxH06u
w5iSS+DuC2WI9lOvX/6iDqZm9woHYpuwUmU+dphz4f3sZdWh+gpQWyMjFhDr
451v8o0m/CGlXpn0wouOADlawosSIhfbPBx0VlCxjMFZc/sFBe+dow5mHSDh
z2IfhwpiLlNn72pfM0DG7dk/Y847lkCRu6Yh7joDxmXxXnZvc9DDguUE4XWm
c7f8natXivwf1RkXpAlvOmnTl7iVjD7KlYSHVyjQMDh0PGkpFy/v6bxOMOEg
+vu9BrYeC6s/R/UMt5OhNJc7u8KPjp9zZpLV1tDR9Kj77o4cForLtZ+GbCch
7O45qV2vSehIS3xL3UHC/QLDYwWJNKzwzdSZ85mEyRNS2fOPM5GsFPk18Egu
Km5EDW2ToyJlb6fS1WkSrqYGK25QIyPy+Nbs5AMUjA0EbzwWzAac2fr9SsXY
82L5P429JEw/D73L/0DDwzP/LTxvywB589fBXhsqNkuvreWp0pGgFyJmtbcU
kltTV3f8JiMsIaN64Tgb3Ei2o4oEF6ZlZV1HUhmwDn1rO5voDVXWX9r3tdNg
FRw04PeLhsvqA8m150pxVKHbf2KYgcFHt0Ki5Oj44n/dW2HWa8jNYd2auY6M
Een3ci93F2Jb9ZttL/Io2P+vQ/fy+xLQ+n1i9WfnY7fPn/kW/jQYJ+nvuTWT
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
tbJt0/4VsO11Vri7igNV69oL52K7EXWkv3E20f9OO5GGta8JwTh4kntsqBns
6CfSccTzRmrat+n9qEfYx8dvFD2J3peQ1bbilgBTwjD/xuFmxAvm35aWb0LK
hzdye4/xYWojU6pdwMbtPPNcW+cKPD8gE73DogpxdrlMwzWVCH5ntYiyXwC5
H6/mFYw1Q3Y07NGAcwfURjd9eHCpBWxF9muOfCM0/OZ7fdZphXeS48saCh+P
DhZ3HJ7bDMsvZ6eyDgjwz6lOK2F9A3jqp7wCH1QjNQ/zRC94ULEct5fewIH3
n4ryCz10cLPfXjtP4aB1gX2RxVEWnnzNpCUQOQlvMjm6VLMMuyYe757hR8Y2
+gLh7f9RdN7xVL5vHE8ZGUULISSraA9pfZKmUiGVUAotIxkpKWmoJKX0VWSP
iIzj7L0cx95ZodKgCKmUyO/5/eWPc5xzP/d9Xdfn/X6d83oOwYmdWpMl21OZ
WGJm9MY2pAhX+fZ6Z2kk/J0XfSytl4nbLaN975KZWPeOpT3nNBneFW0Fm5eT
QPXhfO6dy8R0r8Gk3rcM/LbQUZ0kJePuJFPvvMVMUM9lNhYzeJg+dkk5eJcA
9z6cD5voY4O5KWpLxUIyqmT/9H31LkKrn8KzrRBg5X+OlxavpWPR53tyVYE0
vJZ/dWZgLg+OkWuMZG/ToBZ2yOOWHBXn1T/1/HnBRnXg6/vHVzFxPIBZlU/M
hdKACL0jExwwnGL73XWKsEWvu12FzMLhUF95aRsTnbzAfR1qDOwf/ljsE1AE
G405SbJnaPjy0SQsrpeFPJ2RiylhFAysvivJeUuF448ry6TEdRf3p+p90KBj
veO0l8yZNIhLpqTkEvm+I+ew8dAuOpgx1tMXpPEQHcrpGqtlgE3RDR8rIeMB
z/J7WkwBlBdpFTyaxEHF5YyaoHiCy+PY3sFSGv5xJScXLGXC3CD11qU8MrSy
SU2hKwqxecz7UsAKCkofKkmeHmbhmwnlqPYnKgY3J/1wWVcAB2d9ebkoESKm
6dnEmrFBmaQ853ksG2s22xXu/8PCquyqu5UE569C5+VNM0rgIxdrZPylHBXL
XZXqBM3YVVfPv2zegXdxlwtHz7dC59L4228/RXgUyF3V6FcLPm1gydw6KSKP
z9p1jVqHhjVLmk18qnFboDB52+MOxMR5ybbkNaGMTV3Tu+r/vxdopXeksRK9
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
            "],
            ColorFunction->(Blend[{
               RGBColor[1, 1, 1], 
               RGBColor[0, 0, 1]}, #]& )],
           AspectRatio->Full,
           ImageSize->NCache[{
              Rational[21632, 11025]}, {1.9620861678004535`}],
           PlotRangePadding->None], {0, 0}, {0, 0}, {1.9620861678004535, 1}],
         AspectRatio->NCache[
           Rational[6, 35], 0.17142857142857143`],
         Background->GrayLevel[1],
         Frame->True,
         FrameStyle->GrayLevel[0.75],
         FrameTicks->False,
         ImagePadding->None,
         PlotRange->{{0, 1.9620861678004535`}, {0, 1}},
         PlotRangePadding->{
           Scaled[0.017142857142857144`], 
           Scaled[0.1]}], {180, -35}, ImageScaled[{0.5, 0.5}], {350, 60},
        Background->GrayLevel[0.9]], InsetBox[
        GraphicsBox[InsetBox[
          GraphicsBox[
           {RGBColor[0.325101, 0.364492, 0.820256], LineBox[CompressedData["
1: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
imwqYntCmSld471hvbMpqoaXyPOVN8XnjMuJIVUavkBft0OXJl62568XGLfr
QEnP/wT0WnS+/ffVL6h+snz2gvJ3nc7yJ7zAn4Vvy1na2vPbC9rPfwUbl/Sq
9hK7F63RnOsp8nz3kvZPFW1Zc3zRS6qPLP+9RJ82ExBVUMS78080bu9eon6n
cb37u4s8H77E6LaR6qa1RVyUj3PZV1gh7nre+Jg9P77C85uP3ZPvCdjUrsfr
/2a+gsOokePN40WeL19hYGTZliqDCpOVB3wFMWBdD3OyHS+9wiXH1PodWwno
Hh56PLvwa0jFumxAPpHn09dUb6srAfcak4Y/xO4KdjzwGqUW+yyseFZA7swx
rrfuvEb8sC+LU4qIPN++pvhMayknkNfYVnWgm7DBnn/fUL59mSv0mj3sDZxv
j5jgeEDk+fgNjlUbElZMFHAu6OaD3pfeINZ/tdZ3uT0/v8F5nzuPN7oKWHt8
kfTGb2i/Wb5+iz0dXuwo/lrAuKltd/3r/ZbwM8vfb+FX0dfVOkdAp2Y/PmSe
fIvgLM0Fv6Eiz+dv0WN+x5I/awio9O3t5Df6tzgy6pww97Edz7zDppENnUqc
EvDVd0eIe+d3uLNkWrNRa+z5/h1cA9uVPacTkHhoUPt1+9/R+7H8/w4zXGu5
PHYR4DWhzOVxGe/wOdAq9v9srwfvUd931vZmawWcbJhYomPL91h+ddTY818E
Xh/e0/OskLJJha3vKX5ZvXiP7ddGPw6YIMD57XTNp9j38D3QR0yKtdeP9+ib
e07VY7O0vnI6LueDQ3vH9/zWQeT1xAfVM3rtmlJUxL5mqzOTu/ogeUyat0OC
vb74oF9u8abL2ouQkqdj8CwfxBW413d4GTWvNz6EL+Z/6zbo+UEfqk+s/vjQ
+o/PqLXlxjMfjA94v8gpzF6P8r4/wC//s5NZPlTfWYLK+36n29rsHQ6+dB5Z
vfJF6oLZ2wr0F9D4cHCdFa190Xrp7ScRUQKvX76E3yqtvDt25gRfeO7vuefB
Ins986X4LzLx0MFR233RdmnV33932uubL7pWdDiH8QK+wc2v5z1f6p9YvfOl
/KZr6PKjVYIv5WdW/3zR+cC+Mk0DpPiQdrf2H1/Kj6we+mF2u5juLjulfuVj
ldmlG/nBdbfbzx7/7PXRj9bjWfKvc3+G+1H9YfXSj87r9bdZUgbyo+dn9dOP
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
DBRsNTFi+/BE6rcZX5GItQnnz/gEZ+LXlSHzcmcmEj5g/EUi+Rs+VXAqsHxN
IuU/xmdIP++a0mDqDAESuJUQaCLtL+M3EnGr1autxxtI+D+3ttxx0v4yvkN6
/7VP+9XIVSFtsRzRiTDXztevSB015z8SqX+Nk9DFyNBErKzzqpLXf2rOhyRS
/IS5fCkakplI/CrjRxJRKevR2J9vs+AbpLsmQUJ4T0p5tcVVzfmSRPwbLCOG
LLzsktzDu0gSqnV1XzDknZbzJ0lY4FXQreCJNCjtVPUk7AqLDt7zTcv5lCTs
rzNh9s20DNyp/WrlzVZJ+HmncLVHcwycX0nCmbQnU/ofTMcVCU1LLTUsDklP
irvqON+SBFtv18Gn/ZJxTlqNU+Olz5s/cHb4Ew3nX5Iw07a1cKsPyTi29nA/
6ZVwqqnHiNhgI+djkjDmccCEsldjsde8RTpSSShnPrdq+h4152eSMGuX4/g+
qkQor3sqCUnnixbPjTdyviYJLRNy99YxhkH6YxKkSAKC/nWpuk/L+ZskvGxQ
ddIHbSzc+ionEPXnTCrgpDVzPicJvoWOhY1zDMN8Jb0moWnBhItbL2dzficJ
z4XQ+hEjX2J6s06GNEMSchd7tHh10cb5niRkXV8w02e0P+Tq5/w7CS51L/Q+
GZHN+Z9klDj788XKklehwLmyyegXeP4/dYyN80HJaJbStKht1QsMUAB7MtxL
9enhsDOH80PJiKvZKt8j7U1IxclZ2mN4LYi4OKSNjfNFyej2Mdip/4Bn6LQg
x9p6eDLeBIiT2vvbOH+UjFVLpiy41vcOWmWo9t6emYyjW0pnH3ls5nxSMl6k
RreZa/VDY6WBS8bHeOcy/dxyOL+UDN8rNcvEzZkKmT06cyAZG33/NDzy3sT5
pmSIL2avsm6MQ6UOckeTDM2nnAEVUsycf0pG9b1Ob7om3kPp2zdkBgMbtocG
Fqhv4nxUMj4cerqizqskFFEa+mQsqR31LtvfwPmpZIT09dz+oGoi/h7aKyN+
zNh0cVz/EB3nq5KR3WFB0+g/UfiWb32g9WMycmL2eDxw13H+Slqf1c0+BGgy
YF2xcPqcIinofPzLYN9MA+ezUuA5fO7I3bYQKHRFtRQs7lOqmjZBzfmtFOoX
5ew8ulUKzI/X+GyvbOR8VwqO+VuStx2OR2IE2kT0SaHnY/xXCuo1j21VaV8c
IuVvj09B2csjhyYd0XA+LAWnb50I8h6cisAn8oalQPf6chvvohbOj6Wg3ea9
OTP+JeNtwwoF2m1LofzH+LIUvO+mErzUqVDS0akUxA5MPd2zjInzZyk4kSVm
VKiWivslvneqdzcFr6qsSm/QU8v5tBTMKbixyuQqyZDB0bl3KRiydUK7l101
nF9LgcO7yq2670uHhwJ/UvCrndwx6jnfloJhay6eqPMvAydnywUyBbbqsYGd
jms5/5aCF6sny+gHB5PfXMv3OwWH3Vo+zN2i5XxcKhKsaeneazOhtFtlU3F8
0b+WLT7pOT+Xig6/Pzxc3zkVG95eSrU1SEX9TbtOdnY3cr4uFTeaXbqT2yIF
KxQAm4qtO57VjDio4fyd9HsXhm2b9SMTC69tL6Malkr5jfF5qehf8Yg2tpiU
Z5SGJBVzYyLD/h3UcX4vFfsKz57mOCIZk/bN6Re1OhXJbc5PLu2v53xfKq6u
kxF5AlyUBlN6n5qXB4nuBs7/pSLG+0PssRlxUNrnS6nIF6RfXWKSgfOBqQjK
N3PIvl0RkJKtdIRSMXXK4Q3V+xk5Pyj9var5tgljQ9F1jMKI4eJajz5v/mZz
vjAVhx99DBg9NwFtQ2pIGVlaj8vHF1QaYeL8YSrXF2PQrJvSUeHt5qfFevsb
OZ+YiuYlBl3a5B2GehJadCyShi1iqQKvehs4v5iGIZPvHD60IhkKHVgtDW4X
Om4p+MfI+cY0NDxWZmq7kskod1LtXaBVGpYZt9w+9MXA+cc0lDkZ1uXmZglH
OSQ4r++TBusxl+51/2o5H5lG5z+/fHzHpaFD4rhmNYrqOT+Zhlwpe5YXIvHT
8nzvgkVpcK1sXPn6m57zlWnY1LfsylJSn/Nx2u364tY0rD+cdTjfZgPnL9Nw
6fGc+Y8l3KXAhVNp2PfqwJbXpUycz0zDtEbR1Q++T4bCDtxJw5RVL0pV/qXl
/GYa1hT68Nq7XTJSXmz8MuBdGkYGr8hceV3L+c40tBmyYFz820Sw9iQNHw81
eOvsZuD8ZxpyvtepWzI8BSEXp8kVBKd6BYkRm3ScD01DiOgU3FiKM59ycgco
PV/Nf117vdZyfjQdC0+pzFfWSXlapkPKpmNtjQNndJe0nC9Nx92EFmW6SzhJ
Zr8uNEiHU4PxtRxg5PxpOmxvHc5WbiRARjMVu6RjXkHrjMNRBs6npmPXx/lD
9Y1ScCmzUptDw9JxeZksQGs5v5qO4J/zJtSvJ+GAkUUjCs1MR+2U8kWOrNdw
vjUdK27c25KvQiqO+P+cu3F1OuVPxr+mY/Slky/Xj0jHno7m/FJNxt9uC6xf
ggycj03Ht9qVB8yV6qBCT11KR68jnvXfvNRyfjYd/QpN69vdW4XVNaI6aZ6m
E75gfG063IukFFjqKtUNafUnhkg4xaHDddf9as7fpsO/9u7o7IsqKN1rRjpC
rf6p4zYZOZ+bjqXjzmiy+sdi6iq54qWjUFSET9cmRs7vpqPgtPhPOxdkYqzx
hNyxYv3NonV/t9NyvjcDhsEhA9tJfeZwOdyrZcC1VXkH7/sazv9mYPq9NlHF
J6sgJ4/HLTMofzA+OEPqS++cW188EU695q9s0icDV87er23YZuT8cAb+Vn45
MPRfOjowwhD74p6V8/bXcb44AwXS3HoWiUzEf1K1rbwoA0q7UtbOH2cgvWJs
/vKh6Wjo3r3fka0Z2PY8wWtilI7zyRl0PmvKcP5UBn64xr6sF6rn/HIGStSc
vPDz7VRUYAQyLtz+MO+pq5bzzRm4/XnkiQtTUiCBzUrf3mbgkFOZyot6qDn/
nIEn2h9SB5IERh9koNTWnm73Suo5H52BTyVqtO/yORm/Uz4P0eml9erh+v1l
cx3npzOovn0ZohwojNeM7hp7Tsv56kykr+379szqZFjk7qpMJqaNPbnvmWj3
h2Riw6z2P5a4JELbRkmQaDp3wMQiw/Wcz85E58CrZ2suSEX69Zfe/p0zMWPf
0zp962s5v50Jz47d3+3vkoH4ykrBo99nfHcmhOK3j2YmJyN8v4f1yYxMHM29
16lcBS3nvzNxtuHv3TE70uD/RwEwmNGo55x3q4ycD8/EmA6NSx7pkYrXblvq
X92fiTJjHOoPPavl/Hgmzo+q2+LnjCQ81SiAFGK9PotK9NVxvjwT4V87p40+
mQKZTTv2NBN9GvZdHXNbzfnzTEQ2Gb9Mk5iGq6FKg4Gf+WaX7PRCy/n0TCSM
HH7GqVEqWHhkIura3KJnbBrOr2fiyJYLl6fkpuH4I6VhRIpb9Bv3aQbOt2di
3jZtyspRKdhfT0YUWah3JcDW5p6G8+9ZCJqVWKRMuxRsP6UQANig675tb4yW
8/FZ+DezwHKX71LeLlri19SWWahRZkYNyyAN5+ezsKXCmxGVolKwjBE66NJk
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
cGC4mvvXjKgyuUrl8t9VyDpZU8rwRppvYn42I/kzJir2PiPN7zF/m5H8wUkO
MsNqROf8m6L76kXudzMi3/sN3Vb0EuCsGDqMNP/M/G9Gmg+KksvPNyP5t5kf
zkj+58Ht1+2vld+ENw8dWnZppeb+OBPKfHf62ryFANkdNbGECRkGpwPDOqi5
X86E9D83l1ZyVEGBuxVN5K9m/jkTIgO1z6Y0UUGRM2ub6L415qczkf7Qpdpk
n1LNTNjXoWlk92Ui99eZ6H4Mpb1ub6L5Iea3M2HY5R+Bng4C2iiGLxOeunxy
G3nBPj9rovtXHvSXHW8m8l8zP54JupSVo6rkE9BUpvOcTTTvyvx50u+PrFGu
XlgWbsj2jCkm0o+YX88ELP/l9m2MCnWVBzLR/CHz75no/p4LsnywLO/9mJ/P
hGlXFi0oVV9AVSXATDRPxfx9Jpq/P3XJ/Wfj3Sa6H4P5/Uzkd1fkyqMm0p+Y
/89E+6vYzdxNdD8Z8wPmrZ/irrqe9/7MH2iieUy5mld+ZCJ/PPMLmmh+XFm+
l3nrz/yDJpo/3PhjiQQhTXT/EPMTmlDex5YVNVmAlOwlgGai+QHmLzTRfOFK
xT5rovv5mN/QRP7+Dw1kwG2i+XDmP8zb30VZo/JttphoHoP5EU3onvViu3qv
AKMMD79JX4++3/vvXfu8s4nmZWZL3dvXfNk0n8z8itm0P0JxuSHOlnB6sea+
Z+3z0dnIbLvHK7mFtN9yO1oxG17HG8VmdFFzP2M2vZ9iF6idjfwrr02qnk/N
/Y3ZdD+BPPymbZqNep30Pxy1Avc7ZsNQd0mlq4kqKPRX+2y6z4L5H7PpfiXZ
nTW5RzZ+Vjl8se0Skfshs+n+RrnanB2YTfPVzB+ZTflFoduds2k+kPkls2me
6b1sf5qSTfcfMf9k3vt3O5ordezZWKUkAJH7KbNp/71leW9ZNs0/Mn9lNs2H
tysoK+bZdD8S81tm03zPozey4JP3fMx/mU3zac1lO8HRbJpvY37MbAi7+mVN
7SZA+XPu2TRfwvyZ2XR/pKzOPLmeTfNZzK+ZTfcfXLwqC7LZdP8P829m0/y5
kt5eZtN8D/NzZtP9BbI5co5/Ns1HM39nNs2/lY/2vH0lMpvik/k9s2l+/7Bi
T89GlwO54yett8+/Z5PfoLhiCMn7feYHzaZ57t2/qpcbY8nGLa14uatG5P7Q
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
8Rt235ad//gfUq5RFQ==
             "]]},
           AspectRatio->Full,
           PlotRange->{Automatic, {0, 1}},
           PlotRangePadding->None], {0, 0}, {0, 0}, {1.9620861678004535, 1}],
         AspectRatio->NCache[
           Rational[6, 35], 0.17142857142857143`],
         Background->GrayLevel[1],
         Frame->True,
         FrameStyle->GrayLevel[0.75],
         FrameTicks->False,
         ImagePadding->None,
         PlotRange->{{0, 1.9620861678004535`}, {0, 1}},
         PlotRangePadding->{
           Scaled[0.017142857142857144`], 
           Scaled[0.1]}], {180, -100}, ImageScaled[{0.5, 0.5}], {350, 60},
        Background->GrayLevel[0.9]]}, InsetBox[
       StyleBox[
        TemplateBox[{
         StyleBox[
          "\" | \"", FontSize -> 14, FontColor -> GrayLevel[0.75], 
           StripOnInput -> False],
          TemplateBox[{"\"1.96\"", "\" s\""}, "RowDefault"],
          TemplateBox[{"44100", "\" Hz\""}, "RowDefault"]},
         "RowWithSeparator"], "DialogStyle",
        StripOnInput->False], {355, -159}, Scaled[{1, 0}]], 
      TagBox[
       TooltipBox[
        TagBox[{
          {GrayLevel[0.9], RectangleBox[{5, -158}, {29, -135}]}, 
          {GrayLevel[0.3], 
           PolygonBox[
            NCache[{{13, -153}, {13, -140}, {21, Rational[-293, 2]}, {
              13, -153}}, {{13, -153}, {13, -140}, {21, -146.5}, {
              13, -153}}]]}, 
          {GrayLevel[0.5], 
           
           StyleBox[
            LineBox[{{5, -158}, {5, -135}, {29, -135}, {29, -158}, {5, -158}}],
            Antialiasing->False]}},
         EventHandlerTag[{"MouseClicked" :> FEPrivate`EmitSound[
             SampledSoundList[CompressedData["
1:eJyMvUtvXUe2pbvv/R1qqPpuuMmG4LN76Z6FKgPHQApIWul0KuXX1ntToqQt
UU/qLVEPS7RNy3Y+Kk9VddkQUPwhaugnsMmGG3VRjm8A8wvGyUtACqxXrFhr
x4qYMeaYY/6Xo9/81z/9v5PJ5P/5//5N/uv//X8yWdr4t/9bzp/+Vm6/aNtP
fiuXnrf936p81s571cqXrWz799r29ndt/2Y9b69tL7Xjey9quaTrlriO+7f9
e7SvtX/vcX2e+fN6Pe3nPjzH3rO6vU29L+p11Md9l76t9+e6+UYt92jPs1ry
fpeeqj3cZ0PXPd3/+rRnUB+/c363R/W8uZ7D99nW/fI+Xgzuv1GPpz49D++d
/bN7tX2799v9Hray/b7bHH9Qyxnl3Xr93iO9z1bPUqt3qfX3+cNaP/1pibLt
n7V6Z7fafW7X+85u1/rZnt1p56+3sm3P1mt7ZzdbeaOVV9rxa9q/pu2rtV2z
xW/luxUdb+W7y60881u5+G+/lTt/rPsn77XyyP/+7bzft/O+aPunv+2ffNzK
z1p5tJX8sd3qmRxTyfELrbzRyivtvguVV+v2ZK2VN9t+ymt1/+ReK++28kE7
704rb7VyXcfX1J52/fRhKx+1/a3+6eO2TdnO22nbk+dtu5WLp61s25ONev7i
Sdvfzpv6/Bd1/85GLbluR9ctNur9d6inlYtn9fjkWb0+5+l5pqpn8rJtP1P7
qO/bWk5Upj62n9fn4jran/f5TO16puuf6X1v1G3eD+93R++FduV3fKH2fKvn
dzue6TnZ/2T/32Wh8xb+PVQ/7eE97+g9TvS+6JeL1t7Jpt67nsPXTf0euP+G
2qf+ON3Q86u/5Xj7jhb39+/f/F68P8pJ+4529F6n+r353nKfR/V+i9u1zHjS
xomJxoPJk1ov98/zqN/tqB1cz3PxviaP6v0yTjBeeXyjnbSf8bGNs4yTGefY
zzjYxsWMo4zPnH+9Xp96R/vXa3tyvcf1y/W63P+22nWjPhf7/VyLK7WejPv3
dd3NQXuuqx3X6v3dLp6feaO7nlLzW85f1PvkPfj9Us9lPecVba+28mwr5608
/Z9fP/G8q99rclXXX6/Pm3n4qvav6/kW9fx8b5yv3zvX8Xs9rN+Fv8d81/pO
uuP3dT/qv1e3c597g/7Ed6txZHK/3g97IeMI37fmf48jGffY1ri3UJn2eP5n
PNK4nHH70X9+X+wc2r3j8elhfe6Jx1e27+i7tn3F+5H9NfH4fK++r5x3V+fz
nd6o7cn91nXf2/W69IM7es7bg+s1rvO7u//lPfJePD/x3t2f/T553w/qduYH
vr+79X5+X9Tr32/i+z6uxzNPq91Tv2eez/380f7ne35fyJ6KXfC81uv5NnYr
9hJ2z7e6XvN17GDa6+9Q83/a/Vj3f1TPX/j7cL+lnzLOMM7SzzhOv2a81jzF
+J7xm3XX+VaeaeXnrTzVStZpXud5Hcg676Tq/7qVJ1rJPHS8lcfq+ZkPacdM
5Qm1g/ouqmSeW2nlJe3XOjP1f652X9b7OK7zD7fyQ70P6pmqvRx/v5Wstznf
f1z3ZWtvW48v/r1dt6z28Dt98G/1+s/qfVnPU9+7U62c/VbufNqu/6jtP9H2
f9PKP9Xjiz+07d/peVo7cr9/r9fvfNXqP93KhkO8m7fjf6z3pR3vzrXyfCtP
6jnO1fbs/LntX631v7uo/ZfVHu5zobaP95PzVnVeqzc4DPgNOFLDfXaN7wj/
2b2i88GNKO+oXrbBxcCp7tXzwaWCY7X6wLG4DpwsOCL4GDgaOF3b3gNPFk4a
vFN4bXDTR7We4NLU+3j/+sEbaRe4ofE87pN2gQeClz6t7dvm/Bf1vrQruC04
tvHchpcHz6Ye4drz7+v54OWHttp5DR9fasePbNXjlNTD9hJ4+vf1Ou7D/bdf
7X/9G86nfT/o/j/+Vq5u1eObP9bt1ba92c47sFWvozzwY73/5uC8zde/lW/b
+W/b/l9pd9u//UPd5rpNvVeeb/5DvY7fYZvj39f9+D3wW7Afv8f2y7pNP8CP
QD/Yk79iLj8Efokl+U3iv9D9qJd+Tv8Gf6cfp58PvrN8J3w/lI/q92S/Q74T
+wHkr6H+PY0bOZ/xgHHn0f7t2FZ7du/V7zvncx/OZ5zDj9DGP8Y96sm4Ca4P
3s55N7Wfcdj+ght1O+Pvbe33/Tzuq56Z/QS36nU5n5Lz5RegnneXWsl8xvzH
vHy21dPmpcx3J+tx7IjMx+147Ipm98RuwH7EHvqkbTd7ietid3Ac+6fZIZ09
xjb21jEdb3/xh/yl1fOBttv5nNf9Lat+26nYjbZruQ47Ebvtd3oe9vt5l+v7
yXuZ6Tye9zOVHJ+qHp4f+6vZT7HXsLv4nekfp7Td7KNd7Bv5rbK/+a92r9b+
lf59s+5Pu75QP6Tfrgz67+V6H55jdr1+H1xP+6g/9thC9V/Wfd2O04NypvPP
1feR74r3jb3Kd3ai7vdzpX79TsP2n67fGf0hfsCv6nfL75A/1hff6L4nan1p
90ptV9rj44xLrAvoj3/Rdav1OfL7tufFvs75vF/Z7Rnf2KafYpfTX/DnMt7e
rNtdKX9yvgPGfeaFO6rvto4zX7X5K/as5knmddYFzAP2f8fulx9+rvWA/fDh
YeD/vlvbn/Pbc3idsEe7ZbfHvhAPgPPx/3frEvgC/C72x/O+GYeYN9frc3bz
vefr9Xp9xgX76el312v/oR9m/321m9/9mtp3W/vvaj/tuqn6b+j+vI/r+r4u
6HrGv1XVt6jnZ/zQOJj5nXmpzWfhE/DX5v2MN8yzzJfMnx9qm/kWHGhF2+da
2fwgC/tX8DPIT5VSuHSHd6/X48Hz8A+w39vgrOCp9vsZn98YnOfj4I3yM8Rf
KBw0/tIHg+cTDjsRHp/nEO4cPPxOLYPzm5fBefYzgmeu1XLo97qu68EDwfPA
/8A9wSvP1no7HPGc9tP/Ttd60r/oh1/qflx/oZa57pKOX1U7LtTn7fBJ+dtS
yl8ZPxz9fuBnzHu0H+Rf+Bvj16PeO2qH/Yk810U9F+/jrLbxa/I7YBfzHvi9
GT+O6Hx+d+xz47+f6fxjqv9LXUe7V9Q+cPUTuv6E3ttJtfuknhfcmL/P1K7P
1S7662nt/1L1n9N9D+u5lnX/z/Rc3J/3xPqNv+O678e6bnlwXfvr1h2ntY2d
q/UH9m3mZ+ZT7LY2/y3Jnoi9tV7378pOiL3DPHpb92nz8rbsJ/Me57JvbOdQ
gpvY3sp5wjeMl3b8RttXg/3BZcCbhHeaNxqcVfiwS/DV8F3hk4JzjXBYcCW9
r23/jg/0fE9ru4Ijt+Md7nKv9hPsrLRb9ir1dfa08KjY0es6rvcevGqjHo+d
6PZeq9udfc9zPtj/Psa/gnsJT8J+tr2/JJwu38t11XOv1pd1/3ptZ97/zfpc
3J96vb7Ld7/QfTQOmB9rP0zWB17vsb5mvMFuvqz6hbPNPP54fDJPWP4c6s19
WD/491/U5wi+J9wi9jt8YPyA8sP5vXb430U99/V6v+AVrBPmeg7eJ+tx44+X
63XBe6gXfKCN+8Ed2M/6/kS9nvVF/KjMn8xPwgdjPzBftXk1dhv2C/NcswMy
v6/V87Mfews7F7tYvLTY1ZwP74x1CvazeHeph/MpzccxnxC+kuz+bv1yq5Yd
L4rnEQ9q4edo54eHIr6WeV5TrU/CsxEPMusMt8PrNfg81AdfWDyr8Kbg8Y54
q/BA4MV+37Zftfu0cvFd2994tzuUL3R+46ksXtXzws9t5Q71cb+t38qtQXnw
x9Z+yrZ/+uP+xxft+I7qWej85Va+e93qa+XBn9r+Vk5+bvvb8UXbP237F23/
Vtu/w/Gf6nXLP9X7cR77D/7Sjv+s++u8ha/j/Hb9gvLnenxLz7X8c70f509U
L8/P805/qe9pS89/UM9JeVDlhOv4Hfi9+X1/GPyO6ofpR62enR/rNvVOvqv1
cpztg+o/1LtD/e36xQ86Tr9vxyff13byfYR/zndrnhffpeIxFvpuO9yFcZHx
UONA+G8aN8MP032nGsfCd3P8iHjsC7U7fP+n9fjUeBPjrXCtHY3/O2pXxnHz
yxVXYz5vcDXGdeYh8JoB7zw4wtV6n46vaV449bDuZr3Lupn5+azKZZXgAMz7
+ONYp3q96+sPa5v1LPW8r/JwvU/8j/KP5nr5CbFbgq/az+d1+4d6Tvv7FPeV
bXBZ/K7Ua37bYV13pLYzf+AH3Adc+He1/jwf5e/VzvbH84e3Rjvf1/Mv6z7U
w3tr53V4tfmO3g+Ogn92quez39d8PNpF/+I9Gr8yX9D+Zu8HvzGPE9xpbdD+
Y2rHl7oP7eZ98fvCs8Mf+EH93WJve5t+D56DnY7/Ed6e/J3mL8Zf8IGuO7f/
ealvXvtB2vUH1Uu/4Xcw/8D9mt/ttErGKd77KV3PceNy5glwPbgwuOsV7ed3
W+h+R9XOL7XNn8/zuMGfv3+2P9F3ZR7Gcd1P32X6F/vFg3C/yh/v6Xd1v/3Y
9A/6bfip5puaX+qSdbD96vBAFZ/b8VfNX2jr4Kzr7T+8Wvfvuv6Vet+sx1l3
U98AV9jVun9m/+bV2s5d4Sk8R+oTXsP7TfvEdwruyv77dTsleMlaLcHHwEPB
aRNfPsABo49gvFTn7cnPbN6c8bbwaB/W6/C37xp/a9vGOYO3mb/W9gcvpn33
amlewLZxQe/n/er6ua8zL9A8BPELZsJFgwsqnt+8ZJ4reOvDetx4eHjBOi+4
//16Xc7X+0u/8Xu/U8vgsvdrPR0uTTsf73+f4PjmOQpXd7vBXzsetOvbqNfN
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
dv3K+/hR2+28zZ9r+9624+T7fEP+z9e1pP4DP9X+Rfve6L3zHGy/Vb/j9+Y4
75d+4X7A/ZJXVP3eejPY59HjES+/0+mRbn3Gi5Huj/j41uuJ3+mZrhfPBp5P
ePbwfRhXlGd2WzyjxAtIJ8h+NuscmecU/XPz4607z3wjfXv7o7KOkh5mp79J
vdZ3ua/7M7+1+rp8x/DstG7t9C7F846OmvXDGn8guIDwD+ehyP0U/93pW5qP
YL6gcQfr+FEfdv4VHZ9r23xs67lSYhehayheaqcjcEb3x09g3QPrHztPpXTI
g7ux7nCcMSV8YuPo1mN5WOuf+np0VMCdjU9id1tXWnZ77HXHbUpHBdw8etLK
K2n8FNwd/JzjHW7+tNazEG6edY/iVxfEETvvu3B76qeetNfrLT1nF0drvNjX
084narfWbznf67LB+gZe+1TvI/G+Wq9160vlj2S9NdXvlzhcxY/7/e143WXd
H/tbfJ7zhj6qzz8x3q18WYkTtp/JPH2v+xRPkPfg+yrPV5fXy3x2thk37qj9
g/HD9ezou8z3ZVyB70v4Q/KxEhetfLbWj+I9ZP3u90CeBMdVOE8y75Pj0jtI
+UTbzq+AP8R8f0rrQ3idzHHzzllff63jzDcjPVTz1Kwzo3xluc7+B+P9X+r8
9hc+IfMwf4rn7vIeSjc558lPbzw/fgThdeERKP97cEP4Hid1nnRdc57tlk91
/IzaI/5meM7YK+CY8IIc503+RfOBbEfhfzir51N+IfuhHD9nnmDsLvoTfF3F
x+U886+tcy8/VfY7Ls32lnmtxn34HsCP8OOBL7E9ipO7MNgexBXl+NeqV3lH
cl/F6QSHc+n8hc7zYJ0Gxg3ej+3JmZ53VfWYd3te9UnXvcvT97lK7gfv95jq
O6F6aId59ebBWvfafkbrALXjHd+V8Y3+rjiE1OO/gZ58hy/SHu7zvq47rOew
X9k6+Y6vsh49vxvrBecdop9cqsczD1kPnv7pecjxWSfU/jMqvc7xPHdR7XG8
m/vZGZ3Hft7Hl9rmffE7e/3oedHxsOI7Z9t5E7gPvxt/1DuKu1vVc860vabz
nXeA92s+AO1hnIaPaV6j8waTh9h+dMVPJE7IvEnFC3W61dI1SXyb8jcnjugb
HVfetdQjf/2ucHHrZXd+S/v5r6p9zkvtvB+rqtf54Xhu8UKD65snfEfPNdJT
sT9XOivx20uHIHwA/MzyB0QXQfkqO31k+RXM20783JP99xvvB1dbEg4Ivm28
LXF99luwX/4LcEn8BY776/B0tl/WdsUfAu6Jf0P+EHTF9+Q3WBr4LYIrglPK
D0M7aU+nyyI9cPwvHKfdtGtJ7QF333b7dX+ee+7fZVP18Hyv6v3iR5FeOdfb
bwMe/1b+gCX5BfAfHBHevyr83n6X/C7yQ+DfsF9kLtzb+u32Z8VvZb15PWf6
07f1Pnvyi/A+wee31W+tp5M4Vb5Pf3/STe/iXvUdp3yq+uDlWIfH+kCOU5UO
lONiu3HtpuqBT2L/KPOE+OiZR8Qfz3Gvs1inMZ8xLxLvwLzouIQVbYvPnnn4
Uq2nw82JU1Q8WErnDXLcne0w7A7sEuwN7NOTKrnO6yHrzl1UO3yd895xf+fL
+Vztx852HK95lopj63Ryndd7dB7liuq3Xcgfv4PXOcZzsMNXdZ7td9vr0oeI
XW99Up9PfebTWx/CvHtwRukZL8SXd37FiXC54J/WPTFON9AnDW74cP/j5j0Z
b7UeSeoVrhhek3Dm4IbmQwnvBg+eCA+PfqnzYj6p+3fU3uCS9/c/P7jmA+2X
fqt166O//bg+n/HmtGNd5z3SfuuLGC9Wv08cyPW6P/3Y/dy6JYwnl1Wal2Tc
1HH9jGt818qD2OFgzmvk9fhhXW/dD8dpt/t1PGzFUQe/RBcAvrPwUOdlynpP
/MjsP1f3h7/seK1zg/rAW53fQ+s98zidz9x4ZxdXxnrVcY/aDo6JH1r5QoK3
ntBzrOh5T+3fHq/vurxM6K7cqNt5r9InyPzu35X2SofbcdXO99jxUrETPqll
8GfwdvRu4MGie0C/XN7/+uAffE8f1Pq674HvwDjk52ovf1xvPR63Y1rP6/wi
/g4P1+eLbjk4+qnBfvqN7MOZ1/vSSbFuuXXtu7gQxTnmd1muv1N+/z//2/77
iYeg36/U7ZTKM9flCZX/pvMHfFDPN5+y02OxH+CIjrsfoDfi8ZdxW/oinS6G
eN3Wa8h11ncxr5vylI7bf0H/xv5m3rK9zDx2WvfluZyHUzhpl4fC+K1xdto1
miedt4J24s+llB/T8ZjZr7w7XX5l+x+wZy+rHfaXOm/9tXr/+HE5rvjYtIf2
jXQDzYdZ1/OKh9Ph13M954l6Xewdnof3fbo+f9671wN+PuHpnQ7jTMed94r+
5nWL4uXS/zmf78A6NjzHKN/1VOdbT41xHr/r6fqdd/km5EfOPPvnWl8Xv6a4
O4+rsTccX3JV97OOuPUX7NdlXrGf1vpOwhGCM3CfgR1me8u89OAlistJfJdx
aeuZcN0VleYnXqnXB6+Rnpt1eq2jm3gm6RXneuXP2xaubf2P8EIVTxbdNeuY
gJ89q/ujvyyeanSgdbzDx57quZRvMHp2ei/WWzF+n23pwizpfXQ6MSNe7gj3
Ex93T+cFRxev1nrb+f3A8YUXBpcEbxb/Ftw9x40ng9eSDxMc13z6zVo6bsB5
QtN+tSd4u3B9SuP6qV94cvwS4lHnPvKXzP0+lE808REv9m9X4gwc9/FK5z2v
58c/4jye0ovHX7Gt9zZXv9jTe8x3sKF6n6l++YtGv8Oe9tvPNNfv2fmp+D2e
1f1z1+v3y3Wq1/1n2+1Xf8t5jFe8N+nn53cY6EE5Lnhp5Odj/AGnZz6w7rn9
m/Ir2x8anRnWy9bpAV8XDyzzsnVlHBfKupz2Ui/2wZ90/bnaTuch7fJAO+8Z
PDfzXowzsT7A/sEON7+l2WPRVXEcnu3JQV67jtep/E7O3+S8NfCrgwuKv2ne
r/PwBDfd0H3YhjcNH9f5eZSnMnmD4EPDX+Y4+iPwqeFPf1ePO+8l16ce9EqU
14l6p9pOXiLap/yL4Y2zX7oeydOo652PEz2QiZ4nfHHldQxfG30P3rPzI3Hc
/HB+B7+3F/V4eNff1uO5L+crz1L8Bm6P45LhYYvXHzxb/TJ5l1j3rdd+3OV9
dTz1YP3V6YFLFzzrcvMAWcc6L+911c86y340x5WYP8S4wvrL49Cyjh/XfnAI
x8163WZcx/i2eZ7W0bafDr1M1nVt3LbOiMdf498dvsX6zDqP1nmjPK9t493W
WQMfPl3v2+maKS9i+FDoHlCfdZevqz3cf61en/Ol9x3+kvTmrNth3NLzdJ7H
/GfhovFXm6cNf+yrQX3Uc35Q/7yWsQOs/8s6eK2eH7xWz+v1beyam/V866l3
cd/YC/ZnXNv/OWN3nNBx9Re/7/we4ot3etwz1ee4OHBm/qxzS8l4Yv1bvnOO
8z3z3fNdM64YJ2p/wV9HfrMV1e9xDrxq5F8HT1Q+hYXxO+N41/a/rsuzzvmn
1R7ayTh6Vu2aa7/5sc63gB1ovYdVtWu1lp3eyHnd/5Ku470bNza/xPczj2Hl
X9Tj+Ynf07xhcEbj7vQz/jyfndHvs6JtlcZRu7wbzr9xQe06qudzf6Hdzg/L
dTOVvD/rYPN8zit0XPWZF8/36JLvWnG01h2Lv0e6zxmHlP+wy8esPAHWb854
zfqLcZr4ZcUbZ5zWvNnl6WN96nhnxzGP8lbAT5NuU/Lxse4d5R8znqg48OBe
2r83WIfPhetRf3DSe3U7pdobXWTOv13vG/0s64BJF8s45baeN3kCxUcM3iP9
q/AThe8EDwKnEf5q/MN4SfAZ4V/hFSu+P7jbq3pdtoVjzZ/vX4LjpL2D/IbW
D5gL/woeJ1w2PGnhaX7ve8bzjKeOcCPxRFMav2W/8x/6uYVj57uS3hl4VPBf
+qV0GWbyI8zsN+B7vl+fr9OFEB4203cT/YT7tT3RW0CvwXpq3N/5Ra8P6uf6
m/U6f7/Wc4v/hu/5ho4/qM+X8dP5eaRrl99roBtHe/P+pZPX5Wm9VY/nua6r
PVqndHmNbtXrOh0lP594O7Hbb9b6hvlY12vp/EmJw7hTnyvP5/nmgZ5b+V2j
O+i8ufd1vnBX+90y/7IeYP6VHzPrWPyNF3S9S637Ov6a82K0vy4OD9zAeTqw
g7BjsG+IwxrZ/9bTcDyn/dHSiY29hZ2muM3gNzfq8eirOd7O/Mc11W8+ruNC
rc/mOFbHhY7ypZkXwnknB8+LvYv/3/HrzmNpPfArur95zYtaT+zt2/V43oP1
CHgPfn+3antSr/TvHJcb/rP4JNEvAP8e6DwEL5RuYXBI63VIR9C4aPROBvhs
cF3wWPBh8GP0qLfqdvBr9KzRnf6pljvoaP9cS/ZPfmnXt/1brXxH+VM9vqPt
ifZzfnS7OV862dED13H0u9HR3tmqz5P94Orf1zK66eiXb9XzjbPjR4heCzor
P9Tzg9erfeigH5QOeq6nPeDsP9T2dP4F2medd+m/RK/G+D798KXa/109b0f+
gfgr5H+IP0P+C/bz3DwX7yPvlftIb2c68AflPeBvkN+j07exjpDqz/fGe0Gf
RDpB8X9JfyY6JeLNJ65A+V8TT8H4Jf5Z/BLOO+A4gRHfzuOf8kF0vDGPi8qv
0OWVcL4H6xhwH+Yf5gXzg62r7nxonseNV0qXJP5Y86HN//xkcF/plSf/iHBZ
86rNR0s+POULjQ7Kn3Qf7KgjajfP93F9TrbDN4a3+0WtL8/L+8YuAEf6XPsv
qXR8l/K22j/tfChdnhDHF5n3Kbyz41ne0Lbn93u1fbbbOn1b5WXp+LEje8Z2
Erig9QiEz3a4Ktc5HoXvZsTHt+6edP47vjg611x/WPU5LkB6B9bdT79yP/tc
9dovaDzSujHSE4lOjXWFvY5wfkPzVcGDrXd8ZnCc92/73rzdsyqxQ91/vf+W
6qf/WmfLfmfzmZW/ZjG4rrsfxx3P5zxCrlfzSeYl5iPaY361v0fNK7kv5Zra
4feg36PLd2Q/vPnu1tMxfr+2fz3OY93tv6R6nEdJ8+PC66ZFPd75l5ivL6v+
0XrunO5zTe3k+zmmbfn1u3gMjUvWy7ZOjuN5Mq/iR5Bev3Wm4tfEXyA+WvzF
1s8CH7lWzw8+pXJbeH6ny2Ecynm0wZHWtd+4kHFDcCjhhsGZFOcev8dC1wm3
DK5IOeDtdTjf3focHZ5lPrl4212ecOGRXR7IAS/Z+SbjR7EesM+z/oB43MaD
7d/o9IQf7d+e4NfWFxYuHj+GeODWUZj7/Be1/vhPrHus63mO4IvyM7Hd8T3t
97pft40bbxs/1/2cNz79XDo91s93Xvmuv4FDw29XvhnnbU3/N+7LcekoBycV
Tt3l7bGOv3R7Zmq/8eO8V85fq8+d96T87/lO7TdYU3vXdF/nFfB3Kn7vzL+f
8wcNdK07v9AgXiBxGOqf6c98L0/qfff83hTfsOdxgnZuqJ2Oo9io+zOObOx/
/z2NA3lPA39A+h/9mH5DyTwl3k/Xv9wv7XfS7x8emfws8YvYr2GdrNuqfzFo
B/XLD9P5X5ynyXmt9P1m3FDe3JTM+6e1Pa/tDn/K/g7i3r/R8Uu6TnlPwwO7
VO+Xep0nTO1yvfFbnVe9zf+SP6+74FOKP+l489h50vPMceMz/ElfLuu0Uyod
Z+r1v/XMB3rk0e0Fh1ceo+iGS9/DvPXgcOD0D2v90dWQHkbuY51i4f87wgGj
u2FdbelgB0e0HjQ60xsqn6ldtFs8aOulpF3SzzaOOfG6ivWC4mNHeRnj52Ld
xLrSfDTjKubDmR9mXWPr93O9dXqsPzDTfusyntZ9T+s8r8O433mV1q89qeOX
dL3jvvmOpAfb6adaFxce21XVax0j6jHvz/U57veU2n+2Hs/68ozue0HPYd6e
eX5+D1xnHJJ+4d/Lz20dqUF/yrgpfQTzdYP7Sj8h4ynX4X9nHmGcZ9yHH21d
aM9fzP+adx1P1eX50P7kmWceNq/O+UKkh9blPbxSnyd2gfJlOq/Iru2F2zrf
fBnbR81O6Xgq4lPMvB6X3Wt7vsvnLj1PxwPkPOfF9Ppc78356aMz4/3K325+
f3jxX+l88TNjP5yt9du+7HAE8Uusp5e4jZMq4bt/ofuL7+7vqPPrSM855wk/
Dq5kPerjKj3Oe9yTztRQd8M8EMZb5zdfq/V3edjxB5xXPcyz8rM5P8PE+Kzy
FMQ/uVH3R4dNx53XIvkznC/F+UvMT8DPbL8x/AbFle2IzzCR/zgl/mnF9+FX
Jn82PIBl7Y8/+gfVq/i6xN+JNzBxO1r98Abix9+sz8124vSo/5WOK99L+AWb
9f6dn173jf//u/oe8MOHn0Apv7rjFM07ye/DfV7Ueswz4Hf38bwP97NX2qa/
cJ+ntQxvgvsqrjTxl+LbpB7sYtnZ2NMTrQN2ZMc734r5QRkvrPOn/OPo+sWv
47gVjyd8/9ar8fmMX/gDrO9p/7rzelgnXf76+PmO1v0Zl+Hv4fcmTo/xHL+9
86PjD3B8gdf50mXt4ssG6+tON8W4hfNc63jsC+Lj4SWLR+880eYbG683rhZe
NNcpj7J5ubRnLvw2dpHxlwd1/65wQuwq57UOf1v6JvDH94Svz3X+9gCfWxJu
HVyL9yI9E/Odu7zd4KyP6/H4Ecxbl27JtvB14/V5Hnj34PJsi9+//S/KxAmI
bx+/gfBI62dEb0P8fPPgl7Sf36vzqxjf1XXW0bFeTPK1Oy+i8N30E8WjbAtn
ze+q/mmcPesC9t+v9VgXf1f8dccjdLr5/h4p+Y71PVqPaFvrl11/p/JzOE7A
+YO9Tur0PtmWPqh1NLKuRV90pFfKeG/9PuYPr8uZb1i/g2M4/lHxmx3uJL23
8N7Mo7s3OI95+26tbypcLfoB4v/uaJ533rfgbo9r6fyFyUOOXSHeYfILYtfo
+vARld8udpB1h8EhrbthfQblxwsf8lltr/MLxl57WutLKVw06wHzJ5V/cCpc
N7/Hvbrd5b33dfQL8yaNW4I3YU9xHbgl/eRebXenH6H8mTu2++7W+oOz3q3P
F74ox+Gdud3GY8WzyXryRm1Hvot11af17ohX1MUzXNZz8Tvdru0LDsz71fNb
/9F65rm/dW60fs7193Wd4wkc9yGeo8eXvK/r9XjXv6yLzu8pP0DWBdLXcf7V
rDuox3lbb+v+fr+Ujjc2Pgz+4nHbPNyjug4eH7xV467GZz4Z3P/YoLTeqvFt
4eHZbx4mOLbzTjnP0mnV+7H2G1dy/gLxfrOesm4u6yTrrbT31/GnvM6ybgvt
YL3m+ygOPHzl9hdcEftAeiTBIbErzL/iPOtpCzd1voxOZ+Nmva7L5yH/dvBa
63JaT1xxbdZP7vSzpdOcsr1H57OOHWW9UOmlZJ37ler5RvV9VduVfmLerNfp
9nPYD8x35O9ixJN1fg/xEDu/LjjGWi0zXjKfOA+15yfzMC/peuv4Ov+14hkm
5pWq7PyaPNfZ+tzBdTnPOrzn1G7bGbdU/7laOu4tzyN9K+PA0W0zLjXIA9Hl
29A8E7tqEOcSe0t5K4wvW0cudqb85cmTLT251Md11Cccz7izdely3tPaPtdv
Ozh2s+zh2LfY2cbTpT+24/WB44Ye1XoXg98z/n3p+uV68bHNH8h3h91yp14X
O+pOvU/wR+t0W59b1y/kh+jsKOensf6445zsLxnpc4/wUOu3iK/f6dxY18z8
AsZf5gfOt12AHdDsl6EuP3rY+IuFq+a45h/7sznf/jrnmUg94K1nVK902Ozv
i//7pNrxje5Lu9p7zPwo/c/cTzgwvKfM83oe2uV8k5n/8Zc6fxd2ivh4nR9Y
+qUdX+tsbW+e/3I9bp3xLu5e+Vo6nTvbOTM9L/aV9e0u1efq8l3iFzZ/EPvN
ujnS59mVXx+c2jrewckH+SyDd4Grrdf7gZ91eKV4zdYTDp76rO4P/1p6zNEz
kV5z9FUoB/rCOe68jNZVphzlCZRuNHkLyY9IvsRDlMp7SF7BOWW7LnkclRcx
+Qilq81+6qUde7qe9rwhP2MrV1+37dd12+WRn1v5U71+s20f+qnWw/4DHH+t
kvr+VrcP6T5vW7na9r9p5a+tPPBL3aadh36p1/9KfW3/5l/r9qrK3Ifnb+Xb
Vh54Xetd/am2v7tf27/5urZ3U++f7QM8x+v6u5Ffk3612spN9TP01uknHKe/
cR15LMmzSf+l/6Qf0c/tR9H3l+9UOtvRVWK//Ckjf4X9IPEXafwy/t/5A8QH
73T9rY8Eb8j6L/d1XPkzu/gc+ys1Lse/4HgM6/NYb9T6Os4jZj+s9FRZT3fr
auwi/NOsT8FdWE+ZP2h+D7iN8R7nMTdfUuveLi4P+24UL40daVyK/bZHzSs1
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
5eXKOlb+NucTm3gdqnVfvkuO36n3c56yrFtv1XYvFM/R5Um9Oyg9bjgOhvHK
OBh4rfMawHdy3LHzebW/Tp9DccNdHj/HGzDu8zet7cj5x7R/Wc/Bn+Mp1O7M
c54PrActHZzg0pxv/Nz6WrSPdn+s+xg/X67vyevgDj/nPpqHOv+FdSCc3/Ws
yhG+7DyIF1U67gmcQnFlC+Mbd2oZP5DzCyjvX8YF+v1t1UvJdyX/VMa1e7qf
/erWtdY83OUrvF3b57x/xok6P5bzB1rH27pDl1SP8zLrvSQOzeOe48fA1WTP
BAdbq8etJ9zlcbC/wLod9o/Zr4B95n6Ofab4IscfBsdz/NFKrTf+DuevsL9h
Rc+1qM+d6/S7Oq9njl+qZXBD5eXs4vKUB6PDHe03dbwi9fo7vDPYTz9mXrPe
tPNyPtb591Tqu/G8mN/JcZgaByaedz1+OC/pLR23X4h+dV7HrWvjfrFWz+/i
Wc/rPo6rtF4X/Ux6/wt9f11+E/dr85OcH4H5gfmYecvrKfZbn8/6YdT7sa4/
qnqcz1f6Jd16b7men3lZfmvjrM472fHDhUMHj7B+VsMhujgY5TXs8iHercet
3x08kvOt63FD1yufZHAf5SFMXkPxDa3jER41PGuV4YGKHxn9AOtrc//RdYO8
jr4//NHwOcW7dF4687KjW0B74GXSzmd1v4+nVN4Z8zvNnw1fXfkDo9cAbuk8
isIjzQfN7zvIgzcTjm5cMv1Bv5/zOjp/aX4n4fd7vs+TWk+n4/6klsnLqPcW
3QndZ6b3hT8h/f9Ovd7xBXvql+H5Dvpd+L36nefqX0vqh11eIfN/9V05f+eS
v0f5RZIfiX5kHvB6rS+/r/MvCWfnvvn9PW6J/xvcXO0K/qnrMy5Sj/IGZNy7
ree5pf5Ov+V7eFSfL/4kxZXMtN+86i6P6u16nftT+t/d+tx5/8qLOjOe6/hE
x22yHz+P45Gti6l4wODz5+p1nu8cT5a/9+rxTieXP+u0Yl8Yh3XeD0rjw9IJ
7fACr6c/1nWsx72ePa72YG+YB4i9uaLzWN/K7u/yJ3H8et3f6VFjH9outj60
caJbOt95XrTe6HQVrL/i9eKa2m/9WT8fdvVId4R19s1a5rmw9+/XMjxVn+d8
heDd4MzirRqHDM/KuDK4gvg85sUH/zYOLj5PeFzO50PpvFdP6nnB8Z/Udhg3
D75unu8AD1/oOYzzJ3+kcXh+D54XPNpxBnqOid6L+VP2G4Rv5DylD2t9Xofm
+zCexPes9fxC/du8xqyvRnpD1rWxHhLrOcY9618yfoGzsr6R/lTHMwXHbONe
p/8tfm3mAfNlrEdonUPmG+cJlk5A1idez7Cf9dG1el7iqdEjdnyrdAly/aDe
Lk6V88xfEY8k9uvDen7mcdlJXb5or8/E9+h0Gni/rEO/0HNaF1pxwJ0+pfTQ
On+69WP8e8JPgjf9Vb2ui0t2fJbbZX8761qdn7gw8zWUt955483D2JZ9Z/7D
rn7P2ImyH52f3bp0We/IPjefxbwM69yZh5X2YCeq35lnYvud+2Sd4Dg8bXd6
oCMeivkw4m35OwlvRXymjAs3anvyHjQedLoI0ktxP44uQfsz/yH2I/Yh2x+r
NE5l/qPtW8d9MA+Y7y6dvY7HbpyREvvTOtvXdD/z3433Kt4l+OEdnSf/Y/yT
znNC3k/7Y/F/YNcoHqjzI9uufajzbD88qGXsAF23o/suRvaW/c7iKcQ//aBu
xz6RfWoetfNtpxzYX/HbUw/PzXPY3jM/3fbyIM4red039j++kL2c9+Y8lLw3
fg/njZX/K3i99QvNgzHPWuuWfAfmyYzWO+D1V3SdeNadv0p5Lzs9euP/fO98
t86L4Tgg7DuPM/zJv93pY0k3vtOZgl/HvNvG36EulXWkbH/cUOn8j7bfOA4e
KPwk86bm8Q435Drjv9KtDf4M7gs+B46HPsHTWhrXte7unvDduXA/9AqiB6L8
j3vCv7eFC0dvQect+TmtFyB83NcH9xzoJWC/uB3BzYWbRsfhaT0v9Usfwvne
urzquj44uZ4vOjDG2zlf+P+S3q/bF5wXHFp4s/OvB6cVrm3c1Di9854Gx7ad
JX5zcELsXuwirZ/M67d9tSvcNvzeq4P74Ndynlbb71r3dDpGWrdZL4/6ujw9
Z2o9Xb4f4Z+Jh5C+VXiwigPt8sK4RF9ROrBdPqJT9blzH+uyOb5D+XSc1yD7
VU/0QRWvGt0L64E6L7H0w4zrhu/lPBLgEMof0unEMU85Hwp2tOOlHZfKvGnc
1zrBnAd+iN0rnpvt6OA82AfmScjOiL2HPWNeDzxCeJLiK2IH2R7LebLLFrJb
J7YzOQ87TbhgcEDjmTyH4vUnqtd4ZOoVv7izkxWHCG7Y2bOj+E34ri8G57Uy
caiKfw1f9tvBfvFiU99Ad8R4aeJs1T7scOqDf7uj83a8HnhRt4Pzal0UvBO7
W/zqPB84LaWP85zmWQvf3dE6JPGpbDt+dqQLYz417134efor1ysu1roWo/XL
Qr/HwtcL987vIx542uc4acXNph8pfnik7xH9G8VFh7fd+N3owqCTQpw0eibR
VUHPpOmdoOfC+eirTLjPD7V+rkfnJnHctE988p3Bc+d3FA9/Z9DPws+3HpB0
e7pt9d/u+1P/8ndsXaDuu9RzLfQd7ggHsJ9p4vW58Qb5M0b1T3Q8/hD5A4PD
SC89612vl8XDzfzrPA/gVc5/5vn9fW3Du8LfYN6480Ca1009y6ofO+BLlccG
5xvHww9iPM98Mj/Hh6pXuqSdf9w6+s5zZj+O/T+z/73/ftptfFG4YvAI+auy
37w8/FK277gfv/sxvQfpFsculo6a83J2+SEv1uOx120nn9N50vXt8Arw4Msq
Xd9FlfajuF0n9DzfqP4ztb6sk8C/12p74xdiHSW/ivkhWafd1X7FcdpPsDvy
N9wZXK/9wW3sn6Hdiovs4i5v6HrtTxylcSPHUQrv73iXjlfmdxn0K+Nl9os6
X090v4mXlH/Mfgfn7et0wRkfPB62P+cFzDjH+Yw3zsvs/COOx/Q4OcqPzXiA
ruF/037zZkb5STxus5/1G+MS499ner7Dqtd60ozTHp+dj1rjUp5fuhX+s75C
p1+t/JPJb6hxMXjCezpOXA86U6z/z9X+5ucw7tDlPXTeXvAY5f3Id6l47Zn9
tTfr9kzfv/3+xp26eHP7Ix13/a94jPazS8/BehUjner4NeEDPt7/fuEzil/a
+U/RtxYuaJ5szqce4eLGC50/rdMTEF7e8YKNA7fz94R/BwcVb3UuHLXDi8Wf
dZ7G4NrsF+/bePO2S+Pcuh/PGVz4WW2n+cbBdbm/9HqDH1Oiq638gdFRRh+6
6S+jw8xxdKCjUy2da+tVo4tNfkXyN75RvsZNHUeHm/PID0m+SPJCviWPY9t/
wHkj/9qO/9L2t+3Ntv2G/a18y/kqj/y1Xr/6t3a/v7fr2vavrTzU9h9o26v/
aPX893bftv32Hzr+H/W8Vepv5a+t3GzHD/yz1cf57fq32qbeQxxv5ZtWbv5H
rY/6N6n/n/X+h/5Zjx9q7d/8+/7P9Yb30soj/6jPx/vK8/61nv/rL/uXbziP
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
+6FUXEnOk784857zxKxrW/snms+zjV0o+z7ztf3QtPeU2gceO9VzfFLbH/6C
7IXYl9ats5/qw/pdJc7K86bz+56u50fnn+/1Ez0P/dk8Kr4HvhfsiY/r+Ylj
07xnPY7ES8vv6PzG1lGMP/NGrS+6ZGyjx6+4tKx331PpPLXv1e+z69/WXYQn
xvcIjriu5/R36jye67U+5yGOnhF6a9LriT2lvMqxC4QTdvdVO4NXCzc1jpd8
lMLh5uIvB9cDH6R8VbeJz4eHir4FvFLwtk63QDhedITB8aRbjQ41+QnRr34r
3I+8b8bDKeHB0s7oLD+vzw1+uSf8MvkxX9Tr9oR7Zr+uy/tzfj/pLsbuk75F
dA/Ab7le9UX/AH8F7UYPRfkL49eQjs2e7EzzPneNp5vfIL1T+uuS7AjrhgSn
RycJe0P6jca9k1f1kdrL99jsEOfjMq+0ywPuvOjivWb+J57Y3+Ng3WKdzdHv
Gn1udEf47jhPeSGXBv03+jgcf1zbGT0syofaLztv7t/hWa03+mCKf+h08hln
+Z1Yh2IPM56v1G3rlkWfS/Np1gdaZ9qPGF6XxveU0tPMfupzvkh4y1f2L50v
Ps/HuuGP9TmDh5pPiv3mfOOK38j6ynHK1jFxPDP2k/VBlKfd+eGD/zqOCd05
rePyPLTDccOKk+/8FDyH40x4Ht7PcZ1HyXv8UPvNb8K+Urxd7NcbOk47Wb9g
NxqvwS6VfRM8/dO67fVw3r/bj19gVe0A7xIebL2R8GzB2cC7lA8w+4VT5jjv
Rfxh6ySkXZwvfNr4bxdXqzjQDqcTPhr8lXqlj2Ief3i54P7wtuCjw5uBJ6U4
2NTzotY/EQ8Nf0P4NYo7DR4Mznldzwv+DV6ofJ15v/7d7tXzwks1b0a8p+Q5
kF9j4eOUjvf2++Q8+194D8rrEX6P+ey8H+VVyvqOfko/4P1u1G2eO7+X4s2n
9ivRLuv50/+NYzjuiP2sZ2c6j++a8WWQlzDrVekhdHmCzLs1n7v9BcdhfGIe
YdxhP+MTeBS4knSiPK8732bGb9axjI/MQ+YdzfX8jufR+NvFcfHcfu/Gm4zP
mz/NPMMf7WZec37D46qH75Z+y3dt/OOM2if/TM6THyvvAX8Ev7/53MbX2L+i
48y/jos+qv38bvxe/LEtvCL2wBGVjq+27hz9Tn709C/iorGv0C2j/1Iv/Rh7
85juy/MYZ+S7mWnb36l/Z41XE/uhGN9u1PMz7mm+y/zLuEdpPkh7zs7PIR0/
8wGsQx7cy3Ht2PPgYcQZYhdLv6fjwwuHCY52obYv92cdgG7RN3oueCDmU9C/
+U7p54qfWAgPnAgX7OJzPA/frcczH3M93+1M7bis+lZ1vuOA5Lfv+p+vs9/d
uoYndb3HHekCpV2Mk3wHjFvL6of2nxr/X2g/9iP2pPRbEt9tO/FJ3R/dPOn0
WC8mz+V8RWf1HPJD5Pe6o3bzns/ou7yh5zTebL6W7QLPX+DExlOJB9O6oouP
cbyY5+U2Dia+C/+h+ZbO2yB+Z+K4HfcObgHuAH4B3uO4GvxPbR2e9dNUz8O8
5O+Mfst7Xdb5X2q/+dzOu6nxvMtjyfdje2RFJf2E8RZ7Cj+jeGgZF8VTM98q
++WnMF6R/HjS7Q6+z3gOLm7dmFXtv6Hjl+t9Z8bfwFfwV0uvr8uDgT/1Zu0v
c+GKxufMnwVnM54G7hUcjv5KvdZ5wJ8sXdrgYHwX4FHmV4u/bnyV7yl8anRY
hMsZNzWvwLzp/8PY/cd8Vp7ngX+lWMJaR2bURAurIBhtIoHWWRjJkRglLLyr
/AG7zhp2HQkkI5jGTqC1CxODzbgeM2/iH5DgwCQmgZQJTGrX4PyAcZyUSTOB
17UTaG3DOHYDrSlMa++ClAjPql0xu0awUt/rc0vn+vJu9vvPo3O+58dzznme
5/513dc98Spxn48t+zN5leUfHX5b75PfUvyh+JP5p8UPzqr2WNVP2VfXGd7g
bfD6zt8vDhC/Kp7kxic/V/ELuOJXP7dsG6e83/94xPt/cYt/tmyHXzzt1Hns
uAm8szwC+H/97PiH/APP6TsU70f7fyeO1OOm4kozrovPe3hsSr871X77qhc0
1/nUG19n4mAlN1quOK95h8ZfXf7ryU/o411ffkPnMzS/Zc3TifPdUfuL52dv
tacq/jLHm/ddj/lj9f+dy/tPP5zX60vlQXd9reF96u9057K/U9+j8wdsdz53
r7ud3+07Fq5neGVKv1/BYcGfiRf/g+Xxo/e0ncl+ZR/ctPy/6x3N/a9d9mPs
2+14ukp/HH2x/MltX4y/s/PtPr38f+ov0HfLb9U8BvM//sbmq5S3qY6kNvmZ
w19c/Jb4Q+Qh4veYfMTiacZL6H7qVuJNHv7s4iMZPsPiW5EXOnws8lLvXx4n
T3X4S5o3gr+y8i/l8cor1Y5/WD5s+4vvW16//cZdf2X8kOwb37f5SYp3Y3Da
5acfPHXzmhpPbSd1/2wXP8bUg6z81/HrNg/3A8v96+VPn/f727W///feq76r
PNr5v/zWnnOeq9738Kv85vL/weOXX7rtx7XCQ41e3/zAjeP9cO1vXNYHapt9
1n4o9ot1jJ3Rfkbb7ndLte+v++yp+zV+rHmB2x9gvb2q7uP/ztOpugXDOyVO
uh3fSa/vnZfT/fB829mF7Hzvk7yoeOxsbxM/Hf9j93fX42+8v/kXfKeMn5Ef
2/F4aLfDkZM3FR+Y892v7ecP1v37PnWdOc7/Xee6ebD5o4yPxse3v6L8mvPr
/K9+38YPPwn/CB5PflHjreto7KnW9Rv/3PGEwvONP8nzm58V3+n8+JX6W/bz
S9y2vF7ngax1HNh62HWdOk5Zcb2uvzH8zOQBeSfuV3lYk5dVPF7zf637LTc2
Wo7jiyy+iOETK76Ilvdd1715HDpuuFn62Up8sXikJ8547/K6GxVP3Si9rfOF
Jp5P7pM/leczflBxB37Ujq/eXc/T/MpVl2Keq/mym5dku/0Hl/9v1HsYni56
QPFUDO9Gj6Ou+1J5eyt81e5LX6n8rPXSF0Zvc92qvz38H1W3petqd7x54rX0
OvO+4xDWi49W2/E4crVxP9bvjoe23GjeoPY7k4/W18KxTB3F9kOnnThOxYcn
j6TrC1g3f7H69+F6zo63vr/6/8H6/wN1XsnhruM8uCby/T31fPZ3Hjg51fHv
jm93Xu8Ny37N+a1vkI//uLabJ6zj46V3bnScsuLSo99WXGt4VH51eb1p3Y88
bLu7473vXT7v5N3wZ/NXGj8HlvsnXlB8bl03pnHU+9pvxe8JTwgXWtdd4SWt
ejkr+PP2e/EXlT9p7tv+puaf+OQb33feQ9UxPvmxbe7T2667Hb6+6v6t8GN0
nbPiUej8g5MVB5j+1vOu4Hybh0O8ocbLxBsqr22er7abh63xoZ1/MN+7nmcl
zlFxl6mz03mZlVc/vBHF/76Cz1lf7p98MDjavcvrW9dO1nvt/MCp14i/Ef63
eEFOlb95+EPuXbb7Ku4Cbz9xluIXmbhM1dMcP2Pxz+yu601e6W8vt4+Wn3Ly
34oPfu7X9SHvrecufPbERSpvYPhbqs7l8O5vU6dzeFuK73L8ydanzrdtvqTm
N4Hjr3jW3vKLN9/8+JPFCZqv2byteuztv5/4Q/HW9Hrc+PTdHbco3qHdtb57
vq4/O/Pe/IUr/9iy/7MeNe6718vywzff6Er8/BN13B3VH3Kj4w6Fo5l1seq8
d/7rCt83vztcDb9347nbf2L9oYdZlxzXeGx6XfMxNB5H3Lx5uYv3rXkvhn8B
jpi+XfjUqT/U+N/yY67wI7Ijy/+Ml4+92fV48CLurO3xvxeP9oo/+f5l/8cv
WnUn2c14GZuHfK38sL2ff334uauuITu7r8v/7ryVelC/u7zv+Mf53z13+fFP
1PXH3+/+4gPFi6juZn8vz9lxgul/+rVW33vqXv7ucnuzvtd8t/I32O8+vpd4
CL/FxmeXLb745oHvOl3b8mRWPEa/9tTzth9/eHX4K+C9Kx4wuPBt5su8x8bT
37c8fqWOVPlj1sqPMPj09jOU32aOtz40f2T7Q3p94V8rvF/XFdgo3Gb76cbu
Lvu+8Z/jH6m8hYk/3LF8nmntr/p7E59oHt6PV3+sy43jaz9m81XC5zYfAj8q
3E7xcEy96O3yiDuP2XWLh6v59zp+PjxU+5fXHb1bfejCy43cI986X7vjH+zv
7Xi7bG+HH+ZP4Sdh5xbudiUOXn6Jrsu8wkfWfv3KL584QPmTm+dmo/3RnVd/
+3L/WvsJ7G+cc/MC3Fbbn1j2d/SHjiM030Dx6Y/fouOqHZdovqGOo1YdhOar
mv56DvpN8SOt8CXoz+11/Zrv692PX1leb4X3qPO6Cke+wrfW12k+peZV6Lb4
vQfXUO9/8p74gUvurJc/dXjV+HXJC3LrUJ1f8mGFj63vw8/c8eXKZ5o4dfud
S88ZPVO/un7JoeX/Xdej+ai7nka/3857W+HLKnkxcuuOOu7XqnX8dvx8Jf9W
4pcd77qtzjdver5rOy5m/TLvm6+5+WM+VNuRbyt4/1+q8+NPHjnufs1T2fm0
4o38Mvglre+RS4Nzes9ye+QBeRg878g7/q7CcU4+BvlZON72mzZv7fiDPrHN
ffZWfzaW2yv+tuK52Fv28vjH2N3tb+TnKLxZ83oMbpC9zw8AB1j+n8E/8s9U
PcDBm/ID8Q/d88bHt79m/FxVL3H8XPcsjxveCf3kL+Ifcr17l/0f/ubGN9+9
fN6ut7K7/G2Dt/2d5fPPdtrmncZHfSy41ObBHtwqvpDC0V4NB5v/z8r/hwqH
Ozhd16kWnhauF94YT8ixtHi5h4+42r6u/Y3L9Zz64/lW+Ls/szzPdQ4VLvpQ
4XnPqv7vr/OGFyR4Z/wftuGph2fi0PK4o/necNJw2sNLgqei6g+utI4vP/DM
I+OseKqHL6N4QAaPf6j6XePT/3Dd2z3P4MO3ed/ek+/i+00L113HDZ+77958
8IVzP1Tzxn2nv3Dpje+ucTf92gZHPzh865f5+8CyHX4f7+93lu9Tf+d+xXPf
PNzGp/bq+v+iGs+7636ON157ndFPfnXPcXXNB/kCxufwA+E1Kr5w7/tYrRPP
1Xc7q+blvP/iPe911HyccW9e3L1sez4MT3nxGA0Pu3lfeRHkxr6OX9xT2yX3
jtZ8HT4Z/Wi50XWBK84wcqnPq+ed5yKfKp5Dru2r+wyOv/nv71s+3/A7lRzc
XdedOEt/l647Ufk3E1/o+sLFkzNyvnh0Bo/fPD5Vj2AlTtxxC/GKyt8avaz4
nCbeuE2eWPOHDu6eH4Z/Ivrg4PE6jx4egz+JnVu80WOXsleKR3r+b/uh83TL
rhh71X0rv7Jxdxt9PL9B4e1W+AKbl6Ttrsqjbf9B8zQ3H/bY+/wWhQsbu+6O
Nz5u7r9NfdPmjZnjC7fV9SsHp1b5tet1/YnfeC/b2ZHeV+EX533eWf0unpvG
MXbdpfEPNK974dC2rRvZOPn2M8C7Fd5vBYf228vz5n22373xct637eJ5GT9U
+ZlnvBWfevPIrPCGNJ63eaj5L+Gbuh5f1UEYvtriDxk7l51ZeanNY938ASv1
kuUxdr5V1X2Bs5l4c8mfweEUvqXrVDeP3NHaP3HYjjM3TqTivYM/Kl664Ytu
HE/nm96x3J48uLZDC4/Q8npFLhZf8Ao/XOWh7iv5ODzMv7ZsR579HfWhVuLs
vq/3VPW0Z7zU++v8vfne+tPbhf+aOHvlT8+4LV70iV/0uBanMP7JZf6abfjy
Jt9AXnjlgU984Mrl9vCp4EMXP+C/4reCm/y5avnTyPn2y3cdW/KEnN4mPjDy
6a7leSPnm++q5XPpARPXoA+0X7H8eit1MW6vdrt+/mo9b/PydB5O14UWdyw8
d9cJ6bqQs7/5Lypeu1Z+8smfKr87v/fIq5I7XVdy6vz9k7p/4S9W8N2Nj27c
eeXjdRx68hI6H03cGW6i4vwTx8//4vTi51OP3P46f+phVr3ywUsUXgE+YXAL
v1v9gmMo3AS8hevuKfyB7RN13cENyNf87PL+G4UbmPr0n6n9lW859yscw7xX
7+d36vn7fTYOofM5up4oPEHjBRp333kdlRewVuOs8f4r9UaKf655DGddaR70
5uth91gfD1RLv7qp2q7HTL/yS1x67LMbl+3oK1UXm7zbXf508nJf4ygbZ1fy
Hf5wBfdZ/ufmfVnh3yic5NRpbD9k8VWPvc/PFf9L+234g/hLBsdZvMr8Z+Mv
a/wmv077Xfgl71/2d3Cu5Tft6/B7nWo/Z/uTDlW/Ko5wtOIX+8ov2u+Fn238
WVVncurr1XHT8vv97hu3ff5ztf/q8rO9WsdNP+s87+lov8dDy/Mct6+Ot/9U
+UvH793+a3EdenDzFjX/cs2v9het+HlK399X8/Jkz+Ouo0mvFR+jV1e9ir2t
b9+5PG9f68WO+3jdv/Cv9PDRV/cv9w/Pz4Flu4Lf53e6qbb5par+zXb8DOOv
ar4kLX2666/AM8UubR7hyfNpPbnyf9m5U28E7r7qG3SdvhUe6G3q685+OKW9
1R///3hdJ/r71In52eV1mmd6jstvtivfYHBUXddQG7k28fXOE9qGh6954ca/
17xsjQ8iR8lX8rTy1Ffq3ONhe2/1v/PryO/mGdtf/ftobf/SGz/nCv/1R+o8
ekDzAtxU/WtcdufZf6Cer3k+L6vj99b1mg+geQm8v8JprNQx6zy/yldcyedr
/FrzEWiNs8attX52+7Idfa7wK82/PDiuTy7/Hz9a26HaxocV/2DXb5y83eKZ
aP/q+A2bHyZ6KxxR14Mc/FPlg7e9N/nG2/FgFJ5q8mkLX9X1M1d4tItn2nXX
qn9zXtWr7/vo/2b7dTufl93QeCz7y75ZLxwXO3DOK/6S9bIzdx5+4+PGL138
PHDTjl/brnVdOPfKA2j7d3D3Zad1/gE7uu3izdqePP4H6jq/s3xu/R0/QL0f
95vr1f3Wq/976jknL6Py/Tfq+2zU92g+n8bv9ffdqO+13v3uurI9Hlyn7Nn2
02zHl7OSH9K4+3uX256v7ei2jzdqfRl+gMK5jr+r8YS1f6UeAP9X82S2v6z4
vVfqE/S63bycxS87coe8Iwfhu+Ha5a/jiYZbL9ze8GnK++L35b/ufDj2eOfF
fqJacYTy33ce5ujp9PeyJ8Z+KBzdij9d/+o+/PbD78auaP853F3x6nV/Jk+w
7jM8g9vwxo7d037/zp/r/Df7K0937I2ys+a93l3vtfIJd5ffw3FHu7+FYxx7
quuPsYs+Wi37RHyg685VXKHrsK1cJ3YTe2DsIHXqyn/UdeS6Ls3wsFfdtrF7
uu5d5ylcvjx+7Cl6ZPMqtD7Yv64L0/EL+nnX0Wt++Oazp/feVOfZ3/V6PJf+
NI/8VfUc8MV4D/BG+eHDurLew/XVVn2Z6X/XJWhe/uvreYrvqfXYlTyiypNa
4b+3Ph9Ybs96XjzmK3UMut5B82lXXtRKHkLj2lvP77bkU/M0jZ1aeI/B3Vc9
js1uK69r9PmK83ecZfRwxxXf3woPYNXHmXhS1+NuXvuW15UfMN/Lcew647Lz
fK9/4/+b363rKk/88+baX36cuU7L6caji6/Dn1svi7961u2qD9b1XgcnXzis
Of725Xl7S94072rX3x3cWvvBy2/Jn8l/3P7U9ivzww5+sHDDjaN038EdFt58
8HvF89r8soNr7Pp0xVc8uDnxgXrO3d2/5mHYBr+8u/zsR+v5+cH5l/mPXy0/
93PVvlq43IuKXxqefXDC8MTN51w4cfzSWjh511Mv81BaPNP7H1q2jjsrdTYv
Sjt81+6T469Oe9HfcV31PfFiX/25ZX9eTXusjsOX7f7Hqr2o3tPwcBfOHt82
fP3++r+/y6vVzvGF0/f9DtV3nnyAymvQv7Pqf98Rrzfc9Fy/+m/8wUs3/vhY
xUfglM3bieu4fx0nHjN5BRV/2V/3FW+Baz7V8bKeV7YrTtY441N1/MRd/P/A
8vyjtQ7urusNnqjxvR23wWtSPExjpxR/yODHxHt6vW488z21/7eW+1fykOCW
ax09WuvoxI3qebpO8L7af6qex3UmPkQ+sbvYpcXvMvzc7NGKG4092/ZY8Wat
5H+xP+9Ybo+9xK4uHNXYNVVvaOyY4JroDaM304vpudqOW/AX0F/o6eyHm+r/
D1V7oI6n9zYeIHbB+MUrD3H8FR+o6zfeSlyAfxyuufX3T9b+X65+dX5y+c9H
D+584fJ/D16rcLkruCH6KL9T8Z1vFP5p/r97ed3Rq/t//uPi27bdfubxj//W
cnsFn1v1JNdbr/Ye7lxuj3105/L8ec6yG6YuZOGrmxe+eeDn/RZv5grOqvg0
B09zX7Xlp5/rtJ8eDqv5zQuHPX748kPO8f9keZ3N2t/Ps1n96ffRdlPzew4+
vPK05/2VH3b88cVr23VCh8+2/OjrFWfY7PsUfmn61Xgnxzdfb43vqdtp/93L
8zfru058pb7n4NA73tI8q83P0vj64luf71fjbZ63eN2bZ3WOr3m8Xs+zWeO1
+7VW/d+Wl7f2z3rTPAeNl2w+l+Z7af9B8eau5F20P6DjcBUP3Oz1per2Tls8
AhuFg1urvJbxGxRP6Kx3xT8z8oZ/vvw72/GLN0/u1NUoXG/zkK/wanfd0Mb/
Vnx34tnFY74itzve33y15DY/3Adqv/uQ4+IUH6nrdNs8PvSBT1Y/iie26+6t
8Ld33L5x1M0bf2ud/9G6/seX913xv7VfqvDhK3lRd9T/v7pNW/65ibtvw1fd
cn/kXK1brRdMXLnqR2z8+hvfb63Wk1mHW0/pOLn5XnlAjQtovpXhYyke+Jn3
/X4r36zrRvf/a/We577FB7PCG1x8Mmvtf6x44Ap+tvmq99V4Nt7Mj67zUPik
Ff7o/r/4Q8bP3/V9Prrc33kAK/zLv1TXL7zU6OUH6vr9nvSj+VS8D++9v1/l
JXYdgeFb/PU6zjwsPXa+M17Gut/Mj67v3c/zqWV/ZpxUvkPXC92o7clvbL43
z9dxAuPW++t8Q8c3Hsj3952Mv8YpfWT5vLOuHlhub7Qc/KW6btfPYMcav5Ej
gzeMHdzxpqmHTO7k1/bz2NeJKw5eUDyw6mys8HmLn1d8cfz3/P3inPz+7Pu/
v+zvit/f8XCj8Kb8B/IK+Re6jlvzsP7Ksu06cfwsXRet/eT7erv8QlMvjX+L
f0wef/ESD59y8QkPnp7/rPz440dz/fKDT1yh6y82jr3+H97j8rsPn81v13Xq
eoN7f+CN+9t47eZz4NccnPff8Vz8jPOe6r1PHGQbXoXm6fF9hq+k+BdWeDlc
z/fn52y+7MqPmHiH84yjeq/DP+357qn9Dyz7far6P7wazcPS46nzJer7zbis
PInd9X0nvlN5EqfKn3y05kXzV/T8aD6bFf7xek+76/mH56bjYTU+TvV29+Pe
5Xnj1y7ep5U6luUfXuGNMG6dxy/868v901Y+wuQ5V/7B8H53Hm7WxcEZVR7v
+Id/Zbnf/RrfM7iZylNe8S/39u3L7ZX6xMWzPXWjIy8mX4B8Ik/gYOD48xse
/eK9WMHBN46EfxkOg35JH6Vf8kd3vZOb6nzyve1G9hy9gH7RvJ3FN7nCZ0tf
7XrWndfauILt+GerDuFm+TNW/A/9f/FbjF7XfpKum1l+j8Y1Dk6i+Ueap2Kb
/NzpX+nDY5dVnc7xdzn/7mV/57nuWB63Wfr0dv3Zrh7UZj8PO67s0/Evlb++
8SjzPbseVPMtH6zzyu8/9nR9v8HNFO9I8yCPHVO8FvN/81oUPn/Fn1T8t53f
ucKbXDinGe+fWh7f/rCx59qua5xU5yeU/2Tsjtvq+Xre3r78f8Wf2Pwwzbtf
42b60/aY525/IHvlI9VPx9e4XfEvNm9OPW/z5Y4fsONUlZfRfD2zvrS91fkf
n3zj5x17ucblyndtXJn1u/lM277T8hvCVXUe0C/UtvM634p8uKX618/TeVjb
5V19rK63v7a7vuOt1X+4sPajOs+v7dsDdd2uB6aNHJ78wODNxm792eX/w9da
ceX5v3hvpm7G39/mOLjY5nv9B3Wc3/ry+MlTfN/yPlMvqHhYp7+V5zd4O3rQ
u+r+9BZ40uurX83rtau220/meH4639t32m4c04foU6Vnjf7m+11W/ej+X1/X
v76uf9myX82rMvXJKv+x8yObJ238E3CL/BJ4WrouXvG1DT5Rvi29Fu4bDhHu
EA7j48vrdH2a5olZ4XW7adn/0X9vqeconrj5H05jb7Wu/4Hl95v5UnmvnSc7
OI6ar4NT77oE+rOv5t0/Wj53148f/HqtDzPvbq7jrq1+GofmlXFmXBvP5g+/
m3nwC7Xd8zO/ue/Fdd8b6j7Nw1X5LZMnzS8XP9lKXdyq+zg/7yfvfdaVzo/+
+eX9VvIN+OluWvaj+ZPmeMfdvM31mr+w1v2uuzbz8IN1Xvsbb172ZyUPo/PV
b63nwJ/d87fy4Vfs74/VeXcst5unbCXPCP6q+ABmu+pDOX7qJ3YdscoHmjpb
lc/j/LHXnVe8Cc3TNvxsB6u/xVcy1/3kcnv4S35jeZ2j5SdZ4VeremGD3/70
st/8Ke0PGbxg1SvjBxnehcrrOlrnN9/ovOffWP4/z3HX8jpH67zBX/9W9fvX
l/1t/Pb4u7fx+0x+WvO+NV9rv79PL9vmlen3vDLe+jrNr1HvafzvhRNtnt3d
hStvvvXmxxt8Zj3P4PnL3z/8Ie5T/vH2l7cfeMVvX3758YsXP3bnE6z4Wxs/
X8dfVP724Vd+YHl/ftrxwzfu1/WbN6eeA+4ZrvlQ45LreNtHy7/ffEHjBy48
7nwneNz6PkdrHByt4+a7Vx5D++3nezd/YuGE5zzjzHWbT7riRJ3/sDK+Di2P
bz/1Spyp62AW/nv29/W14h/t/258eH2fzudYiYdU/GMlLmBe/1bdx/WLp3m+
W8mzfRVvWTlvmzoLs37X95v11DraPDwVZzxacmJ3XWf4tyrPhhxtOXOq7j/3
/fTy/vu2Wc9HjtY6O/yZnQf7qTfuT9cF3Vvx134f28nr0ZOqPuboPfJs5ZXR
8+h/HW/ueiriyOyl6+o8cezi9xn78dL6v+3zsgdW+DibZ+X62mZff7i2y78z
fhVxhqpX1niwuU75jyZ+sLHcnv8bx/Oxum7zejdvddUFW+FRab7tjj8UT+fg
tvk123/cfH/lNx2/XvG+rORNtp+w8IIruPvG9VTduPEXlt93BW+3HU7wpuX1
VvCAncfgPPZo+3XaLtVv/r6PLp97ZdwV78P83/7qxhl2XfsP1rbr3Fr3M87N
kw/UczSvk3n1kdp/dT23+3eetfnb/Frlhxq/Bx7s2JuTzwovY/1p/jL2qnWn
/IQrPGofWR4/9ip7kb3XeTrFo7zCZ8GvpI0dOuvlh+r++6p/5a/s/9svNX4w
djT7/h/V8xeOaPpV72He4811/1vrflWnaupYek/eR/vf1FuoulyTj/yxut/H
675acvG25XW7XvV2fCLtN5j3dKC+d42Hrtc1/Wm/RNen9hztZ8CX0XyIjZ9q
faXs27EHC2cw+WNdH9vz3FH9v6P6Xed1ndF571UvbeZDf9ce983vXf7T8etW
/tvc3/WrzsfU//jl5XWHX8R9ij981pPCz7V+Mv7w8psOn8je/+/zrYv2jz9U
23EF63jx+q3UHyUvKl64Eo8tPEHjECbv4uDyvN6/WXH9wcU2P1rH4TuuLi5O
Pyl+765T2nHzxqN2XsnUDYE/6Pj8dnloFXefupyFp1jJfyu9beLH9V4m7l84
3MZzrNV7nOs3zuHg8vkGl1I4i8FlFG6+62p0HZHJD+v8IXU88YJV/dHhCSv+
6t6evLnitZt8t+JDH17rytebvLnKG3Ofqe997xvv36jjZ7vuN89X9VCnvnzx
kHV+2kpeYfMMVl2VzRo3ffzMK/8bL9vgIUavazw2fbt4ysbu+WC1Xff5luV1
Rq/0Y8d9qP7f7nr+l4ezUfvptfTZm+p+763nc5w4kfgo/Vbcih1a/EizbotX
0Yc7j7r14avqOW+o89+7vM/EAYuPduxn8aWK/85+xzff1I9Xq3+xAxofv8Kz
2jyp7I4eT9vxol5Rz42H913Lfs/z8B9U/LXx9xN/itxv/OL4K973/68dPZhe
XHVIRp/dv2zpP+JerW+ebD266va0Pjb/V72e5r0bnoE7ltujx9KPWx+kJ+2r
57lpud32zcT16EsfrvN+cfm8e1sP/PA22x+q6+5djvPRv4zT8hON/dN8SY0z
oP+9p5771rrO3nrem5bjc/r/wWW/hheRnXRged8ZR4VXGHun7M75/l336O/g
Re/jh2+w/IcTlyy7qe/TPICTB1K8gR0Har9v467Hv9p+49/Y5n/+3ruXx3e9
hYlT3V3nNy9Txd063tfxvY7/ev6ukzR8js033/Ho22rbfC07quPZbdet8EA2
L1fbdW2nGafFL7LCO8LfC4+Ff778No0fn7wr67j1nVxt+dR8fc3b17hz58G7
/UK1jms+NtdrP6D/ybX2p5GHzffObvvlOn9/bTc+sXi+x6/c/uXCk674QW9f
njfH/Vzdt/2fH6zn05+ua/fB2n9LXc9z6m/V21upy9d5g/Ucc17nqTc/uev9
+vL6g9+lD3de5B3L7Y2yezfaXm6cfuPnf235f+OvV+oQblMPsnHIa2VnbtT9
O94w+n7z7N+2PG6FL6D87St8AdvxCt+0/H/GnXlDj+z4jfnZdRts0xvNU3q6
/fTv5ve/qbY7XnRzXd/5xje9fVddp3Ft/vfr+hWN3+zzer27up6z6teNvlG4
u+aBHP2m/VL8yY1XpEfzq3142Y4+1/7Zwm9NXZNPLrc7H7Xr9LYc3Fv3W/FL
9v7282b/vtJjJn7a/ttt6sHQH0a/OLjc7jo3K3Hqiifvbf3M/tITRp8vv2rL
39FD6c/03cr3bXnb+OuR2/CBGW9jP/oZt8UTPvvLTp3xd8vy+mOX/fwb92vG
6/uW/VsZt9v4kef41mM+srzu4GLVn6n1pfs985G9+q5lu4Lv9f68l3rfHRef
vLrSl6ZfpSc1Ln6+R6+rrR+1HuX70X9cx3G/WMfpT+sB2+X3yW/o/J9fWp7f
9UTGn9U8CcWn0XlczVPW/ETDU1L+ufEv8usVD9PwVxWvVdermPp+VV9i6jIc
Wp4/9QnwZ9V1N+r/8TemVfdBvUbnTT/US8jx6kV0nYmuuzh1IuxPPUV1HdVJ
nLqO6m387vJ/dRjVW7S9kVbdRsdP/7ap29j1GrtOo7oWw0vGX1t1I9bKzzt1
IfiRe3wUH9f4k++t84sXbvhumj+v8yFrfK745TuPsPIbRy/t65snxYczemf1
a6304Tm+9fTO59qu7lDxUzVfTNcfmv3NB9lxr+J3+TtxJ53HuPF3/E9/pc/y
b9MT6ZnWO+tu20t47q3nnWd0abXs1fxabo5fmt+J3Kk45+hRn6j/G59QeTAj
vysPpvN5+LlW8nx+sa5f/oPRF0u/bL2R3jP+C/iLjnvTq+in9LuuW01v7Doe
cPaF7xu97FeW5x0tv9rR0heHP3cbnPfw2sItFi6x/V+NVzzV/jXXaf9Y8ezO
/sLDwrsO7tv+rhu6TV3OxjEPr3rhXwcva3u7+pT3Le/XPBNdl7Rx2ivnwQUX
Xnb4Yhq/27jn+6q/9d7mvOKBGdx188Dc98b3m/d977K/g+stvpThWSlcvuMG
b8+vWX7SwdF2noj9xnXlG/CXGuentvEvj/+668tXnkv7l2e+/sry+MnnKTzL
Sh0i/vfCgcz1Oj/ok8v+dl2gk+1vr/pEK/0tvNjwfPDflr99/L1t195Z/e+8
R3Y0e0icoeIWnQ/WdsOs0x+u4z5Y/zdurOzMFbxLxW3Grux8x/b/Vt7yil+X
P4ec5Y/lh2SvNK6z8Yv+57eiR0Tv2Sw8xehThdtd4Wdsvaz8hit+vDvr+s0D
cGdd13XuWp7XvBmjJxbPyPCGFA/FRuEJml+1eRubP3a9juu6hNMW/gTeoXl0
h2+2+ZTZZY3PgCv57Tc+T3+HV7l4gzcKD7LR+JPGoRSeY4XH8jfree9Zbned
x/XeX8cPPsh3K97nwfNsw/u8LW+w939v9efu5XM1r/DwCxcupflUhg/57mU/
1rv/ZQ/N/+z4u5bXH3uqxvvwnf5qXdd85AdnP5jHxdO7bT1T9kXxbnQ8Y+yJ
qovb/vNteYiat7fzDLoOYdttFedY4dNxfNer6vfivTd/TMc19LtxifV+V+oZ
F2/J9Lvtzf5uzXNa+QMTLyte4ulff+/iw9loO3Gj+uP65FDjoMgh8Tfy58P1
/3vrfH614s+YeMfP1XmRo+2vnXhr5bev4Gk+WG3jJxoP03Ykv3/FB0av+eU3
3p7jqy7j3tIfR59sfD79q+Lto1+VXtf1TaYeyDb15Ol5/PkT56d/ln67Ut+j
9b3O06LXtT7Y/1dcY+zbzod3XuERJm6S/kz9xtKDR08tXFHnzc15ZWfP+2v8
Q+GYui7l3nq+0V8bt93xq2rHH5LzZl5sw183/g7xkYqDrPBbxG8z+Aa4vZ53
737j+6/4zavu6sQZ6ryV+3e+S8UNtsMPruTnVDxjJc7Q/M/WH+tO4/yan2i7
fKzmR+o8pgN1vHWz8aGN86DP86+tb9Ofjk9s1P/si5vr+I4v76vz9W8b3v3O
M5znz307T3AlXkJOdz3K5oum51SdmtETKk9xRR8ovETXRx59qvzHHWfZaLun
7R+87KWvdV2IsWsah3/H8r7TP/rjp5ft8NA3vn4bu2mlvmTlIXQdmo3Sb7er
F7PRdgh9uvHrbaf81vJ5Rp/7dF3/YD1/8SGOXl71Sjb6Pd29zf2Kd3+z9P7N
T7/x/db6e9Dzmj+/6m42//5aj9POe6WnVh2FwRVtk5/b+ZwrdS4a59S89eZz
8d/P/G4+/I9U+4k6/0PVdr7pB6ufXTeLftl8c1fVfbOOTfyffCj8Xec3dRxi
8NrvXh7XeZsr+JT2O8E5wCHTj+gLty23O99w/i9/Yett488rv17X/x4cauX9
r/D6lL6zwudz2/L4Ffx35wvqb+lHoxc2bqafr+pur+jF29WjK57hk6W3zXeg
35bfcgXnvg3P0+ThFs/89PP2uk/rv61n13du+2QF925cNh9C/b+C56780cmL
/UBt31pt46n4b/cv59H0q/Xg5pdrHP0Hl9dr/ufBux+o/f942a/pv7zjymOY
uNzGcv/M38p7bv60bfXSdy2fY6WeNzub/UuPtj7Sy5rXs/GkhWtcqQPUPA8d
ly786uhBxdO6Urej/RetzzVe9c66Pnxq9IETX8hx/yL/P7rVHj+S7c9tteMn
VN/twWzDW5C7ra/Tg/P8I+fJ764TRb/dWD7X5JHeU/e7admOv4iew5+r//RU
+kWeBx4FjmX0Jvog+Uj+VV2WjfLfjfwtvXz623ZE41RvrnFl/NBT3K/x6ewv
dknbRcZ14cnm/pkfo695H4UPGj+6cWVctj+4ea+Ng2zDF8HvwAf5LuOP7rxY
39848n3poRmfO/9kqz2i/aNluzPj/MQj6U/2n7A/4x9+ybg/8fnlfdY+v/zf
vIErGv28/epwVp7b+/Cdi9fXc8JnTZ1Edhq9jR6rTqJ5+tnahktr+6R4qkdP
rXG5Use+xyM7G+679VPbjYc3jyrPb8Zt41H5J8mtwmPQI0Yv9ZxVb3LsrruW
/Z757vtZV6M/jz5783L8wqltwql9Znm/iYuU3bZZ+L6JJ3lPkVuT58Y/xI9g
/GTe058GvxA/HD1g1rWu80S/7/zNHD/5bPxneA2Kp3X0ed+p6g/Pd8m65TsO
H2Dhp1f4MuiDFX8f/ca46DoZv7a8z+Rt/dJyvA3/u3FjXX5XPU/0mdFPiq9m
/HTvWR43z89f1Dz5LS98j5rvU0+s6k5MPVLz/Tfqer5rvtt8x5+r65Fj/GLk
NfnEn0XOdZ7Hzct+Wtfoq4OHbr6s5kkgb5pXmj7ofVmfut7Dr9V1PlrPIb5P
jnZcpfM0rq//r1j2b6XeHf9o56O0f9B3uWo53lbyrPNr/rSulzn6hO9f/Ayj
j7Vfxnvbzh/SPBOdR1R1Jme9uaX65TjX3ajz6LvmEz9Ejfvhn4+9MzhD78X6
9IFlP+Z9b1Tb48B98/06T4Z9Orw7WXfGfsp62bxPzRe0Yn+yqz70xuPHPBr+
RbyC7NmqF6efgx+EP/zEsp+dDz95yoWX0v+Ji/FndLzM9T+43GaHjx1YeKSZ
5837QM/2vawfzU9vXaB3WO+Kt3zsTnkWvj89ert6KZ+o+3Sdh6qTM+02eXdd
H2KlTovjP1r9ct3O72sei86L9Zx+XQdifXm/sXfbz22doL9at+CYyTXrHPs9
323sButM4ws87/66P7tDP6zvlVc58rLqcq6X/jv6nzqQ9LyOU7Wft3ktug4y
P651jDxwfI3TtltXeH0KtzN4DfZY4WWmLrg8CfXVHS8OUbinsfvgmFzX8exm
+i1/AbuG3SEP5tBye9ri95GXsR49uvMzpq68fA3P8zvL4+WryMOZfJbKU2GH
yfMYnJjnF/+pOqzjrxA/8Z70h37fcSLjwrimd1k/qt7SdnjDrj81vFbGOz3s
+rpf43Gybo5cKj905wUMbzp8OHwwHDRedP7u8tcOftd5VR8RD/dF4bHGmz14
Z/za+K0/szzO/lfT7ndcrvfqZ7faYw9ttc/Z/t3lfV9Nu7/4wV1vcOhp8W07
Dh+3655V/d3/z3Kfzyz7+5x+5/7H0r+zPpf+PZj/076a9mr7P7e8/kXZPpbt
Q59dvoez/lm9j8/X9T+7fE/Ov/pzy+OOfW55vP/1y/XPyvahz1Xr/7TH6jkd
99znlv32/s76TI2jvMdj3qM6lXD37OP7lv/73oPLh8Mve3p494tXmp06eRzN
N164++F3FC+C13e96FmDv8YbhG+k8kYGTyMOQ1+r+Ij5Pryq0cNGH22+nf3L
fqzgrOmnld80/n5+ej/+pY6/WrcqDjryvPCpIw8rbj3+LbjTwsU2/93odZ9c
HjdytfLdVnAT9LfWQ7q+W8eVC9ewEj8vvMPolfz/ty/vM3x/zedX+OnGGzQu
Gr5g/LvOb3x14REmX5W/svDXg7uuvMjJl63zBj/NX1e4jBkXjbf3nM7zvro+
eOFqV/i12/4gj8nt/MYeKbtx5mvl5Y8/Xrz8F5fHTTy467mKW3a9FeuHdafq
XpNL8q3UhVAv4qySM7NukxfkB3lh3SYnIjee+/1cJ+2x7L+aXPmD/K/9w5z3
cK6T7Vdd5/eW19//0LJ9teSa/pIT5Bk5OceTwyW31e2gL1yU454rud/6ztQ5
6Tyxyt/aXTiAyYeqvKvBC0SejD+DP7b5kcRNxT2zLkz+QPN9Ft/75Cubf6Uv
y7eWrz1xhfx/WLwofu+Jc2Rb3M3/JxIH4jc/LK/7oRwn/qJ9aNmu/V6O+/2c
9wfZn+2N/L8z2zv9/3CukzjQerYP9/mJ82zW9V3ncM7b+cjyujur3ZH40uEj
y/0bf5j2keVx4lG7Eq+d+GzazYeX/VrL+RuJZx1OezDni/uufWF5H/0+XPdz
/z1p1933D5f9PyyO5nmPLNvNR5bHnXDeHy7f50n3/+Ky3zv/8I2/+4l81z1p
D1fcbuxEef4ZX+zJdXGZ5lco3tf1it9N/pH5Q36wr/hb2POdj25eigvA5XZ9
s+hn9DrrzLGyP+i9F2U9o1dfnfXy6qyfV2edtS5rL3pkq33rka324bRv/aOt
9povbrXnp30q++/847R/kuMf3WpfO7rVvvxnW+3Zf77VvvPYVntD2mvsfyzt
41vtpZtb7V1pb0x7Z/5/Ku3T2X/Jv9xqz/jyVvtK2kfSnlvbd31lqz3nL7ba
x7N9T9qnc9w5aa/9Uvqd+56d/t6a53j+T9P/vI/X8n5ezns8P+3ZeX93/vMc
n/a1vL9r0r6c9uH8f3bah7P/hlznuXw38vG5fN9jkZ/kK7tpf+Th1K+KX5Ze
MnIj43b0zqz/1uMTmY/WiZPV7rR+ZP3ZzHzekXYt7Z60J9Ier23HbdR6tCvt
hvXJfXP85j/P9p9utUeObbXnbW61138p90t79F9utZd9Oedne0f+3/l4th/b
ag//ee6bdtP+tEfs//Pl+Sfy/67sP/jny/7tDR7nyNE8f9qTeZ6Dwems57nW
c/zxP0t7bHm/43XfK9LuSbv+2LKf+r3hern+yfRjI/ffmxa+4mS+896SS76P
dfwKOAvre87fmec7AYeU5zuY+x/+02U/NnPcScenPZjrHM91N6vd88d5r2l3
pV1Pe6L2r6W/9IIT5H3k2GbJvRMlD68g7/P8e82DXP/IF5f32cxx63+0nB/e
GzlM3zhMnyHPiscGvmDyg2OPi1s3/pR9MfGqytdeqWMhj18ciT8jevHozfxA
kUeHrE9pL876SK68NevcUyVX3hm58lq2r8m6e3HW43OzTl8ZeXB61u/Lrftp
T8s6f0bW/9P/cqu9Me2DaS9Ie25tv5D2kSdy3r/aah/46lb7zNe32nOe/i/t
xrXHt9pX0v7+Vrt2ydb/a49/fXn+6bneBbn+denvdZF374xcfTny562RS6/l
PbyY414gD3P+A3neS3PdA2mf8Nz5/9y/WL4n7/OFXPd75G7e97nZviHy/IZ/
kf5Fbj0WufjyFzIOYq9NPcLoNfxYK7xqiVNNHKzykeHJxl7IPKVX0xMPP7ic
JxMnym/GPXyM+Ix4mriJ62ZeWoesn0cjZw6nJTc2ap3fm/XqpHlO3pU8PFzr
pfPst74coadnXaDnHv6ny/ZEtXtib62zp3I+O+iK0v/p6WtlT6zT7/O+x96z
HlX8Z/xQiWfAE/OLjp+Z3R995oaMo8eiBz2f8fUwPTX/XxT/AT/5xA3Eu61/
9GzrGB4V/vzDy/7wHzz3e8uWn+Oi+Bn4K/Y/suz3a+kn/e9l61jm9VO2s97R
/96Z9fFq62fuY70VTx98Fr+teHrxs884x5chvsl/1X7N+L3MT3GcqRvLz6G+
Kt4bemZwGYOThlOM3cZupu+R1+sZ7/SPHWk3ow+cyHwavSZ625u/stXueyL/
/6vMn3+d+ZL2iuzfk+Oe/Ivsz/mXfWk5v+mVu/5kOW+P0yPS3x3p3xXp3w7z
P/rVQdfJfvrZ3rTH055pPYk+R29by/YVx5bvhT68zj623vELwxEGp88PNThB
/kLjn38v45k981jZM4+lfWvG72vkQOTUy5EPd6a9OHLr5citO9O+EnnyOvkS
OXZl5NSlkY9n/Ovsj9y8IHL0jKeyP/L33G9sta98Y7l9XeTxV9N+LHL58pz3
Q9l/SY5/IP8/mv9Pz/5nctzb056T/ef81VZ7adp3Zf9paZ9O+2jar+a4+761
1f5A2u9l/++nfSL9OD3PecbXttq7ntxqb8v7Io8fjr70MPs03896dHbWmZHb
Of5+bb7r/Tlvf8fn2JUZP8O3X3GykxWPgkMav3viAeQOeXck82RH5t9DmQ/7
zMuy407Gjntz5vGZf5l5nPl9Web77sz/jWzf/mTun+P35Xp7/3w5v/ZG7o/f
Lv3lXxv9Pu0e9kzm/Z60h9lrpRfMepH1Y0/pCexffrONyO3DkbfDfyneYd4n
XjH5QvBleA7EM+Of3h+/Er39ooeX89944G/gZ+JnwING3gwuWFytcTniMbFT
xBcnXiL+iA+Q/IEzeGDZb35/fn5xfHxscHKDi4KTiTwa/yk/Qq+7GRfs7xM5
7op8t70ln/gNjmT8PpTxtRE5syvj9Wi2j2YcX5XjXsp5u9Nubi7/P5rzr8o4
PpVxffKrGU9PpV9P5zmO575p96RdT3tm2hNpv/WNrfZv/yrHfWurvf7fZDvt
d7+Z+ZfjXsr9nk0/TqV/Z2Y+3p759lDaU54j2+fl+ONPLufp0bQn0p6X623m
/e3N+3sp7+f2vC/+kOP5Hif5Ocxb+gc9mh858Tx+suELhxsw7sTFMm9aXz0/
6+39kX+vxL66kP8x7SVlf54eu+x7+f+WtOy0R9K+nuNuy3nfi513beTlpZEX
p23Jj40fidz66cihCyNnvpz28W9utZ+OPPqztLelfV/aB3PcAznvwVzvxeOL
+6zdGLv3rrSvR54+nuPuynlv+atlf3467d/k/wvSxp7euDBt5PbaM7n+LWWH
fyftZ9L+zfHl9e7K+RdEvl6a9/ZK3uNpf7n8PhdmP7/zY5Gjr0bvtz4N74e4
dMW7rTt7Em86IW4mTh7cORwPP/2xrLtwR/T/seuyjvFrjR8vcmet/JiXZb7s
oj9nHp2XebnPfMz6sutr6Xfm+UNpj399q92ddlda68CJyN/rs70r7dFcd1/a
tbTk8pPpz870897M613sgDzfFZGb/JXkLbn+kHWi1psr0lp/6d172SPsWv6/
2Lfi6+QP/9ahR5bf6+XM/2vYexkvd2b7/uhtj0Vvpi/Tnx+Lfi0+QP8WP3gq
6ww78/zocXe6Xu73WI4Xtzg/7cX8cFm37s/2DTn+7PTzNn6mrF9PpD3wpeVz
8NPx47kPO5adLZ5tPpwou9C6vM7uyvfm7z4ZPfAEP36+74m0a+y5fH/+Gefz
x+/M/itynYPGXcbhjozjoxnnJ9LujXx9Ke3uyMtn0x6JXDz811vtqWey/9mt
9rP/dqs9Vu1P/LtcN+1Faf8213ko131T5O2rkdc/nPtenf93RD4fjtw+lv13
p70i538t578p55/K9sk850bNc89979eX8/7JrAu7Ms93RT4fz3s9kfe9xk/P
Dy7uHr8DvyA+XX4P8Ul+FOPyexl/L5CjkYcvZr2+MnYSf+6lWbcvKH/p6VnX
H8nxl8bOfCTy85Ute3PjPZEf7yaP0r4n8uryyMXPRE6+46+32uue3Wov/Xdb
7enf3mofSPti2rvy/7tz/Jef2Wq/mvb0XO+Hcv0fzf3e843Mx7KH31J2a47b
eCL9PS3XuTHtabn+jbn/29OfR9K/R55Lf9Kek/bcHHcg50e/WLsu71UcdX/8
dMO/Jb8rdgE5uFb4AnbWnowf6zG/pnWE33bil4W7mLxe94F3gyP/w+U4pe+z
P18iJ8jLrBf8TKcyT/Zknv3YXy/n/Ubm8/u/vdXenPYn0v5g/t/p+MzjH/6r
5by7KvOLXKTfWif5pdjVV/AXia95Lv6mXMd6el6e61n2c+b3zsht9vSO/M+P
xp8lXsze4x+EG3sn/EHk4/nRjy8nXzJfL48+duHXl+P4M/wsGf/3pf1PaflX
4qdZe/2ry/F4V+4jrn9x5NXZ2b6APyrHiZM8Y334Wubr8eW8/37m0ZfTXvpv
Mp8yf2/JvHom7S3/dqv9YrZvyvx5X653Tvr/Qu77SPrzWuTtren31ZlX9BK4
f3gXcZDJFwjekX9eXFE84KD1WVw08wbea/IG4YBjVw+uVr5G5uHOjL9TmTdP
khuROw9lnD+U8f+V57faM/9D5tF/3Gr/q7QXZ//LJ7baz6V9U857LvJ0I3J3
T+bhmyMPyWtyfS3tOnmf9vrIu9vJ/5y3M/39Sq5/debrq9n+Srb35HmOZH4/
l/bH076afu5Muzv93J35frjksfl/OHr53sxbehL8LTkKV/l89MAzMn4uiNy7
kb814/2t9M/ocfdHr4SblKf9asXz+Pvh798p7pHrkct3xQ69LvPz3MyTCzI/
vhw58v3IlSee/y/t5oMnttoX/sNW+z+l/W+29m+85YXMq3+/1V6S898WufX9
zLMfyDy7MPPs+2k/nftfl21y7IXsvyDnk98/Xe3bc79vpr9fTH+fST9v+Y9b
7SXf2Wr/l7S/9h/Sr63zNu5I/z62Nf9Hnt+SdUv8VZxpeI3ib32ucKxwttdE
D78/er48k8m3i/w8rH7P55bjaXDtkdfwAsYDfAC/Hjm+IZ4T+flkxu2zGdd3
Zz7+Qcb9ZZkHX8n8+IPn0q9/v9Xuz/z+lnme9uMvbLXfTXtW9u/KdQ5mXt7N
TxU5xm/MHoa34ScSj2EfHuHPyrpwc6733TzHwTzHc2n/NuvEc9EHvpb1Y5d1
JXJ8gx+bHyv3HVxM5vfgVBOvg8M4P/rx4+y0yM8DW3Jv4hu38Kdk/t0YPe3B
jLMLI2+f4H/K9a7J+nFx5rX456vi+7HvxP8fzvGX5Px7ss7ckn49nvuIr6Qf
G2dkPXgh8+/PMh/+JvPv6bTX1jy+LvLyI5GXVyZudEvuz37gD4bbpPedEO+P
vT/5jPiDIscGr5Nxvc7PH7tyV74bP4t1eSdcsTh49KLJj/j88nr8Lhvsyowv
cuZnMy/+t8i9w5GL13x3q/2rtDvTXvydrfahHPeXkZ8/mfaytE/lenszf/Zm
Pv5wxvHPpD/rkUcXZR5/N/v/IOP8Kzn+ZObdveRb5uPx9P/Nuc/VmbefSnsy
+5/MvD+Z4+9OuyPX2Z3r7sp9nsx7+lT6czzz/KroHeuPLt8/fVTcDL7U+Of3
O43eaB1+crn/exnfcLD8gfISJ78dPjh5Ilfn/6cyb27M/R/MvBUvPBA98t0Z
/z8VefNo5N1Pb8m/zd+M3Ply5M6vRO78n2nvitz5H9P+X9l/R9ovOC9y9a7I
1RdznxsjT/8s/bgn8/CutG/J/i+nfUfk43fSXsrOTfuePMd30r4rz/Hr6ccX
0q8fSH8fzfa/jdz8dPr37dwvduzaOfy5+S78W3DXXddX/OoxOOgcLx8PfggO
Cf5+TVxfPAiuEx4zLdwnHAP87GFx+8T7dkef2xd76w/MN3pr5MqJtGfSN9N+
PPPhssyT/5z59AuZ37+V9oR5n/XgA9m+Ksfvy/w6lHn85szznbH3TqWfcAxw
UC9lnj0rvprnOBl5t5l146Vcb2+e74psPxv9VhzreOE2due65PZVuS/cLHtD
Hv+d4t7RQ+HMb4m++2LGx+OZx2fA5ZVc+pvIl2sjb3404/1A9MMXMj9/KG3k
69r34j+6NuvJNbFz2bsXln15T/rxQOzLRyO3PxJ5/SORj+9Jy8/0SO57Sfr3
sWw/mPYH0s93pN+vpP1O9v+U9SXy85ysezdYzyLn8Zn4Dc8jXg9+HXwTeF/w
EuFty/yB5+U3OOh70n9KL9vgPxQfJ4fho6Nn3p7xcnXG1wZ9LOP6v8t4/2zk
4vsjJ38w7Xuz/+XMj1Np/2H270h7q3kUefWzsfd+Ivd7MvrhZlpynD36ccdl
nm3SI9Oeyv6zyp48lPn9qdz3UNrvRl6eyHPyM/9Mzr8+68Sbc9/vpl8/nPl3
Webdnsxj69Xh6CfyXeW7HYuceyrj5Bx+2Oh3cLHvyDx62zcW+8efQl+UNz/5
jMGVwNmJY9yTecxvGxzuxj3wP5mvT2Q+XB75c13k2E3sxcib/z5y8+tpycFf
jLz587RfTHtj2thvm5+IvHw6dtwP5D5fjlx7y79f3p/cvjLtp9N+O8ffEvn4
7fT7grQvpr1w6/jN/zX9PS39+b/TfjTy8n9I+0Dk5fdzn5/KvH8RDir68uNZ
j+C75BdNXrr808x3+fKDA8Q7p95AcBY7ozeL34nrPZn5uh75uH50Oa/JRbyl
/JUvwRFEXlyWeb6Z9rsZz2vGN/054/6qzIuXMk92RO79YObzX6f9e5n3t6Z9
Ku1/nfbm6Mvjx818vdl8yjq0KQ8FfiTrlfVtR/mV4RngnM78yvJ/8Uxx293i
pGlPsUPkUcSuwc8kL/epyEf4bfLp8cjFe+i/kUePZH5dHnnxROTIHRUnuDHj
7O2ZZx9Je3rmx+kZ53fwq/C3RM7B3z0SPe6V+I3E88/NcZek/Q6cXba/nfl/
R+Tj29Pf9+Q+9FV66U8/t2wvyXM8nv69kvPOiF/mnvSLHSAOeis7WZyKvyXz
CP+DPHLx5MnDjJzjd+CPX4OfSStuvc94yPjitzgRObkr318+1G76Wcblkehl
f5t584P0vcyPdfZX5sdjGe+fyvz4mcwD8nAz7U+yQ7+znDcfynkv5XqvRo79
WNr35n4bkWc3pz0v+9/PDsx8+7HIwx/n701LTmpPsD/TPhR5+Fzk4dfSfotc
znrxM1k/4KKuyPu6Pt/hIHwY3F/WrU15xeG74Je7NfbF2Zlnk38S+fXtjO8D
Gf+3wO+U//9i+Nr4acVD+Xf5P+BtzI8fybx4IfPi8siB92Q+fD/bj6a9Kfsf
EQ/kf8n8uCPz/IXI0QsiDx9P+6Np3xb5+JnMf37a/0Q+pj0t7YPmY457IO0z
9uf+52T+ilc+mnl+R9qPZd7ek+fhv/1MrvdDWZceSf9/PvL09PT3R+kJ6fdN
ae9LP34q1/uR3P89ue+PRv9/IevEC9FT4CLwih2PXFwjB2PfsP/Og0OIvQOv
MPkY8ivkK+NTwycSXBA8Bb5keJn1zr8WJ4RHt/6kHycy/j+VefGmzJf9mVdP
Zn6emfn9w1kvjvHPZh6fJQ6S896U+fhS5uGn0l6U6/9x/Eo7s04djJ4q/gF/
O/HjxL/g3eFfh6c4eNnJ74cLlE+Q930i81xewZninNZbuN28Z3wQ8nbhE87N
fHw6cuy+zMd3lJx6PO13Mo4eyfj9Ztq/SXtuxvPr2f79ilt8Nee/HX4veveV
GY8vZj3hl71WvlnWJXgfeXb3ZF2Bl5BPdpr4bNapW/J8wddvfD/PeS3/bPrz
RNrXsz96xax35+R+5Ca83Jsz/uV38CMcyXg8nnZfWnG04/yBOf5Jbfa/13jO
ONuT9Z89tjv79+X4H8v5pzJP35zxeGa22VM/k/Pen/H8g5kf9Mb/yK6MvPx/
0h5K+yb2aNqb//et9if/j632v03797J/Lcf9ZOTua5G3P5f7vZ9cTT9+OPLx
s5lna/Tk9BuOaXf0gifzHD9rvmfenpn2ofxvXTie838w1+UX/i57XNwn+38s
x/9x3h9/DznLb4ZXT51scpX/9bqMW3mfT2T+XZK8kdsKhwpXCrf6YOzT5Ies
XcAvJH804/Oa4FqukXcRefxA/n8g8yx5KjMffiDzU7zxLZnPF0aOiG98Ou1H
IncfibwR13w87e9HHl3OL5zj7st5t8ARWW8859eW/bxWnmu24afY6edmvr8e
e+BteW/3pL0SDjh6+AH6Bns88/7Tef778vw/UusZfR0O+EfT3+tyf/mtt8lb
zfemd8NDyAcUJ5OPgpcNrhvPDT4SeegbWd+HbwBOF4+VeBH8ePxbw2eZuOrk
P1Zdv+EnyX2OwyPiKYi+vkHv55+JHIbX+1rWr29l/lyW+bYr21fF77op7y32
g/yBe7N9En5eng28rTwWefeVBzf5/Xlv8vzl08tXxQfgPQ9/TPxLeFumvoO4
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
xG/JDwu3o94bO5mfl17Cr2QcHVGfTp4NPrvUYTkaO2fqy2f9UR/GusF/K06t
voX68VOvhf8fTsi8N07DbzbxsOBQ8S/z467neeGLrYv4Xw5Fj8TfB1/wXH0n
67Xvg3/N+j51i8yX1DfjJ5k6WYm7jx9DXnXWX3bl1DWMvDganPLgl7MeiYc8
nO+lTqX469PGfcYhnn9ySB0BPP7wmPIcziaXPDe9Gd46cod9O7gL/S89m7zC
z6yOibw6dTnhOcVv2Uf081vhqOAW4EXgL+Un5Xz4/f38o+Rx4cbVKzIexQv4
iYz7kYPGV+aPOhxw1cbx4Nu0+Y7ssvZzdZ1U+ajk5hXq4EZ+8D/x+5GT+Dl2
8vOQp+q/4cWBG8OHA9/Fnxo9FM8H3kn62tRjJ+daL8TDpe4FPxf5CRfE/0Pv
jL9tEw+eelbixfKLolfTm9XJVL9rDz5WeWOdlwjHxO+a8/mj3lz1g+DY+XkP
atV3SMu+2J3rj5+c3s0vpz7ENv+zn66yH5477x/+evSpjLPhA03Lzpd3R9+z
LtOfxM+sl+KiZ2UdHJ6ZjFf4Q99XXeTRu+OHMJ7hjvA+8xuP3y73p8/wA9Bb
nD/zhlz77PJ90JvIa/m5F4vbZR0S16QHTd4pO1beqPmddRsfMf/Oxu25nzjm
F5b9m7pke5fPt2ZeZ76oKwB/dizrFXkEd7bGr/67y/PUeTZP1Xn1fdRVhbM9
GX/l5B2Ln9Kr2fXhGeU/IH/5S8Uz+RHk11of4djJh1ORa/yq/FzwfHg1xa/w
b9BnJ+8m95V/AxfIDzL1S6M3qu8KZ0fuwQV6v/L+6JXwXvfIc4teenH0JnYb
nB6ckvpU9Eq4ZHo1efNE5BU/6hNpxZF3ZDzSF/iPkt8Lz7Xxo/Hnql+FNwpP
CR51/ubr4OKjL8Pl86PKe1CHkb/s8Tzfi3m+pyJ/yTv1zNVZwS/O300fl6dA
Hj9WfrXHMk/hsPgB4TT4a/l15UXjxxWPoR/K279c3a08x8vxo/JzbbJD8URm
PeEnxY/evHTiOvwN8OL0QnVK+EvlmbMbHceuMh/wIeLdl6ep3uXwvkZOTn0/
8z7zFy4FDg0eTB2vHVXPiL2wmXVv9Njo3eP3gQeHF1OH2rqSuKD18Ti+Deur
PLKsV6ci7/B20hvkHbDfn42cXaeniFPx01UdEbh2fq0r0m94JnFDfiJ5TeyT
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
hx2ddYidCMemjhmcPT5A+jU9CX6a30R9G3lW1jdyGe4G3wD9ip8avgwPFtw3
vUPdMjwO8Ljr/BD47eQ3ZHzIG/c+4HLwEvNDbsQeOsjvnXHADjbexemvh7PJ
eGcPq9crT/M/xx9zOO0+fHiJ0xi/8hg8j/wSflz8ks/mvoeOL/vJXwB3cLzq
WRzOe4QTH1wmP3nuc1JdE3I0/cLTjHdp+PQSX3gnHEm+/8Rlc//L0sIfmb+7
6MG5L70UfmSup54rnuvcnz2nrjJeAOs2PLr1jR8bHoz/lLyXDzL1bfiN4j/g
h+E3HB4GeSqRK3Dnw+sQ/Ytf8hC7Lc8n7uV90yvFddV1Fr9hB7HX8Tc8Bf8S
HjU8OXBp8Meeb3g4g9eWZ0l+4BuSz0WPnXz19GfiupkHgx+PXsMP9tZ8V7gI
+HP9ZF+q4ynPBQ6a/gA/+0zkN70IT4F5yb9Mv5g8Bvw97IfYC/g72KHyip4l
1+ABMo4O4OPNvMfXjIf9cPA59IDLyw+AP0c+Jvm89pHHF+9RHF28Bc/K6Afy
POXRZH1hZ4gLss/5y9VT5t+8Ousd+0+dL/xw6j3i8b9/a/xtXBg/CP+HeM3h
rFf0uAfiF7znW/nOeX/8Z3CS7BP5Fa/jtcx7Hvxe5o24P7sUD9a1idc/mnj9
Z+I/OSBfOuvF4IvhI4r341j0B/w66pSoPypPWTycfqpfZ8tTVu8444seCgfK
zoD/VTfN88tf4ddk37n/bTn+Avp35h37DR6CP8P4gK/A5wOXg/9o9Df5q9Fv
jRP4Qn5oeHN8IrEbNt4V/7E6ITu+shwn9Fr4MDgNfmB8leTX6I/RJ+GF8GFZ
J17PdeDk1/Le5A2v4+2NXoF3CK+C92z9uAEPI71QPmjk8lF1GTKv4t/c+Kn4
39gdcAlnqk+Fv5BfKvr3OzMu5AnRg/AQHs15g3cqfq6Je+V+8tT5WdiHw38Q
vQCfNz1kM/0SJ4K7EV/m/+dPGl61vAe4Wv4e8QhycKP8J/Bm9Jq18KbJU+Df
xJPLXscvJS9bXhb+Kjhm+C/2dNazkdPDi5Lz8QRYN9hv1l14IbgQcV11Xtnb
cNEbeR/upz4NfzE7jJ8Hrlrc88St6S/ch3ULn1JafHPy0GadjF8Bf/Hgy8VN
Mj5G349+wR8FdyD/DO8EPW/a+HMHdxR7gJ9KnQa8Y3gpXQ+f3tSlyfbw+31+
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
Tvw4Xm28lvgJkn/HXw8PKe7F76LO1MRbPXfsAHo1/URekDrLE4fL+/HcUy9N
nYzWr7zX25bvH55LfFbez+C94SejVx0u+w0fzdj3eT/45eRP4Omgj8q7Ur9F
nEn9Pjw1/PTwqurem+fmxdRPhkP94+U2PiK4Sc839cTyXsfPh58Uni3Xw481
9bai94j7yKOiF7ELNspO8/2G9x6+OespfOIm+00ebeaXuDC+tOGPzPp26t7l
//Bfe+HVY/fxo0+eUdZXuFt5jPLO4Mzx+PFb0QvYsZ5r9MLE966mh6sHlO9P
H1BHiv7Izymut3lj+hf/Hj/rc/G7qU+wFj5z6xj/q7i7eCM+Q3wp/H14a8Xl
+LH5o2a8R++E8zN/xIfwyE88IteRhwLfbX1jF7J3d5bdSt7xt8l7wj+lHtHO
8rOpv6MuDjyWPHw427Eb+Tey3t7LvkuL934n+xy/xBeX++W/tH2HJxjuFi5W
Pj2cAhy2ugJT/xkfDZw1HI/6W/HnsmvlbQ8fgTxQ+Od8T3Fc6686NHDc45cl
d/+sjvtHy/GjnsPEk9UTsF5/Yfnd2dtTP4O/Hs6FX7L8KvyVcDvy0D2PeTzy
XRt/EP5M+gMef3nv/OPjFzUPMr/Md3xfp8pPfPLRZb/h5+A78V+9Wn6h8Z/L
CxAn55+OX40dFl6PwclYN6euVfxq1gnt8J3KD4y/wXoqvmVcmIfiONYT9YWt
v8bBvopjsD/E5fGQsr/FueGj+MvIS7wMwzOf88UhrPP8rvP+g9eAa34rOybv
TTwZL6R6U9YRfDBwcvoPhzj4Zzyv6hrG7sSfe3bsDvkB4vv0L3aK/AX8Krfg
m4mdI2/XOOXPk29xS/Gg8g/w++IZ5B+Br7yLHRc7+oJchz9DfQBxeDwW+GPg
G/G8Xoj/P36MS2K/4T3mb5FXgj/vgvT7kvTj9PTr8txHXjHeLXE78QN8yI/E
Djv9L5fzxTiAZ5OXB7+gvgLc9uBC5bPiOc37wAvJX3Ug2/gy4f/f+fiyNR74
y/kX2JuTvySOl3kAzzvrBT+49eIX0ybOKx6/XvNiT8nHM/HB4m2K3iU/mV6g
ri09e53eLa9BHa3cl77NjmCf8H/BwYvnPxR5S/8Xt6aH78GnEz39WXXtcv6T
7Dz6t3rU0eflweLPZE9OvmLuLz+J/ef5pq5KWjxXG6UP4PcjR+FZxPHU+cXL
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
qxBXGr0Jz4m8VPgU8Si4mqyrJ/BewO/EflHv4iX+V/nr9qfdI68iLTvzMH4t
vG14IyPPbo58/Fv2YOTbVZEv645np6lDpI2ckmcJF78j8gevm7oc8mXWol+o
c7Iz//PrDs4j+h19lv8Y76y6IJPX9v/Sdf8xm9XnfednN5FAsgWjTVagNWJm
5axAigVIsQpSEIzW3gUpkUGyJZBqmdG6XejaMtOtt9Caeh4lTmFrF2ZrbyDF
gYntFFLbMKmTQAsLU5sGErvMJHE7tKEwrb07SI7MaBMJduOFlfq8X5d0vm2f
f47u+zn3uc99zvdcPz7X5/pc/Js+8OLWQ+LseL/4kaNfop8Cb4cf7b6YG4wf
Zg4y/Ek/O548HVX6nfIy8wj1PQ8PPrtDf+yN49v9BrfK/tOdVSfHp8C7w5PQ
36q+T7dwcI6OT1/b96rz4yXc2//pk8Ihzbm7v/2fyK6Zb/l8z/H5na880hxV
ugf6Bl0nOnyPdXz8ODiheU30Hugo6c+jM8EO4DcPf05+Eh987i88svtLL868
bHn8xEHhw4Mn50fNTR5+Jvw+v6rfatal/qdwd7ob1iMeHZwfb270tuMF0XHb
WeoJ+HT6tvQ5qt/gcePfyQMHpyhO27HNTrFz+tPkwfrqR6fTfIj6UPd8uC3e
trwaX4xOVt+nvgdnoyujr1F9WXwHT5efrro/7D49K/EKvF7cNfrnrRt+YfSe
4neoe6rT4nHh9cMDZ36tPuF40XR29b/J4/DsZr6X+pu58/QO8EjoY/W98rfh
bdjS95UPZq/xJvEq8TJuzK7ql6bToN4HX9NPpi/OPJfRsddXmD+CT6ozms95
m7xKXyT/8q3t/092vJfyW/jiJ9Xr+MOOb07pC+V/59pfftnnzJeiS34yP3ou
/9jn7+n8L+z/R/td+if39P6xpc/8XHOo5HP/fHue8jB6POrB+jvwVuhCuY/q
vNNXoU924RcdWuqS5q8O7qTOF66Hz2ju8h76b/3pP9bnDJfDo4af0+vlh+3P
/uJn42uYt2CuKF0IdcFVt0d+Im/Q561+c7E5yNl39Te8jcvKi24X37b9xMIT
M/d1dLrxZfKzD/d9+q34P/Nq8TvkReoQ8Kpr4EBLnibvZG/4cTqEeIB4eeIC
9Ra4k+3o9WSv5dXwqzfy3/fRg+534N+wo3BjepO3HN9eF+c5/rnzoltIPwT+
h2ePL2leJT6gebZ0GM3nmLmaHfeCzv9w54+X+Wxxyhl5RnmLfOiW8pKH216u
vkef9Vvb8x7d69aX+V0nWj/6NOHZl3Te+I50ds/0vr7B58vfbjcXuPM45/nt
a3NyzTt8Xf2wvIk+6YmOQ9/7fPOhuh6345/K8/odlzy3fS48X+JbPJjH8M3k
Y/L8+lrgQ/w0/AAP2lxg9YHR62nd47mJF+gv7vnQ7nbiqerhw9/W37DoCMLL
zEXBD5HP+Rw+BhzT3Lxj/EJ+AK+RXX8tv/JAfuGi8izzIczfvTD7D2+U7+HV
wA3351deMG/GfFL+p/2O8aP03V/Ynof+Kt9LX/hc80bpecJ38xv8+EF6xH43
/qO8S3yyzE8+bs4H/20uRPEHv6dvDA9FPHq8uFN/5Og9iEvjh9AN3Slf129t
jsvgXK2T0aeo/qJOJa6nm4Nnf1Gv6atY5/IHfBe6of4PdzT3XD8vvSi8Pnj+
8N7x5fmLnj91PDqlo5vffupweBzyu2f0/6p/95p/hO/5vXTT2WHzWs1P5X/w
LuRp/Cv+if+bo6U+iC+KrwoXFUc4L+eLD6IPmF+Ga6rbmMOBN8suwVHvNYcl
+zI6+tkT+SGeJR0FdS4879Hdzv7oC6JbgSdgToM8Eh8S3qweh5elT+u0+B6f
sLxJvx78m330veZRjZ6wvKU//Ee8S88TfVhzeI7oO/rN7fnTfdVvc8VSh8fH
UkeQx+mrHD1719Nzqf9GndWcxup/+u/wLdVl6cbo68Lzpgc/c/XMg3Ofvro9
f/UtvEPzgeBP+urgejM313wAfcJdB/2/x+nRyK/ZpbbTh8wO/s72d+mb3nNs
u//MbWp/uJu54YfayuP0KdOZGX37tvgn8js60OpF+BNTJ9SHvvD/6ekc6/zx
XQ50XPnkoRV31d/Q8fUF4DfCCYeH8ez2ePocRkdWfYoOV9fBHB353YV0srsf
o9tWnmEer/yTP1MPpoMBx+N33hQn5DfPtj7hRfqN6LNa96cX3Fiddni4+vDy
f/rv1D/woOVt+pXwTfzBEfCa9Ofq89Hfhj8OJ9DPzS/R4aO3wq/pKx095D6n
HnVtn4Nn0gccXg38DH85fiWeoXr/HcWv4lr19em/yd7Ir8T78jz1AtcJ70O/
ID8pfn9rmStiPid7LD8190M97Jw+j184fdLZb3Gsubz4APqn1P3FFXBduiiO
r46G7wKXdj9PyaNat+aduy90euXl4nG8o+v6nLzzdXlO56NfSl8D3U/8Pjoi
dEzMm5QXqjO9of/uW9v/04GlP7KvvOUS+Zm4aMnb6Yyo591AD67tYfxOfNCO
ry/lw/rB2spz6c3I+9wH5/G6+97vuY5+i+vWfXl42U9+p16of42ujr61h1rX
5qTJN/FT4DozJzv8Eg7ALujzHL65/hX62wufCH5JDwCvm14+nRK4lXov/jVd
VfHTaf0K7DgdDf3q/A7dSHU382noOsEp8UXaXpHdN6f60d7Hr7iwz5nXi2dp
HvSB9jeXcnSk8lMXLn6U7iE/Cn+H0+Jb0PkyVwGeCufjv2a+CN3a/Ja+fH3v
/OAh/YF04eCI5jXhrR7f/v6zz23PVx+1viE8O7oY+LEzF0Kfenih+hk7gq9A
dxgvi9+mH6uuaz4Lnh0cUt43OqPFtfwTHH7isvzIrLfwL/Oz4JP4dsM7+JXt
1nVQ11An9jzJv/hRelauA/+FzwAH9TvMZ8KH1K+qXwxvZPTQ8pP4FfjOTy/1
jKvhgdkNOK16Ff+Mj2Ne8uX9DvW5mTOVHXHd1Sv5Sf3A+gE99/ol9Dvqi9Nn
ou8Df1Kdhj7s/p4D+jZ0HOHm8mh4Mb6Jdap/dHQv9I/EQxHv7ODv0leh20sv
SX5jrsQyp8H9YTfhpvCGqfv0vcfpUcDbH91+D16V+HL6fOUp6nPlRfhYeIT0
xulU0omAV4j/1CXpEk0fW9fDfFz3QV4j3qSfzg+wc3R+6cx4n74kHVDxtvsy
+ja/tv3/9DWra8mzxc09//yK+yKPUk/kT+Y6yh/6XfIYeq38DV0r+Y/5XPqm
8QvoUIr/zTXay++UF9GrHhzy8e3nX8su3xn+p04lD1dn5J921OGe236/30Un
lN2/Mb8If+SX1IHgEpcux/c79DvoMzcP8aC5vl3nG+Ei+v/U+Z76j6+Ls/rF
u976isRR+kT3dx6fC18VP/i/Pmi6Qvh5eIfOQz+Dujg+BZxcHDb8xKXfA65I
7873eM7hHOLyV7KP6mnq555f9pv/kI8c7rzgXebTsItwT/xFdRR5p7rM9Pfh
5bEX4V50UqavTFxdnoDnb06W+QL6BPUnv61vqPuG/0knx3xIdv7y4l+8r4s7
b3gOPIN91h9hvhX+ItxIPoTXMfzV9ED0nann4YdOv7O8jE6hOWrZT9ftyfy6
eea3qyN1Xvg/4hv+kz4M/cc3lvxGXVReg3+k74MOie+9T91KHxreUN8vP/X9
eK3mqMhz4cpwCrxM9VNxDz4pPtRbxQt0FPE29VuqG+LPqx/qN3mLXkfnga8k
z4F/w4GfWXBf8ZN5Fs/TmXTc39w+l9MvXX+OfFa+JV4S9+KbDJ5KZ1KfZXoL
+hzgBMMX67pNn0Z2H1/F8wcvEj+P/nvxl/qJeow+Zc+h/k998/iHcLwdOo38
2MIX4P/gT6ses7rOA/IGc3Dzf3CjqS+1Nccaj3HmztMVpttPBy+/Yf4Vva6D
+g34ueywuFBcgu8Jx1z7yp5c8y66YvDXRWdM/zYeov/P3LFlDq8+v+EZwqXj
GeFRy4vohdFpMaeA3ro4Ac9JXAg/U1+Fk9NrFAccpw+a3cFP45/UufDb8ZvU
++im0CPQJ6vONHievA2vq3oHPAUfkC6w/tlX4R49f/qh4J/qFzeo1+cn9MWp
T0//Z9vRM8mv6iOD++BJqycNnx5Okj+Bvz0C/9Q3m3+D7+kTx9u/bOFj4KXr
t8WrvEw/E347u0ufq/Ngn/DSfR7+Q7+E3gVdDHngyk+h1zz1OPUmuhd9r/XB
jrHD8KjRH5E3lGfiC8ANP9D9wsOb/sriEeuIDgi8eHDeRddFv+B5S33T++IL
dSV6P/L7meNId8T3ZI/lY+Z5iyfpccMz3R/9LGu9Cz/V/eDHRw9TfTu8TZxl
Pbpe+g31/alnijv1n7ELdKbkU/rr1W/xNcSF9NbwLfcvdRp9oNYP/y3fZ2/5
J/22dAvoU8w8CfW31qs+wuPqONntB/JT/LfjOX91N3YYbiPOxiefueD5FTx7
/lEdCB8a/n6EHc1/iEflkfqn6DjjY11U3GfeyJ34GV0nz5k6J57EVXA8x+3P
PJDRicwfWNd3mV9VPmAeg7yZToL4St4/fWvFJ+JQ/Yp4/PRTpv+IbnY4EjyB
zoX1I06wXukv0NGGs8B56ccMX7fna3i6rf/RKex51Gcjf5If42NWz9j51m6f
yvDL9EvqX4DzwdXEw/jt+lE813AL/A7rk7/VT0enET/kxOJH1aOOw1M7Dv4E
++H5phP2CBzOPAfxLlyn/AxOd1+8M/G2fNI8J/MQ8E/UeZwX3BSfXz1Q/Ure
5Xvxd+Qj+HP4JXS83lrydjo26/wI/pO+vPqMPGfmMNcPLK6RZ17b588zp7D6
rv48c8A+oh6k3zxd8In3l75iOvR4bnB3/Qh4i3BW/dLi3v1dL/2B+j3wK/Ut
+D+/6/6MbkD3wVwfPBR95fyj54edwj+VD/s9+qPh4Pqb+CN5i7mC/ugT6ZfH
7xU/4Ifgn4jf+afRh6NPky4Rfj7/MvPSlnhLvWr6Uuki5W/YP3oQ6hHiDXo2
8GQ8fXYX/gpPHx1b/fPmFNJdEs/qh6TvBK9sHYp/9Y3BOc1Vg+dOfad4Y/Ss
1VvKc+g2wsnVf+G69NTlZT6PRyN/G50wuGX2TJxkvg5+PR1FPCL8czra/Kh5
a/BW8Sb7ixdl/s5eessdh36SvOq0/AfemV9hF/HK5F30TM4tHri359lceXEc
XRe8I/gd3hUeEv2kmYPY+h19AfFh60F8I8+Tf8iL6Afoq5e/6geie2VeNbxm
8oF4tOpg6jf6n/Bs5Hnq4Po94X/iU7pUM2c9nQ32Fo5kXs4zPe/0KOmJsUee
88vUt/ESun7wF3O6xE3muujfxceQf8Dt4FtwHnwPfljcPH3MncfEmV23u5b5
Q/JPdkIcz/+xv3DVsZP4I+ap5kfU9eSB7D4cSl89vc7R19X/DQfTB64eR9+U
jknXh140f+t84EiTz+At1i8r7hm9zPJzuNPoli39sXi345fCkfF/1bXEkcPX
pHcOT+8+84f6rPCS8TDpAogr5jrQRaVzIY7ueugjhqvTU9ifvVIv0A+mnsbO
Tf2ITj3/pl6k/t11mr67RZ/o3OzcafWKjod3S5dAHnJj+5m7Bf+bfqHOe3QZ
lv4f9TLzPfk7PIapa/YcwsvoedNdnLoe3Xn1ivydeh79R3jeyeyb+rw+TDwL
eo3yUfEDHjhcgD6yOps+Mf5SH4zneviXdEvMZ8CHNc9A3licKQ5zfWauc/cZ
f5PuCr7f6EcXR6tT05+UN5lH6H7r5zJ3wDr/UfWlT5urS/fTc5B9kceok8JV
zZegk+g6en71Z+C3mTdMlwSvVt43eWh5ijkn+J8zL1z+F09fnAIvVffDY9Pv
6b7SRVJ/w8tjh+HxH8j/4J/rT1V/h1upb0x/sf6Vro88xHZ0VvGdyxvVZ9Tr
xP/yLPGKOh1+mr610eM097PjwJvU2eBb4ni6lVfLm9d5J3Da4kzrRF8WHRFz
uFwHeZW4xnwm/A7xwuhuqLeW/878m3A+dTN6KbfC+XpNvwFv5Lz8MdyN3d/z
17tO7ade5fqzj/Q0p2+oeAW/aebdmBuz1H3osYrLR69Y/wa+5le33yefV3+k
F2d+sefJ+VoX8jF1VvYI7i/vF8e773A8eJI+LDoLeIF4M/Iw8Re7K8+QV8DB
rQe6O/QT8D/whegamNsmT2OX+XXPm/UgfsfPnfkL6Srzu7b6Tgc/p4/X9aEX
zT7hq/Dv+hTFV+ag6n/X9yEela+LX83FxHfkD+iR6OuRJ+nX12emHjh1Sjj+
Y9vz1jfvOowOW3HP8Fi6b3QT4NJ0SkZ/K78+8Wh2YXhm6kvlt/gzB/FQxE09
F3AQ8RUeKt6SuhZcmF9lv8SPEy+oI8QDp49tXsHMi1NvKw5w//Gu4cCHzD/A
W+w6qZvR64cnw0vwT9hhcyD0r9H14x9HP8q8ZfEy/yceic84/PDyCPZy7MVf
2T7X+IDmeokL+C98R/pFl8TDgIfg28At9Kcejqet3xnuQDccT+JMfab0XOEl
Z62n7M0+/abwOXFH1xfv4X66tfH56bHjc6kH3LJ7vJ0z6Qq93vHVK+Qn8p4L
wiPxGtVb1NX1Y8uvT+D765vQR9j91n+uj0F/MtzdfAn+3byTu+krww/F2eU3
eCv65MwtU5c9vfAM6XFettSt4HbTty/+1U9iLgbeZOtIPQZurV6t3i9eHxyN
vcFfFlfTpW390ftX71Znp29L50B+RZ9RXsxPHqHbAJ8qX1Lfdb1HF734QjwD
d9O3a56K55Pejf6tq/AC1IkWnbzhu7O32QH8iUNwqfyCvFUeCv9R18Ejf0m9
rPtHz1KeTM+I/dCvqy+MnYJ30Mn0f7xx+SNc3vMtD3Gfpz+g33dn1x8vkR+C
N7FT+JBTR6Gn0u/iJwcXFQeYo2Ee2Fe257mz4Mgf7r7hE8vj8eHoZ4qv2Fv+
ceLxfr88CL4mjlO3Fo/TAzmYH4VD6C8S78MT5ClwjdEZKi482H01d1H9Rv8r
v3kbvZP67M1vFjfIZ9QRzH2g2yD+U6dVJ7Bu9pgzRK+z+JA/xaubfPsL2+OP
HhB8oPq5vFO8zL6aF66PZPDm7I36t/yPvZMny4O9/4H8E7xw+l3Tnx2/aU5I
18FcG7qz8oVnFrxIPVwdCM8D7iNfEXfjycgn2CN8wsv5hfwKPEicp5967EB+
Xn85vhv9DPxUOAg/O3MFsqt0EP0uPCA6V/yPuiB+yMSX2UF6kOIe15VumH5r
eObc53jwU9ej64T39o+2v0sfP/xAHiFen3qhuXzxceE8cB3xDF03/BzrVD2B
/ab/N3MfyxvxFtZ6Bj+Hr6bPVrxlXrM4zHnCidSF4BszZ/RXl234u7h7+pr1
v7CT+hLoGOLri+v7PP+m/weeA6dXX9SvQ18In+AqejL9Lviu/gN8OH3O/JE8
Wl0WnqGOx2+YyzxzwaqriXfgFeyTvnp1KPUn102+IS+iD+s+8vvmUsNHPKd4
wZOXwtHxLssX4Xvs/cyFzF/JK9kF61j+jOehPoQnJL71e9UZ8U/UB8a+lh/T
+8IHED/BxSbfaD+/Z+rqrYOJc1tPPk+/1nWna6neQldGv88R8Vb3Qz1GnnSA
PnTr9778HV3E6UukXyCfNA8qOwQ/UqfS5yVOHh3/rqP1C/+Z+cGtc3HO6GTB
h8PX4bX6t/AS1XvVDfX70Kdlb91X/X/qieq/+snofbiu+ozOmqvQ9Yfj3f17
2/s5uqf6ruk3049oXYuf8OrkcepicC44C/+sX54OB31ePEVzv6Yf65rtfYPj
ifPgE+wN/oV6hXUjr8F/N9/D87RXXbh1IR7B61AXgo86nvlm4kDxkb4KOg/i
ctcBboSXSp9o9FvpkrZ+1I3oNlr/M6eo/+s/eRSeQpdHfpnfZPefzK+Zl46/
PHMMwpPU8Z3HIXWcpQ8LnqI+AAcY/VU8cvz0RX9QnI1X9yYeN32jji9uld+P
jnl9UU9WD9J3NPqPxaniMv1N9j+ZfeGH1Svwy/Df1cfEj3hie81B6bpat3Bw
ebL6H3zkpPki+O/VY/FX+Ysr6Op2nnSW9FXcwQ5Wh6PzwS5Z9+OXi3Nnznfn
B/9Un8eTEUeIz/TN043Dz5s8t3jlfnhK9sYcEev+QOve8/9IutR/Hq6jTwRP
k84Iu0x/G3+K3zBvQ387/uXwmvlZvOLwK/OJp3+z9Swf2Nd+t4f7yNvZV37C
/x0Pr0EeRt+GnbWeZj5tW3G5fg/+zLxPePehBefHx4UnmpOCR6PflZ9gxx+i
b1E++PTiN/GJ8L7hXeJhOLO4Gt9FXIM/TudKXsdO6KPRHyA/lTfqv3vk97a/
j53i//Ur6CfQv8dPimeO6vsJ79C/jTcq32Ln97yn69J5q7PCV+SL+P/yq9HL
7D7RDeNv8CD1YeHNyHfwcuCxdJjVIUefKb8EN8OjVK+RD+N94+lO3/DHW8f6
srvv8jc8Keel71W8iS/DjgwfpPujT5qfVn9xPaw7+Z88QfyND0kHUP+f53l4
SdW1+NU99Fiz53C+4S3pT1V3p3vR+emDogfF/8IbxdP8s/NRT8ATuE0eyK60
DumU0R/SP6X+LR+0DuFEdIHx3M3lkTcNf7h4RN3HXBdxt7xu+gQ7H/EIHV5+
QB+LeRl77un8wtHgHeJfOvuj39F9wC8Qh74Iby/u1I8mPjEXefQ0xWt9Lz2z
eR7KY+ABdOvWORjsmXqA+Yd4T3hJo6dkXqHjeS7gDcVd6k14i+q38k/1Zvw7
eaE66vA549niFdN7H91xc6z63fBs+888pOzDzBHtfIdvrU5fXK2fDZ9BfZuO
HnwdT8dxB+fTH1wdYPR/8Qf42YUPC58VT9M18ryMrh5+Dr2pcD68fLxDfCrx
1+iWmNdevAonoy9PZ8TcB3/qUvTexGd4NPzwzCvWV60+QX+i52F44d2/6Set
f058hfcqfmWfJp4QX9DZo49Jt0+clv0WD+lTEeeqY3guxMP8LHusniJ/1o+g
jj/zhrt++o+O6tvUF4oHseit4KftWeJkebf+MetVHDa6da5H88/gI3AQ6xKv
jN8Vl9ClMCeKHZ84quuun0VeTk8SjmtOBb266cOiN6LfAp98wf/k4epKzgPv
Cp4682j7XrrvdCTwoOClnlNxPt3I6/u95mo8wz9lL/mxnfIn8wkmTuq8xe36
m/4DfRL6KZ7/39yuF3mb5/5Hff/wf1t3eCz4X+ZFjI5Lv5tuFp0A/QP44PyI
ug3cHV7kvqtz0YHDf525fuYQL7wc8Rs8Q72eP6XvMP2ncCP9cuZZ9b3qIY+Y
24Gf1XqQB9ApdHxxKT+n//a6jqP/yPmpj+CR8+vycHGl/in6bnh94kx6Puag
y2/gOed1nehUuC7qHeyqfML9eDO/Kd+AM4ojxX3WAT6HOqM+fji+vEh8wB/g
deLhimf5KfEbv2lO3F7zuXt/9A3VucTF6q/mhvQc0KnEt4GvqauPTm3fNzrQ
+Eh0k/vevQtfCY6jHjy8aX34+QW4w+jUmBNHl4N+KX1OejLwK7hV62Z0VfUv
ug7hbeLtmbe38Hvcn8ljfI85eP94+/vF+3AwfCo4/8xtWvhO6kyrDqx5KHi9
9MfgKtOfiV8OV6dLxj7LO8yP7fvo8fIH8CHr/WD7wUX0q+CpiFv5fXwOdTD7
WRejXyA/M1/CuqW/Hs50tt+nD9R9FjfAX/DE8SroERxX/xGn0GWxvvw/f6qe
DHe7Yqkf0WHhJ/k9fhafCv9O3Cwfol+nP1h9XZ1m+K76iuVdcHL+2vNPx7zf
hdc4c9lv215n6wm/jX0Y3TR6PfqF5Dl00ZxH9k78iddx2vXovstHJl4MX6XT
7+9Az736HXuDh0y/X//Y8Kizp/A0+fv8rr4f3jD9lMWn+iPMB8WPoUMG78O7
phdpvs0OO+e6qFs7PzqS+CL0e8O18G+sV32J5oiJh4c/Q8dNHICXqV8Pv95z
UNyiXjx1KDoD+tjppuBJ4XPkxzwne/WBwff7vXCYyY/7/dNnSqctvrr1u19/
nzy838lf4knyZ3RF9Hmyv4MLd9/p60//W+sGXm+9jj6e9fPY9vqPrml8F359
eIOdj/54ONXEkeJ/dneZRzHxMT1U54VXlz+Be+IJweXg2p53/a70mvEh9KnB
ddWV8ezhTXhAb4RnfqQ4bfrour76Gi4QH9LHxZuRX8bbEo+pq9K/Fcfpy9YH
Lm9y/8WL9HDh3urpztNWXwrck77XKXNs6Gjg53R+T5ivg0fa58Xn+lnwNx9f
9Lnli3AO15mfEnff7neH49MnuF1/ujmycHP1lc4bjg9/ETfDd9Uj8PTpPpsn
43PyYHi9OqM6jvwEzxw/Bz/V/WEv+bF1jgUc+17rUlxZP8X4t/Ijcf3oI+Nb
5H+nvl0daHTX8jMTD9EF0n+Sv9AXJB4cXbzWKzumL8j3iSPks/JN/sb5zDzx
vhf+IN7z/5nX0HWHU8PFR7fd7+k640uOjkc4DlxSHRJOrz8HP0e853fT//k0
nDB7gx9Jx2769umt/p3t/nAc+hnjP6p/TD9438OOzDzU7pf82vHgzPRoxTlX
VwcSr4oD5352/eHV6utzf9qK22buPVwObtPzoQ+LHZWP4X9az6MLhs+bf1zn
1uNXy1dmjgw8i56GunDnN3qIrQ/3FT4y/DzHsz7NQW0dTd9/9Vo8IvfBerW+
8E+n/oCXBJex3vXj9jwMP5AuJbvaOp/no+dPPRS/ST3m4IKjWR/8C14ov45/
Y/7X8BpaJ+pWL4bnqis6f/Uf14W+tPXv/k8/M9yC3nO4r/5P9U58RPGruHid
36IPQz/b8IC+un3e8VSmP+Hwdh2pG02/TfiD5wE/zHXRb0IXbvLDx7ffq29A
vo4/h4esHjN6tXgd8EV8e7rpxeH0b9X/4K6XlgfK+0/TE+x9+gv6fOk9qLP7
PYcWfVjzO46s+OfC097pup9Vt+rzr5lH2XnBGx3vzs6PrjreOF0ovwOvgu4f
fttxvG74QXGieBEOe9Ic1u7f6Hn3vIjjDyz1CXgHPGRw/HB7/Fv4ClzD9XVc
vDXP0fgx9UTxNf2j/Kr4RfzmefE71fPE0+JDuBm+6+jMZaf09+F94q/LK/Gs
4ffiaLgoHQf9oPhpeOD6DQenLO4/XBwHNzXvzjwNx9HXjdd8XXGlORan4oPo
72PnxL/mbIjX8P/29T0niuPNNRefi3vp9NGTF4e+LR4v/oKbmhdtHiRdwMOd
N/0iekD6rfcV517Q+VxirkbHMf9L3fGyfp85F/gl+giu6X28R34JX0T+Yz62
+vf0b9AhiJfEbop/6DSx6/y7/gP+Vx8RfZDhn+en1Y30QY9eFH2Lvl/fuLhJ
fDC65tldOJr4D74zc3npnsr/4UQLP0J+C3fds9RFjsHd8CLgntkLdb2pB9JR
ozsgrubXXW95vD6A/B67o46PVy3e83yOjrR6I1wBT6Hzhe+Zs6YeDF9UR2MH
xe/07MVHcKPpq4ard97qiXjFg+8XZ8FTzZmwjuTzo8cBP1OX73rhL+tzgM/B
f+lCHTCXsLgHTx+v3XHwFODZ5hSMzpQ5Kt1ffOGZkyFuDA+ZeFS9+he291dc
DYej76Ju4vnQ5ya+EBfTL8fXEpeYp+Z3eq7wEugTOA/9FZ4H8bx8xOfw2NkD
dS48aPn0W/Jz8w314dP77Lh4W/SdzFOkbzb66OrY5Vl4G3j6+rTl8fAt1911
dZ/oiurzx/c2F1Y/g7wI7+WZ/KO5vPjT1qs8cubwdrzRn3x0u27wufDB4APi
W/4THiB+0Ic9ejHFJ+rqVy91OX1X+rrUS9x3vLPpAyqesX7ljfBrfdt4wYfo
TNOnUVdp+5I+8erax4sH9fmof9GjfyHe/CFzg+h89n/6XK/BWcWhxYvm7+EF
m48uzmXXxJfmQBzte/G41e/ol9ENNd9Hncu8uQPNeX2y836z44q7vTa/1jy8
Q71PT41ukLkL9K7p8phbbs6rvGfsXudrLhPd6dEDX/Hz4s7hh7meXstP8gvs
4ui2tx1cH/7cOtHHC4fWT8zOWm/q9uo2B8yl6PjqvOaOwh9HV624YfT0zXco
LuG/xJXslP691e7Kf8U9nnfv0w3xvJnTpv/0Wn2hdMOye+wW/cubimPNS8Mv
MP/i1fS1953odfEv3vQdbff1/qvpYdPlPtP2jd3+/p1L/mB3+8Tuds/r9f2b
P36duQm7+gI7z+7qs+58+1/sbum17utz5nObi3H37vfvfL7jX9d5v91xn297
U/Guudfmp4mb7+v3PL7ww83BME/uhPi583+Djk9beYD5BXgj+PtwY/PA3zJf
l383F5cOXOtBPyc85iJ9lq2/iav0garX9xovWTzMnuv3wO9S5525R61jOK3n
Un3c8znzkcS38mJ98ovO7ujeZyfoQcurxZ94fPrP1MXoqqnnizN31LPzB2fN
MfC96sl4WeEQoz9njpD5OeqK5larq+m/E9/hb5Yf65/Af8L3GD5v9U91W/j1
4ErlE+qz8hJxNJxIXEUnSBzOXuAJ0cUZPhYcUrwTTj36+7+wPQ6+nzrZ8Aj4
9Y4rfqBfADfEh5i+CPMC0mM1n02cLr54eZkPp8+RToDrpa7q/MRVw98LR556
9Ze3vxsv2lwQOO/wvJwvHmm8nckfP7Nd93BeOOL0XeuDdv70YH0O7wC+XhxL
DxuO4nPWqTxHvGaumroEXoF8e/qN08Ma3SX8XXU//QF4b65DdQT4Kz1Nuv/i
yh188fgV+m3hpHhp089d/CrvHj4nnDMcffor6BjpL/lr2+dRfxw8Di9z9IjM
r2Kf8BDwC8z9KP4Rl52ms4hPgv+hn6D1SN9y5pfhfeATyxvV3dRN9O20H516
/QIzF05/ozjqme3voP8iTqPzS1/fPEf93ea7wGPxrKxHcRQ8fuJbc9XwyJc5
g3QV4HX6JSY/wIvCA1O34UfwVqpLDh8A/t7n9T2Yq4an7Xs8X3DUsas9D3ht
+Az42OIwfRDDG8+/qr/pu4W/4UvSr4V7wUn1X+BFynM9P/DTwTfU29R1y5Pp
v5rfaC4TnJC+nvgTDxQeah7v4QUnfaN46Xn6R8U95te+3f/psZ9fPPh820fa
Xpl+1KvFZ4eLE8Vl9xd/3d9+h9u+0edv6v9wVHPGxGviwlvFYZ3/dct8LDjw
Te33StdBnyM8FS/hrXAC/WjmK8MxPy2/7r6bM+N+0D/R78Fe6QNR7zLHA1/F
erHeZ/6peqO6e/aNXcA3xFdT/zmiH6nn/k75cPaCfunRnvtHzS8073DpazIP
ij0dHVh2FZ9Inai8U16qfnRPdkdf82319x4qv32088HDvap89IF0u/ef6P+/
v/3/zu9v/3/M/r3/gH7gvue1/q/+tbfzV/8y31ef8lX6c7Of8Aj213zhk3Sl
8G/V3fRT4Lt2fHpQ6nKHxOfuL/vmfbwx/NRlf/HwTv6CnRt9Y+tIXE8/ZeFR
8GvqwuLC0UOtPjX+ufhBH4E5eOKLmY9Kp+cLy/+LY/gP9e3pc9Pf1HOi38H8
h9HxK47w/Ey/Oz42nms46uh7FM/qK8BDgfPN3CNxIH3T4prpxzT/+pe21wlO
7brYshOjf911mnig36eezS/ih8A35IPug9/D7zp//SHqz/ov9MXIL+kDwSvw
ldxfPCT4Jd1781jgKfJW/X/qb/psh7+f/5bHqSd4vuCAwxvGc+w5gFfBs+SH
4obJR8SV1gOeRetYXjF4Jr5462XmZtGfiu8xz0t9xPBddZSJ+zsfPEv3febG
eI793kUHDv95dNR/fXt8cRm8bOYEy2t6zsTb/BWe4vAH67P2/MHBRl9WPiFv
kte17vBl9Q+yU/Iy+d6sZ/qF8u9+B/upzn4c/ggvULfp+okj1cHwVz0X6kvq
7MNbXnQkrlrqK2Pv1NHkb/BReX48nOkrvW/7nHue1KOGryfe1Ae6zkdo3amL
qtebS6fujf8ozqAfZz/8yjvC0R7c1WPY+dnwtMuL124oDrug7bPFbxfs/n/n
hj539x9sP39r+x3u++7uvN7+Z9vjwRFfLa57uPOiryC+vK44UF2ezujlz233
uy/dAHqlz/Z/861u6f8PtxW33hrOCG+8v//f13md037n9//r4J99z+N9Dz6u
OHvsXHaQzhkdK/pg+r6Gt9TzeVfrgx2dfuDyav5O//Hkzw9un7/RDVAfx3s2
f+ZL2/3pvukrhY/we+yi58YWjs5u0e/FM1/nZOrHEE/qaxKPTr8LPhB9GfNm
1El6X5+u+NbxR49GHv9/bP/PvpqjoN6jv0SfqHr8bXhC2SHzydVPD8j34Zb4
AfpJ6PovdXPxpHhM34j5CnAEeb7+rbFz6v3FO+NX1d3x5eXF5pTqS8jOHwo3
xs/Ef4OfzfrQb2oenbpm8QVdArpC9PHoiYi7Bld0fHhhf6OHt8xrhUPCBz0X
/PDEafHx6B/NvPj8GD+tPjl6e3BS807gYfjJ8i59MeGyUw/KHw2P9JHteeFl
wkEnLvF7Xfdf2v4O8QVeAR2C4ZXiIfD7XQ9xn/vk+luXR+Rb+hD14y1zD63z
PXB4dULPnT4ien50pOBY9C87LzqFMwdX/hKOyP9OHNL9GD1xOLZ1I3/O/7KT
+KlwdPz50dnh5+sfw8uF38hTXG99JPQl6abhc8Ph1X8ezz9cu/jFfepM39y+
fqP/n8of3sF/5c/gGNfk5+9te6bPqdtdjs+Wn8IbMPfu9r4PXnJrx1dn1E99
ynnpn+h84U50jW7pex9RL1SX++b2/MwnpNthPoT4RT/H5ct1MVccLjfzlvKj
eA+unzonXt3ry/v6UvDlzC1WL6UrJK6gd6U+am6YuqHfYS75re3/enEDXuEJ
6wBO1fv6tJ0P3Zbn+x54luOoe17e/+mz4Oeb++53muNq7q666Ot93nwVvEZ6
OvArOpCvLOsIv8YcdOsff+aHPSd0wuhSqnfC0ejP412Km+h4mpdmq+6kXqXO
rn40/PNFx2Z4rPpoqr9N/0K6LPorxOtwkKnnZWfk046H9zt4hz52/H19zfIG
fpVfYnfMIygfM99NnKcuObqE/FL+lr/TJ8ne46vQLZn8N/9Dj4S+g7oHfofv
l/fQd1BX0e9qvtXMQ8LfUUdRp8CHpBfBfxRvXQGvfGq7P9wTT3Lmbzk+3pB4
ze+gW9v50YFSt3YedGX1icpD1a3VlX2O/h3dGjxAdYobzUGklysugj8VJ8Bx
6fWqH+H/q8fo68bvhwvLm9WT4AXDz9En/tvbz0//v+sCh/zN7fH1r04fNL6r
+tPvbH/36SUv9764Dn5Bj8f30Zl3neAzB6w/ekF0HL2GZ9J/p8fype157Nef
rT58dFnXnrf6UEb3uLhNHDw4kjjkb21fw2msG7wv95kuPZ0WeQwenHWlzmXd
ir/o6FyBh4yfZd1bB+p3q35/90ucRgeBjrPrBvdU74NXweHkkYMfFQfjRauz
wXfW+Wt41HRM1VHp7Uzd3PyYhY8gLpz4Dt8Q3pldFe/rX8Tr5k/4T3okwyen
k6iflz4I3eivb1/jieGTmfslH8f7MR9EPInXZW4Hna+ZI6WexL/mj28XzxRX
wEvwj9Tt6c7g8e9b4qOJD/LHD/d5cZv5neZO0l27lX5z33sBPUc4j/hm0TV+
Hb/K53r/lo53Q/GSuNbWXDX1OnH2DcWf8dIG7/E5+A5+mjqkOOz1jnt4idOc
v3qi62Y+izk06sFwOv0U5rGbS0PHTBykzxkfGu4nD8Ifsn70LZjzNbiOuQ3F
J/oj1Jflj+IWvEb9QKOHXxw0dq36i7ycngZ8gr/An8LjPMvewFcW3GP4VOwu
PKnnH96y8tX0V6z+jx1Xv6JHiU9G/+qoPg99rvJS/sp5iZ/0BdM1eHS7H1zm
igX3oB9D7wuPzPGmftB1PS0u5H/4Gzih3y/+wYeDR5gDzG/y9+qW4pWVRyE+
xMuAy8Az5O/ub3Z8eGH00fSZ4LfAI82Rg0fxI3R8bOkeLPwS++mn5Ofn/Nwf
eCbdodbTzNdbeH2Dg7lP8JjqbvgYM0+kfoHp120/z5e+MrxAOu/m7AwfK3x1
+lLrx8Y7c//xhfjNqVuoE7pucEC6O/G98NvM+4PjzJywv7/db3Qu4ZruF/05
cQg9G/2u+nw/t/0cP06/z5y5nQVH8xyJH63XG39r+70ztxC/vP+fhEuZO6uu
Xh5xJ3079bT2py9Dz29/vIKD8QYeqL5vrpW+A3wAeod0bPAH1PvF2Z5XdS76
ssfEd10n+LDrxn7K2/DI2M2xn/rH8MTEVUtdkT31vjgYf0A+I/6G/6lLu1/0
LuHJEy+HR8LLpg6Wn4K74RUOrio/z9/RG4DTyofNqVjrafyZOB3/0BwD/Hf6
DPjX+nqcH960ei9+/swnLW4yr33iOrp3Hdf8O/U4cx+cv3gMPgPXm/nV4Zv8
/EMd5zK6uubK/fb2fMw5FX/Qvb6J7gndlM5Pn+cdeFR4V53XY8U1cK1TxWmP
d7yL+57zOh786nDx33XFV+KwG/QnwAXx0NoffghvO6f+gmurN/5iOvLqgueL
23r9cHXIx9UNO84Jr9UVO4/HF10Z8xSfcLz20x8LH4S7Oc4jbc3BwLO7Ei8N
bgfX7f9nen1/33tD5/t2nzvc/89fPndO8an+5fO77re0hdNZZ3iN8orzijfp
F1nX5l7pq8N7xoOkc0mnhn792p9oP3mLfj1+kS4Tv6pvz/Mzc1D56/C0mUub
f2O/4BrTp6CvNPxPX+z+Bd8ybwI+dFY9Qr1Mn0B+h07v8I3VEemT6QdTH/0H
2/PCX5j54XAz+gX0aX2P45jjtOA4/MfB5TX/ASeDs/hd+kDMS6RLCE/hR0aH
Gv9eXKCuyW/jKYuz6N6Iy/gRuMuq+14fwtTffB6uUHzBvg//+mvb6ytOdVy4
wf4lbp0+D/1n8Dzr54vb8xqcB29O/Vc81no7vsR7w/9Z+k1nnkq/E38b/oLH
I57DG1L3FI+N7sU/3r52PLra6rHw2IkrzIvUP6MeTXfk6PZ30Y0S38Hj6D7N
vJn8+fRNwJkXPV0856nDyYfwdMS/8oGuKx3Oed49p1/f/v7pz+z64KHiwc7c
rHQB8JkcRx/p4FfquuKW4ni8RfrDeGbyR7rXoyf6G9v/w8vkH3BPuKF8+ay4
8BvL57Nv7ASdRZ8bu0VnBA4Kh64+rY/R/YEf05elnwAvmHlp5m61rtUxXl7q
J/ib8jr9yeZmiMfoYMov8RLgF4NPhHv4/vk/faTup3quPG34V73Gl2G3Vv1H
dsX3mQeE3++6zfOgryd/pU5FZ4u+ty3+6sS1i47g6LbRO46XAI/U9z88xrbs
pfq3dTo8NfyGrufwB+Hq7DwduPqS1OP1wZ1ecQ7+Qh9W600+PHqz7levBxe2
TssnxPPqdYNL8/Mf3F5H+nkf1ldHhz57Q+8aL4KOiz4LOoD4veIiOgfutzku
8FxzDejiqI8Ozvvby/HwSlsf6qTiucf0eSxzM1/s+/QnqJuax0bXRTxIZ3Hm
rZZv6GORT+gvvq8484m25/d5ejCuk/47c1rosdOJFH+qD9MFGn5b11E/jPV+
kbwOHzNdI/j+1G9bN+KOmb/dc4KniydkvcJv+OXho1pX1ik8iL6a+Q2fX/an
F8iOs/NwH/U0ehpHt+cpzh0cFM8XD0y8wW73fIg7PAf8iu9Tpxm+mO+Vr+PP
+r3iN/HFV7av2W39xvr24H8zdxlOR28Xf7Dfd/Todrt/+X7xzcRTru8/2P4e
eAh87OgSLwxeIl7oevKf7NzMn/3N7efZs4NwFTgMvJd/dhx2U90WzlV8As9S
Bzy61KX1d0zfMvyyLT/se4Y3bV09vt1v8h322PrU7y2OU8+Tj8CV8Lv5B35R
3OV508/q+dKf7vrpP+n+Dh/sN5b9FrtuXYij5R/zGj5snalPwEPlEeIYz8NS
h7S+1FnFj66rfMh92rPgk9PfuPbFq4+Lp8XPPR+Tn7JX4l56TvSk6yeeuZ74
AL5P3ftvb48rHp+4Bm6MVwIvlmfrR1j1kfhlft71VTfXN7HoOrFvE9f7fvF2
cQ08UB/S1J3CAfzRPZj75f7T297ZXgffP3WYVe/Z5/As1e/rj1d3GR5R561/
XX/yxGeLfhY8BK97+grCL/CJ4KIzJ0f/K3y9+y1eHr6p+QO/tv29cx37HBxi
+jeaxyruVQ+ZvJnuFr/oepbv0PcxJ2z2k89bn59ZPnf39vqLl9kN+pajxyo/
iX8AB8ajnefGulPX6Xk5tOQl+Bwzd5F+QHEYvuj017ef/ij1WfG89+n63Rvu
Zr4O/hocWnyH50g/5EX143A4faKfXvgB8GjH0Qcs3ntL/yqeaMfFr6QTeHlx
4QVtzbHRf/KKrfgTz/WJ7XmJB8WRdPzMFTNX55nluOLBmbNS/C1eHN0uuigL
z49+AL1x8yfF7XgS+KL0yelcv2yeZffzrSXef6bzwHMQd+OB0J8Q/8PpX+48
6XY5b/3hdBPV7fGJ6ZU7jv6+madQXqNe7/iTd9N3wA/Hjy8+xmuWB9GzZ4+n
jisu/Oz2eYLjjf7+Mk9leOu/vD3e6ASoe/N/6onwJX5CPVNet8TB4j72f+qr
i7+auQP8+MIbnPiBXh99Rv2xS71xZ4krxUfidHHM6Brw964Tvenqo3AVeLA4
Q549ft8WbiZekH+sfo3/Zn/1tbKz8gz2MD8wuil4co8uxxUnZD9n3pH7bC7F
V5bP/er2fMff08sJ1515bfog5FvyNvNROo+pE9IfMefi72/PT18j/he8Ub2O
3R/+bn4DT5jfpr+pn1Z+qq73kQW/ggPCFeklsj/0Up0HPtrwDfCv288cS7z3
pxc7RNfvZZ/LnukvxD+mLwM/GPvYa3gIPIKu8Nivvlf/mvOkf4UXN7hScdDo
Hvb9o4PR9Zz+U3FL102/is/h503fanHYzIv3nIk7WueDd+krqf40+prXLe/r
N5fvisPYpb+7Pc+pY8g7l3lH+CwzJ4qdwc/0vvxbnkv/B39mwZXpxqrfs8vi
wulTUn+S98Jz1c0WfcXhdbFPdMP0J+sT0meHL67+oB+uz8tn6X/hbc8ceXZZ
fu53yYPwpZa8Du4DN1j7EuVbEx9mH6efzfWRPy3zC4/Jy//R9nsnf6lPi92Z
620/vIn0QuULcCk4qjh1eA7ZI312eFWTn5Qv+f/TPY94E5OvL7wMeLR6rt8x
17H4m94Du3KR+RN0Z811Kj9T1xLfsCfmnuhnFm8PLvvF7fNs3ol5tHgPcEO6
qGOnu15wWfNP6D9/0ff9w+358WOjY/HZ5fPZy9HF6r7pkxz8Wx2i6+D+Dh+Z
/sIyv3n8YHO38Px8z+j40gno/k2/4NIHMnm8eSn6B/lXdVjxGD8tr+WP4Qfs
G5yg+v7gfp6rL2/3o7c0dlb+jWek7isO2Vm+l5/n/+GLPff4nKP7XNw7fkA8
Iy8VJ/ErdN0OL79zqVfKi4dHt9St5jr8zeX84U9LHengUp90H+CZ4tip96tz
4tktOi8zX469gmct+B8+F/1cOjL4nnhi+AbjjxY7jcc2fb3icfUhvAB4oPPE
d8BDFS/Def3ex7bb4/8JPFB+MvoeeIvwpfqM5e9jn8XB4lbzhMxpOLh9X35E
FxufzfpSf4PvzLzecJnRjei5mjlN2Z+pixbvsQ++Z/pes6vqJOotdLHFYZ47
/Q7iUzoB9Gnw1dg5dTLxHl0Qc2LFu/JPfHJ5q/kN6ruDlyz1N/Z69Ov5r4e3
+8987XDOmUu36JrP89b9FT/jzY/dx9stvqQjNPkMvm3xuvxZvUkeMOtFvYj9
hVexW3ja7r/8JT/Lbh1feRP69le79/Ht58fuwP3Y0V/dntfUv+sbn/yc/YSf
eq48F13Pwf/g9fq/1ZHwY+5dfg8ekHj3S9vjDw4oPoEXLHHT8KR/dbuf+vs8
3+YfLXwfeai8cs9iL+TJ7t/gj3Bw+P0j2+OwI6ObxR/AHdXfl77+0WW4abuu
R++N/lX+f/Af+lD9sUczd9lz+ivbz1n3ww8oT2RHPrzkg/IreS5e7czdyo7M
nGnPV/Zk5tS11Q91DT1kOlnm5uFDFJfpGzYn5kV5aa/xQ8R14l35tv6tmSfw
1e33wMvo/LN/4kZxpbibrgpdq7v+4XY/9kZeS6dl5khlP9jju35tu4Xzs6/z
/dk58bm5Ble5fw9vz5sfgS+Ib9fv4ZdG12zBL1+Gb4hT84vsMT+nTu93DW/a
+T6w3Q8v2/eqc7gfM+/QHMVlHc667brQO3M9nlx44OZ9zRxwOm/i4eJCfRfO
13Mz/Jb87sT5xYHwiZmDuLOch+vYdRmdjuzk9G2UL7jeM88k3eeZvxKuhb8z
853UpehHlk/wU/4//Ab4ITusniOP/VvLcfjJRR9trqO5jXSquw7Dt4DD8FPw
Ef7aOuw6wYvme9hx/UN4T7+wXdfqYOy4OvPMZeeX1jqV/lT47BqP4o3yQ3AD
8b3+Jv4WbstPiAs+uV1vo6v7me3vGh7V4e16EEdMXZf/oxfofjqOPGfJLwcP
k+f8yvb3DF+D3/e+39P54WGxS+LbwaflgT337JPnd3hvnmv2I/s3OoV003o+
+EF2aPhcD20/Lw6lWzf8t9YJ/hBd6sFN6Wn1veJF3zd+I78Hv+QfR0fx17fH
m34TuolLvwg7Jk7mb/DRzB+De6onOf+Ze9XvFw/QRXG9PV/81sT1dCjpzGf3
1Yvs7/qPLqf6Kl6huBxuCnfyHKTXPbrz8AxxqXXXcyp+WvXP1UfGHvccwEeH
n6OvCq7ouV51NxZeP/71zGtf9Bymn5HdgAeLM//h9nijB7Hga+pp6mHqLXgT
g9+KM39je3x8y6nXu97qH+po7EXxtnmca13I+6vOkud9cHF5DLuDf/uZ7fNs
fbF7g8/jVcBp4E7yAnyj9vcc8hfs/+RZ8CN9stbZqpv1d7brHb4588V7PuCA
4pTB/4qD8EvNq8IjHVwwXgKcdeIB9o79o+8tfut76FBNPXeZ4zV43Me3/4dH
DA/P9f7w9jq47uzi9COUb8/170++4ffP97D7rYuZl4PX8pnt7xjdM/ntois3
OOZt28+Pf6Jzwx97TtQZ1Q89B3A93yevlW8v8cX0LeCnlM8PTxHOiTck38O7
X/LemXfPTvR8z/y4pW9m8l58q6U+jUeGXza/E06w2F3xy+CV6r/Of3nu5zj/
6/a81fvHzn3+P/498u3hCbhu+mP068IZl/q514MPwjXhnPR01M3Mj1lxUf3B
+Obqal/ffl7da+bsLn3wjoc/iv83eo76eRddbnUv/TXm7tDzVldTZ9N/g084
eCv9orb6udTTTi91srPL8Q/om6Yrif+19HHhLY5OjXWIdwUPdt+8v+A0K5/X
82QdqDcMfg8f9zyam82es+PyEnaJ3c+uqUPJ29TDZt5W9hfuuvZZDF4onuv1
1Qu+cNeCF7Df4tqZT4IXH/4wdTO8HHmnPoXiPXO6xY38k/35wZnnB3ftOG/+
6va48tqpw8PFu2783pNLfUq+amuezNRX+Gv+WxzGjsDTxAf5qamnyB/hY0tf
1OD6+LH0m5bjD99+mV8lnpl+vYVXNPPMPQ9f2Z7P5GV4zI6LZyPPgTvKv+HJ
1usvbr934jN+rus4ea/6LpzXfuG4E0fx0/Dm8mzxu3VzZ/Eb/evhP3xm2Yrv
4TNLvmVe8+hYq3N03uII8RUcBY6mjoKPNny2pU44z7P4susB74F3ypfEpYM7
fHL7fW8ueaZ8a/Ii+EFxG5xI3LbiZuJieMz8bvcPbsN+0TcQ76rDWgdwaDiM
P/GT9RVeMfE8eylvunc5judFfm+944WpY5oPtcZh/L06sa1+E/5cfQ6vT3zi
ebK1v3jGfj7Pz399ex7w/PEr+gce3x7v4BL/nV7iOryb6Qvi/5zf+vt9z9e3
n6MX5PlVP8LjVy8Y3Rz2BO4Ev4HP9PxOvYC9zM8NjvaXtt838X92YOpV+COe
L88xfuj1y+f78/mx8/DOznfq7H63uF5fr7jRupfHqX/9z9vfN/Od8u/Dq4DT
9v7gpK5Lz9H4oV7P/GXPh+sLv+Q32OGVD/nLy+f5L/dTPC5OV6dSd26dinun
LqYuB2+kF6j+B+9w3fjV7uva7zG4CfyOH2z9TL0huzXrx/Vw3+WB4qvyxbH3
6hJw9gUfn3nLyxwRfa34g3AqcZU6DN68evTMjacf22tzQ/RJ2g/fm96Jvsvz
ljqCz9PPw7ukr4cPpN4Az1NXN+cEbjdzBs3jFN99bfu5+XzxHF43/I7uDHzP
eamTiQOnzgV3XPlMj2zPa+Zpq+fxc/CY4l1zFvFexYtwwqnv4Jvnd+EX6lT+
Lx7GM3Bedy04JJxU3XCug7h64W25L3DXp7+yPQ6cVJ1v6nRf2v4u8T9dEddL
3WvOa+nTcDzrGh/C3Bv6jvoFhifb583B0xf7ir5getfx2+ijTN3UPGJ64n1+
9JLpMdv2PfoY5BPyD/VQffq2o3OJH+z3L+v56j7/UOdDZ9o8kqeXdel32N9r
fTA+RydNv8Tcz69tz8Nx3Uc8F3mQuuPkecv9Hzv14HbdTj5oXRf3yefgemu9
m52wHuSRjjs8Ruufffn15Xs9l/I4cWe/Sz5251IXmblBN2230x9N5xSfGs8R
DqweFb4/8a384prtcaePZO370j9QfjLxDT8n/uF/4ZDqmnT7xHtwfTyJ/Nzx
pb41PBB9gKvu7l9dtvzr3dvjTp+qeuOSR6kTDS+Mv+46Tj3PPCe63vidrg8c
Gk8UfgGvhmvIz+svF2dN/HjP9vznusI34b7ixV9YPicflVfsbL/P9YN7Tr7x
he1x8GWH7+6+uR9Hls/Ba/HZ1WHwc/SV4tc/ut1P35A8AZ41dRB9J+J+fTr2
h5/iz8Nx4Vf6mX0PfGvRHR6cWV6hz0g+Ad/99e12+miclzxj6WsfvfZHtuev
z2iO82vbrTxmeF0dZ3Q24HHwlEW3+sByHuLY4UmJc+HGS9w7OA6cHu6CX6U/
yPVY+q2H3/nl7Wvr5vhSVx99hAe323l/4bVN/vL3t/u5btPPvNgX5+F+yf9s
Dyz3eXQS7Of41rX8d9EfHz2sRS+F7ufgW1/anu+B5T6Pjvmiu+X5hGP9B/w3
vPBF72Hui+ec3cV/cN1dX3aJn2Ev2RH1mCW/nTnU4TDqTXAiOojyWP4friqO
U4/jX+UveDn6n8ST07e5xKXiuMkPxH2+T54jzhafqPer/4vTv749Pt0heJq4
3OfvWuJi/Fx4NDwLPnXngstN3RIf4Evbz4uLBifXF9d2+IjhAVMXxR/T7w6n
wodyf/Hr9e3zN/mVwangA3AyeS3+5eKXh+8E74JvrfxbeXL+Tn1CHXFwWnMX
8BBWHZZFD2DwYHiPdS3+EF/Ev5r+mE8v+7Of8BR+tXx8+lrgq+I48QPeEju0
6BXjD03c5vs9j66f68D/w3HcP7x598t8pPAhz+/oFodTiCsn/lJPXHVh1fHd
h89u91Mvgc9OXIXHAIeydX3cf+clLoKv4EXjR8UjVl+f+5adGj52ce/ou8Fl
xL3WrzgU3oJfB4cRj3le4Ffsq7rsA9v/z/pWf1154P/b9nP8wPS1wb/gT/Bg
foBfgLfyw7+6nC/+CH+6xBfz//u252n9H1/xa9dNXKz+z4+4X+7v3dvtPC/6
6vAM8O7xHcx9CGeUX6lbzJwwPOzyKXURvGz4F/4V3u3UO/7u9vg+j0c29Zlw
tenHw7fxf3y2ZTt8Mfp1+CVwHDxZc+S/uN3KI9d6Dn8hT3ZdJi9xP+iWxxtR
Hxq/ID+Uv6mXWf/qhfyDdc3eL327Xo8+iXXPnno+6b7Yb9HjFF9Of7j1R/9K
XI6/IQ5f+tonX1l0B6Z+IL79B9vvnecL/vzw9vX0vakTrXi054e/WXie0y9U
HXzy7U9ut+y2dQr3Ew/g81mv06+aHxIvwDmeXnA7cRh8TzylH4BuJHwIPkYn
hI70Zead9H947yeW/T8SjnZZn6MXAveFk11mf3redFQ63mOdz2X0QxY9kWsW
fBk+/JD9FnwZ3gXn9nk6I/BBcwPN0Xb97lrjWvGmeR7FhXBZ92V4r0u9dXQf
xXH4CHhl+FzVMScut794/K5lXeB98bP8afZh5sfT8cOT6//DV/d5ccTfWM4T
T01c8Te23zd1DXGb5+MXtr9LPVwdafiu9JwWnUH2kT2cOjl+n34Lup54uezr
A9vnxX76Lb64xPfwec+TOer68+D7X1xwyQ8v+cfo5ZjH/rXt/vIg+Y3voYtj
vdqueQx8fuo68GM4vPyFXoTvc57w0S9vz/vqBWcdO7Pke4MX97n/gE++1iv4
389v7+/wGj+3Xa+Tj3a/8Q3meOzlPdvt9A2qp7ZuJ4+S3/6neBe/tF2X4ht2
He/i0II3jo5XOunjh8W9/G3+d/ox8Rla/6tOwfBD+l3TZ9p1ll/qN5WPTt1Q
Hu7+LHHMy0u+jhfiuVO/mr5Z60l/m7xYPKYPC97vezxvniN9Ya2/0YtVV1vq
Eeol8zx9fbtVB4EPTN+culx1lIu+ut1PHHnVUkeY6/Qr29+h31edS5+E/H14
L+oK+MvWDb+P/6zuLl4Qb9MZlEexs/Bq+LR4HH9v0Y3DA5v+bPmNvHzpo4TH
znwR/HnxlDgM3gof1Vfv/YX3gW/ic4ML44XgseCLfm27nf2X+HD0Pek+tf/o
IMFN5VsL/2xwZzwTn4PvihMXvG/0FfGLF73qta914l24Xfdv+tzUf4q7J183
T2XBidQ7Bp9b+FOTz8gP2Fe6JuJLc07laf/L9nPiGsefPnz5nTrKX9/+numL
0c/ILhY/wBf0J8q7hi/3C9vfO3nYL29//3x/dnbmUuOnyItbx+YHHX+u60wH
x/1ufZinRmcBL3LwBc+bOKf4h8758Dd+Zfv75nq67lds1wf+GP/I3oh34GCj
yw6HowNqLnhzlPY0J4muKp6yOY/76QjBxfJj8Ao4huMPf44eJL7T0h/Ljw9P
lT8Mx5o+7PycOIKelf5UedPoJveanxD/DO616LGxq9aN+HnmRbQdnhY7zI6o
d6mvLTowUxfpvOjbqyvLq2dehN9Rvjn5gud/wa3EsXg7/P7gv/mHyevSbaQX
Nn2TeIDWK5x16WuauXjZqdGfNedl0SHQnzD68+zyonM1OBjenjy878fvN08C
TirOFk+M/pTzUL9pXU6/d/596lDNWdnTlh+a+i1ceamPjt7XMheRX2JP8WPY
76mjwUXCNae/hS6VvEf/n/qP/oLsIV1SecmqO6jPdPiD7HN2kF2S1+Ix4J/C
++gA0M+/c8GvZk6mfsrWO13UK8077fNT/y4OEffRFRjdf/2fPTfWB39Eb5S+
nnhcfAzPwJea+9t6oa9Kjx8OCG/Hi5l5Sdld+fvkje03df7iKnbP9ZF3ek7h
PJ4/+K88ZnDT1tdVzUkRn4jTxctTx6f/Vp+KeAgONtdhqcOP/er1A/mDs/lF
cRwciD83J9kc0dHR9rvyI+wZXF0/Dnsif4Sf+j3m9p3t+OwpHTJxgb4efAV2
0v7wBnN5zGfmr+S55k2p98sX8KqPNH/QervyxO72mXSG7/n27v8ffbH7VH6x
73f7fT1v+gHgTQfShbrtm7tb8+ee7/jiqAfy43Skpq7E7uWXTpiH1rwIcwYv
/IM+1/03Z5fOB73AuZ7ZLf235mKJM/DBPtI6F6fgSRzrOk9/lPmDC2/x6p5n
due21t3RZf2JK+Tr5sfe2X0xN0veOngbnf7O51BxEV0COniO7zmZebLyH37s
4e36YAfMQzLPS959cddX3d7cMP7YesID5a/lDeZYmpf0WH797eYmy2fpI9LX
NQ9cPvOWOdLN05M/7219sB/68vQjmZ93Setq6hFHt7/Xc80/XNP3XcNfdZ73
tr7vTf/anKs9J1tfu/HQzsf+5b///867Tnb9skuXfqfvab2Z23dBW/7zxm9u
188l/Q7zBSf+ZA/7PeK/FTegx/1Wz7t1dtp8t29s19Mr6YnjaaonwKGv7Pm7
ONzc/Lm9rVP35432e6R5MeK0G7se1hV83Lw/cQhcwlzm4x3fXBJ+7v7sFHxe
X+Te3+3+FB+4r/yneps4iH2zTsUhe1vH8IMz3Qdxqnmr4jfzv+FEj/q9Pef8
6OjEZ6/gOnRw+QXzZdX36aTDT/HbxOXihHtbv/vp+H1ju87lw/zyia6Lv9f+
efer7z/TfVQX2WNebn5v4lzXtXUjLnmo+6V/1/Nrrvm1zfeEk5qfe0V27/7O
7/bmgb7S9T9QPLw3PxZusvPuP9x9Dj96anc/dZzr2++l3+u+lN+YX/+2uZ3N
0RSvnO3+0d0d/aQFx361+/84/5n9oEMr/4Xbqyed6fvFCeLj2/IT8oU7dq/T
zk1/0O/Pfz7aesdrmnXe9eSv3ui81Jv2d3/hOic6f/585lVYr/pL9Depu/7V
7XN0d99vLqm88NCJ3e3Brj8d6Su77vzC8WV+MXxE3WH0kfD1el6mDtZx4I4r
P08+9lbX2zzbg62nq1p/1uND2X3nIQ7gn8TBJ62T1rfn6/7W031dX33XL7Ev
8WXM1VLH3On+HskvnMyeiMPuy3/II+gqz3xD8WFxATvuvEcHHs6Crwc36XfA
ta7MH5nPpZ+cbr05Y3M9xfE99/oYzEcwN8h8xMln8Tw6n1eWeWB7ey4ubD0V
1+384u5zv+eC/P6FxR/HzFeFHxcPXqZPKDskf+Mfj7YeDvLj3Qe43eX5uQuy
j+wA+3C063rpd3tOW/fqw5d3Pc1dtr7MXTradfG86S94pvvHD+uTFw/hlZuP
bM4HHdk3W3fmmh99evsc8//wf/4D/nBjfo/uN3yeHrz6NH/tvOCAH+m5G3z6
97uf2TF+kj2knzc4WXye0ffpdz3T+mJ3z8IRu+7P9Bzfkh2ER8BNbm7/J/N/
eIbPd59vz66Jw/c8tV23049zdHu+/PHDfV4/jrzTPPVzW9f7yyPEhQ+3nh8W
f3R9n2x9HyoOhUM9YW51W3b6+u67/EI8IP7CX8DbOijODW8bnUf9SgtPVZ2I
X3mh34EXb93u63fA5d5TnnezuG3RRafzLu441vGtS79v8F98UbwjdgXvDp7e
/X6g74Vn4V/AHdlRc55v5Jd7fvAcPt19tm7o2l+RPxHXHOx9/Uunur/yWjom
x7q/4jD5nX6F0VepPjvzIbvOnmfzpulC4UXQncGHYL/w3PjVed5b73Sl1e3v
7nm6o9+BZ0j/X/zM7j/ecwBfdH7qC+fk18yNV0cRz+Nb8aPyC3obH1hwH/VC
dVhxx5G+99wXtsfTD2puhjqWOOxgdo89pVf/bHbiA+Vbh7KXt3Uf5X0nwknU
Qd5sHZqnrR8e/nl+13Vf9lydzro1d/AxfYX8iT5ddTl9X/oFwrt+2Lrlj8QJ
M0dRnGW9VeeFf+F1jI5I8ZD69uCV1VE+3fUxd+nGfv+52YtXOp83+t3wMHpm
+mevMQfqS9v1DD/UF3x5/vlUdkcfo3Us7sNP2Nd92tf9xBub+Y5t5QfywcFJ
1ZmKE+Sz5/W7T3Vced8DrQ86PvpN8YNG1yn7Jk6Gy7NT+LHw8qkb/c3tfTEH
a3hb4ryeb3Vs9x3uLr6DoxxtfzgEXpt16/Mzh4iuUMd/fff+7ny1fOay/PNt
reuDxQX8I3xBnPxDcTnd0Y5PJ0Ad4JWeC/aN/xKn4e9Yx3DvY12XA9lfccgd
5TXigXmu4qOt/EVzt9RRh79O37n6wvCofm37f/jnxOd/d7sehreZf2NX8I/g
Gp4rPEN5MT7w1Pfx1Xs9c1t6rvSnz1zu1ic9XvOHx8/Qp8J3iA8q/qObiKcL
jxodm+4rftCtHd9cEPMHTpYv8v/64c0f/mFxMHzX/Bl92PLVy4o74RSvqbd3
/p8oX3gjO2HOG91IOLLzOG+Zw2d+39vhHvStJ/75p9v1Jk6demfX7bHW/93Z
Nzwkee55+KjqWfl/+CV9t4eKFy4vXoRzqvOqE4kX8f7Y++FH6V/G5xNfW1fx
usXhJ/I3cC3Hp3txbvHqC+Gn+eGda8NXn+93D04oH6FrqT5+9/b+m4vNTqoT
wrOdr3WrP/OHrW9zF98yf7Hnip071nnjj9/ROrm19cX+0Fm7M/vvez0/F+cv
1FHVyS8T32Uf5AH4SNbZLa17829Gdzh7LV6Cl8D/p87bdcS/w3PGr8EDcb5w
RJ8/KG6v3ihPeKj1Lh+6svjxmn6vuF38Ic68GD7felanEw+yr+e0Lh7uuk8c
px+yuM06flvdN7+CL24uG57HjnpS1/ni7IR55+ZE8vvydb/X79cvNTr/xd9T
L+z5eKZ1qi4EP1z18/EX8dmtE/Oyjue/1A/ZhWva/9rWyTlt2XE4yLHyYXjs
dV3Xy1vP7MDMs8A3MoerPFfcf16/b/rIfnm7P3+Dd3xtdslcULiIPtaZe9p9
U7eTR8Iv1RfgauYxw/lu6Htu7X7CwU72fOHjvdF18lzjOZl7w5+xO3CJTzy9
vb/yTX0kb7V+XvQc4LGwE/p3eh7wicWV17Xu9ZXqv8P7xY+Ux6iHisfFo9bb
4AJLnPBK58kOiVfxiUcX0fyI7AXcg/+mR6LfiX0xF9Z6tp/4bfrs6u/kf+jh
4hvzqx/pucabNY9EHg2XNM8WfkWHmA7vvflxOL+5uNavOfD4cOc5/+63PAVv
Y/JKvIbiEXHT263HM23Zlfke/UzhYfjtcAA8cM+fui67Nn2f1bvYvXvza5cc
3x5v5hHQAcgewanETR/oesOl6WrjP81csuLm0fXST55dn/pldlB8MPoH+hnT
EZYniueGL1NedhK+Fm4jf3y1552fGN2Bnhd8I+vBddPvZi7xdfmRqT/AC+AU
9cOJm6d/ITsnT5w6L92NcJy1r2T02c0Zwqeu3iJuHP42PCb/Rf+TnWIX1TM8
V/y344jv5O/wtdP4b91PfUYzfxPfP7ugTkgH96h6VM8BfFCc737x3/R1x+/0
x27iW0xc+Pe26290ZL2vL0Le0X3AN4azqe/KU/Akh1fdn3oYHF0+DEeTD698
YnnSzB1uHcrf8RKGh0i3d9Gblxfym54f+g7iwOkL/OL2OPL84YvhXf6P2/MZ
fj6dCnWlnvcrup8H4eXFO/LAG8NfXoCDlHfIT/HTxJPqMvBu948fp+vGntGH
ha+ZYzf60fj9n9+el/xt+MX0PZY5zaNDYM4h/Kf4xvV2X/GB9DE5/vQLuD/i
1Tu3z4HPi3vhRJ6r0b8pXsXn5B/F83AyOK37jhcEX2dfzJW3rkYvRf+c/tz8
FPx1+qTxO/V52NZPQN+cvrQ+FXHz6HKyp4vui/4O63HqAPoZ+K38BT+Ixzlz
Y/r9w2fOX+PL4h/gF4pD8e7ZF/UR+dLoyns+W48Xyhe7b/A59SM65fC5/T3v
cGLX+QOdl7hknlfPXXHm1epp+hiLV+Cf/AG+tK3+NLpv8rRDPd/4S+rJ8Dj9
G58uHsKbONL/6ZM7Pt4CXpffYf6X+Mx5WH/Dw+z68teuh+s6euXq03jcS5xC
n236Rhw/v0Bfz/rGV5DXz7zxfhf+74vFR/gxZ+Vn+IDVodVL5Knuj/U7dnyZ
W25eMz4UXR51Kv0J7IH8g2795AmeTzyPnmt4CR6JfGP0fDyP4ZEzH0v/Qs/n
6HHZVlcQN8Ajhn9P/9dzz0/ps69/Bp/CPFM8yImX6QOEU+snlF8N/vFL23U0
8a/r1HmP/cVv99x1HUfnSb26dX3EXGh8VXzsRVdw9I/xHn9ju66c3/Q50bml
A8AfiJvpctB/LX4Xr+iPOIB37PzK7/QXTnyQn8EDmfViHemLq99D3kAneXSe
6X90n9QJzNOWr/OzcFh8AnGfOFLcgWcqvsH7h/uPHi89BX5x4YmKN/VVjE6u
fhbv65/Qv2cOWn1k9mN/xGXyaPin33sSz9D6NR+NHr7+9+rO04+T3oZ4bOaE
LPM9Bp+lD6Qvgw6HObfVWcSrM19cHG09Fx/CZdQd5In6PjwHp4t7xL/qJdMv
yo84Pv/pdetHH6w6kfq6+pV+N3M45Hf40Piv4gJ59viz7MIHyofx0dgR62ni
Pna36wUnGt65uQbmrHbfxR/s++jyioP0CcIPs9P6CvWR8JfsKTyXbo76lHxu
5qTRH1jtIT2Svpddx3Nj78XR6hcXF5fwd9M3zE7U/+P3/bDrC3dxneTbcLzp
m/6N7e+kgyb+4vfFPTPfUx1D/7S+/PLcmcfZa8+bOgHcjZ/2f/W5iQva4u09
Ek6A9/HD8hy4lefW98OxRi/YPIMHt7+DfRleZPyKixZe5Mx/c/9aX/o+Rx8s
u+B59Hs/og5s3bb+6Oea5+o+jc5H60i88NY/2T6vw0fsOjov93f6wsT3+hOz
p/K/jyx9hDf2vOMr6ueAf8vnRx+qfAEOZ//RPcie6xtk/2buAv3UZc7T+Af2
lY5jdnDqoHSAqiezK/g7eNRHzNfRF04vC34hLzVnnr//O9vnhN0Vb++Fl3T/
5ZXq5foe8RZOw230AWf/8GPgYPTwB+9vu863mblTcBn4Vvmc+jadfvPm4BHs
/MwtLY/TNytv1t9HR0N9DO4ijhbv4IGoc+JpHakuwl/oz1LPomcijhM/8m+D
j/XcyDv8/tEF0A/3nu1z7PPsn3hA/cw8QfEWO0+/CB8Gb9FzrL7AHrLPn+75
0jfJrs4cl/yHOqS6Dz4GOzf6AtktdYNP0GGSz6qb9746BXstfteXeV548SvZ
F3WKU53HK92XH8Ln+x79n+qRj1dPuaX39bO8Xd1H3f0DHV/d5lT/f7j6/rPh
y+rH7LB6w9t935m26pan8JbwA4tPbu39a7/TedZXdUn1ODzRm/DoOo9XqyNc
+c3tfpe3n/rRDfGT7u9zZ3q9b/FbT/R5PJjz+53Xdh7qg1f6Pe332FI/V6d+
tf33dZ5vuL7dd3ETXO9U33emzz3b/vp3py81XSfzwvGh8Y3wNqc/lu6Nukrr
Xh3J+hdXqseaN6G/A09DnZ6f4+/p4snT4Zsz11RfKnueXTwmHws/ei2+yPX6
YOHnHW/iSXzHcBo8evzHR/Ul4hN0/OvjvzwQj3p/2zt7/8KO95L+x46j3nJz
/I0PxVO+otdXVFc++4e726fjAd/Y8c86r/p2jrf/kye2x3mz/ffUx7q/73mg
1xd+e3vc/d/e/p7Xfnf7/4Md9zb9sb3/wu9tr9drbZ+Mv4jv/GT7fb/zuK3z
wCM62nU50vcc6/dMP2GvX+r3PhoPbk/fs9P5ntv7L3Wcc/FkOi86IfpMXuvz
b3bcA21faP9j+l467sle73S+x9u+9ML2e85aR60/PGn45sHO40bro/XJz+5R
N6dPgG8tv9MHIa/H+6ZXo/5Q/guXVmc5po4SnooXJ87Sdy4uGB338IiZU2L+
SPZbXRqfTpyNf4xX8Tp/0Gv2Ey/1cO9fm328vO11+kviC19e/9vz2Uf9o7d3
nDt2+6h2vrrLj9r5YDypZ+uvuqBtfdo7T+zyLneer1/uZ/5od3tdfMy72++G
/v9E/a0f/Fe729tf2t3+xd0+u51b235PH2zbn217X/t//l/vbh/pOD/R5647
tf2ez3YeJ/ST1v92zr/o/+2/b/e897yRHzyze512frrff6rrd0fvH+766KO7
o8/pG762+3Nf1/Wm7s/b/F3XHQ/kuu6XfIJ+gvX2kPplfkf/Jhxn5mHT1aF7
XPzNbziO+PhQzwt9n3Wu3czXKJ/Zy28UD6ojzZz4nrMXshdX9FrcLp6nN0CH
fvQR9KsW7+tPxKMZHRnzCZyPOhy8sPM7rc7T74Nfi8fVP+F75p4O/wj/p+cZ
fgdvPdnvu9Hn6IB9Zfv9l2bXxr7nH+kz4FnBs8yZg4vyp/whu8q/7em4J/Oj
+kVOZ4eP54fY69/KT9yo74efyv5/Pz/64/Wd7Wn7kj60f9F+p3a37/83Hfff
7m7P+/7u9m+3/Z1/1/073Xp8pev+6u72d3v/n7T9ZO9f1XGP/evO/1/ubu/M
v+l7ONLvemfnd0/nd3Wvny4+uL7tF/lJ8QF+lr6p72yvy4G+R//N/q7rzb0W
txzPr+70+YN9D/7pa33PUXxj/Di6VdZvekoz1y18ZOb80F2mt0WHD97f507q
S8A//ub2edP3Pbpa9OU6v6mLhpvgB888qOLYmR+WXYLnmUMw/OP87MyhphuX
3oc+cDiVfhR8eHrj6swz16O6yujJLry9sVNwKX0Y8NXspr4eecV15QXnZ//f
yJ/9WPb/7vzDE/nVM/mB13t9qu0b+c2bOh59g+fzA+e3fb3/P56febDvub/t
V/Ojfy3/ti9/eMviN0/1+qf7/8+2/en85tv5zVvb//GO+2rbH3y37+04h/+4
/dremv98qvN6vO19xQOf7zg3FQ/8cX218iy8U/wu+swfyP/pS5VfP4RPln89
3PV6Av5Z/eahJd8XZ+FJ0W2S58PT8efoUFy12NOzdPN6TsWZ+koO9PpQ+x3J
XlwoHu59/SD0WNS7b8xf3tz2KFxM3QnfkO6V+he+yZe37+ML4ckMPihO1r+A
F/Bb2/f1scn/ph4Nj1OXqs8DD5wuDr4QHAavTx+a+zh6AeXPoyNPf5Eeafgi
vA6/4Br8abgAXqK6FXwoXt/oJxa/jz4onK/j4+Hf6Lq5D+xm76vHDr+hOIAO
4f62e/WRW1fyyPzW3vzZpfLX/NSRP2qbn700v3jge7vb9+Rf/0Kv35uf/Xtt
r+n9j/T6E/nnL+Rn/4u2xzvuF1/e3f78S7vbN/O37+37/yR/SlfppDw3f3iu
/FK+x1/2e1/q/QP/bLv/sfwmnEC9TJ/uhT0/ezve3r73Un5YXun5W/gjdBz0
l8H/Zj5yOo3mdr642BN6Cviv098enkSPf/iExd2Df4ZXel6tv+FPhPOoJ6rf
/5DuTM/LDT0/5+nThY/KB9sPP/qHC87Kn9KppwePH4vHir+uXsMvyw/4VfUF
uPnMGTJ3sdf07p/pusJzb9cXv4tDyrd2nsp//Gl+6CfyU7fnd+5ue39+7av5
s2+134n8zpf7/NttP9r2F9uez4/m5+72+Y77vpd3t/e9+u+3x/+b051X73+5
/c6Rn7a9pPdvyt9+sP3fbvuD/Og7Ou+vntqex4OL376v/PTh8Fr57Am4aHZU
XxGcHO905tfRUxD34C/EB6LTxS/goTjOzGm1Dujo649XL5AP9Tyq8+DRikv3
9Nxekd+DO+Lvvtnnb84uyHPu1NfV67NLvycdBvxFvJCZv1K8rO6JNyEu0e9E
1+MG/SrhJrd0H04t/R7P6CvVZ+R+qCeoF+iz9hyqHxzfPud3w7XDEeA9T7QV
N+qbUkemi+X1i60HfT0XFRfRY/K7xUnD44lXqT9Tf9jMN6Gj2HqhlwJP1n/H
vu+B18Jv8wvwVbil/PRNeG9b9v5JODP/0nF/Pr90NL/1QHnj0X+1u70nv3ZF
78svnysflX/+YX7z/f/X7vZ/+j93t7flR388P/rf9vpv5oc/0P7Xt/2Q99v/
aN/3xT/e3X6l8/h+5/W5zvuu8tfP5W/P7ffDTd9sy+/Ryziav9vb83Vpzwd9
p6vks+HJL3U9T7cf/PV0cQuc4iT8vvupT2md/8J/wXXUCekJ4J3Pc9frx+Cg
6onmR8RTGD2J/vS9TDyH90CXOp1qugF0/PVD6MecuYXZsZl33POq/ui88RLk
u/yv55buxBvyFH5YP1LP4/BH+p3yHfaDvRCP6NfCQ32dfcgOXNKWztqp3Trg
zu3505/JL30vf/JHvf6x/Oi7ey1f/KP81uH81Tte2d3+oO2JXX+4s6/ts/9m
d/vEy5vXx39u118e/8/+7e722fznp9r/cP7vF/veT3nd9/9M23PaPtv/77df
5/3H5eHqf/oLn2Ufs6PXdH3v6PXh7pM8Aj6BH4YfRReaLhaerzoBnTz6sPoQ
6HTSE6T/RJePfxMXP9nzeH3P55vZw0/2/Kt/XZWdu6vtj+B47X9P73+u/GGn
fIJOzsv0ctrCB+GLp/E26SGqo5Tn0AfFv8V7MF8FTv2Yftj8IF2tfergXf/7
6A2Fk9xQHfsc9ezinTt6fW2vTxU3viPc4fKTm/f3PN526h9t93k/fOZV/69e
/bDv7bweUTfxub6fP9ZnLe7F75Af4JPgH/OXeInqqtbNkezspep88ipxjfUC
l2y9HOg+H+++Hml7Ve+/c9l+qPXxufzN0fzQufmnT+afbuz9i8oDX2j7XO/z
qzttr/9X288dOLXd7+Md92z7/Si/93LncWn78ZM/VV6613Hb7/39vnP1F4sj
ev3+nouj8OL+fw/cvOeSvtvMaSuvwROC09PPo8t2cuH78zfDQ8Rv0TegH5B+
Qn6S7qK6z/RV9VzhZY4u+KLbhOdIJx/fE6/c52fOZfG6fjp4GD+tP3DmhcoD
4gvhYdLHoDt1L56N/t78ur4FeNA18Sbo8dFdpB+G7/lYz9WLeBb9H9/I9+jz
1Yf8eHb/vl08dudn1THxXLIzZ9re2nP/Rtvbw3k/Wx6qvnl/dubnev2x/Ocf
5Y8ez/99tO27yvOezx9+Nn/4l/ODl+dPP7i7Pf5U//9/+v+J/v92/vKp/O1N
bb/d93w2/3iq7c/1/o+1/Xbv85fXVreEx9J91WeN56g+KC88Ti9Z3N72HnGo
+Lz3L82OHdFH1vNCl0xdZQ/eAd28nut39vze4/226iv82bHi5AeyG99p+5L6
VP/n796T3bsZvpU9+vHszYXZmS/0/59k93p9JPt5oTqR+g/9TvzyeKv6n/X3
3pTfu73r/wheVX7lnMX/Fc/tua79Llm21R12nlrw9wd7fWXb68I9/rx4ax8c
ovXxeu//oO272t4dLvEXe/1422fbquP/TPud6bn4cuvtG20f6ft/0Pq7oOeR
3u0nihfUt+Drg8fLI/FB1Dtbd+p64qcL8V66T/vzAzf2/0fxgPiRtvLI97dO
jvE3rav3t14+3np5ue2jbd+bv3p/2/29f7rPqWd+sXXGj/4UfylPbXuydfdc
2w+v67v1eLLn6Wz5m/4Tzy+9v+kXzc/hzaov0Bc8ol7Zuj4LH1InVJegE6tP
x1yU4kM6nvjBeAv8pPxv+DA9L2v+Nfze8Ad9MvzqzEmF55vbG49BPxC+Gf9/
4ZL3XtX/32ydXS9OyM6ZE+H/B9k5eD89enYTTzu+8oe/vP3d6qQzbzu+NX4q
/jr+p74ROLO+0dFL7PunT7nrJD5Xt5V38tP6oO6nQ509wof50+zIl9u+Xn75
5ezNN3ruf7BrT47fwd+V//2V/Nr9+bUH82v8G7/2dnjrf93+3+v9M73/asf9
x/3/p/v/qf7///X//7Lv/Xyv72770d7/5/+u/dv+9O77O692PpfkP2/KTv5c
fl599YLd37vn7a4TnQV6jSeXOt4BcT4eW/7sdHboa4s/u6fne09b/IZD2aWj
vT6YXfhKr/9S9uDsH2xfv7PPXbrkgff0/if/aLv/V9p+t/cv6vjXf3f7/l38
b3byrs73ybYX9f5LfR9+xcy70J9mvlH2ga7LxcV/+Fuvy/dad/vaPtL6exgv
rPv3IPw9P/ezcPe2t/T/n+m+39J+z3ef+bdvtP8H+/8brYv39Tnx35n+/+72
f6LXd/T/+9teIj503F6L657q9eV9v3jzqfzog9UFLik/xR/XX4zHcUjdObt2
Z/HZA627k93nc1tH388vfTz/xb89l9863uvPhWc+2vad7c8vXt/rr/R6T59/
ueNf0fvf6fM/Gf56XtvvhMs+/W+2r1+qXvly2522x/v/Pe1/oe/ve9/b94oT
39+6VH+Fp5rDA+dUt8PLpsdMH+ZVeFP5xKnyiOKbnRuykx8rD7kyHOGG8Is7
+v+VrWP5yk30Q6snTN9Uuqz4rHg9eAXH+Vl8l/h7+EX0iOkC041+oLwYjo8v
Pvph4ab438NbNqcHz7o4DI/svfAoOFbr7fvZjeeyI3t7f6fXf9L2vXCv1i2e
8WvZkevl/8V76s/0OvjhmVdJX0K/Hnw5PJt+CN6V/hX8XDwDc+d36Fx0/ekJ
0r1QTxr9xtaP+eLqNXDfC4qHH2n9HG5dfLnn/3z2K/twQfbnfflVduaG7AYe
z2f73Jm28NVX2/9j+dGvdpzP4vt0nIeL45/qPO5o+9O9/9G272v7RHbqnOqx
J7Lbn2r7Y/2ub5cPvB0Op642da/yJv3a9ND0fel/OIof0Hr7Ss/3e7IzV2Un
DrW9+pXt63fiL1bX+c97fVf25JPZj/fn1w7yb21Ptn1P9gVO9p7s6lWt9w+3
/VHn95P9/8nW+5s9Bwfb78/aDw/ja+1/tPc/2Xan7QPig/Ic+viXfnv7nMjb
d/Bu63PRj3Rtcd/t3cdr5Xeth1fbPtU6uqX461PFV+9u+98Vd72v7f9e3HZr
6+2+Pv/Ewu/ml9+9xImXt+VnT7We4TAf7f1rW7/fantL20v6/1O+76XtOn+j
dX243/2Otn+t9fru7PP5+ptan0+Xz6gX3CzP6D58p/sKd9jfetrT+rxRPbL1
+N+3/l77t9v1+bnW7U/m39Qxfzm/+beX/T/T+0c67k/2+bN97uOvbj//Qtu/
0PbH258/l7++0Pl/f8lT39k6PN76fW9b9Qw6taPXhC8Q7qkfQn/YOflJ8R77
83br8U/1E7Re/rj1cY44q/t6Q3YJf/J8/I3Wg3jw9v7/YLxFuCEezl3dZ7z4
0TevLx4v9+XiBXNBZi4B3a3y0b3qRvpf8J9aP/qH9Cm90HN7VX73Iv1KXefP
ZSdu6z6dKy5r+1Ottz/p/+KknbaXWo8d56fUoduyMy9kZ063vu/svuIvHmWX
6Wypd4irxBfZcX3yeLzjn8Uf9Cvk1frT9KeW98Pb+ekPly/ju5hzpi9ev595
Uuo/jxTPNfdwZ192gB+Fs340u8Ie3tL6ebb9n28rbn8qf/j5Xv8pv64e2//f
13q/JP94a3HjmaWueSt8MHukn/MW/OPO/6bs1q29j8eiroW3/Ag/3HFuh4vj
a+WXxaX0L+EU+EL4Q/RWD5qz1bp5uvX1NPvR65tPbf//xezKuYu/VF/60YLz
fkb/Ah5J8eFr9OD/2fK8mUvTc4ePBCcy3wY+9GhxxnMd/8+y63+Cv2leH14T
/hOehb7BrsexXsOd6F3i3ZvXQveaPvHdv9d6wZtr3ajnv7v1+BOtz0dar3cv
uC+e2p/zj9nPH7T/tQsOwt8+lf394Knt94k72d0L2l89Qt3jU21vUqdoP/i0
OPfH/I5+1zt6Tj6I59e6fqN1rI9ZvzC9Lzo77BL8T/+jevrXWmcvt76+m597
KXt5Rf7w4/nHq9p+JT+6v9c353/Ptr247YH+//72P9nx3tnrp3t9Ydsj+ek/
W+z0Rb3/wNJP86Pef63z/lDPi/6dq/XDqIeaI2ZeKN6cun55D17M4dZf9hGe
PzwT9/GNtp/nV1s/z3a/r2udPbhsrZPHW5fXyVMcr/Vwbd/3+dZBcyB2TujL
yH6rN6qzfrH6KH0ZfCE4KT20wcPpZ8HP9Z3hJ/b86qe6WdzTdf/QEgeJ+67q
vumH+nD37T3uX9sveJ1fvqvPyzN+ip20brOvH289H8z+4UfeqU7eVv6Oj7KX
TmDrgE6Z+rg69OigHWqbHoU5C/ASfOHRK6dvQzcsnjQ//Yny48N0Aoq77sje
6Yu5oft+bdvH28LJfq518q3Wj3qs1/KOW9te0vp6VpzY8f50wbdPZO9ebz/8
32/j77Z9u/jx/Pwqv6zupb/obnySXpu7di1+V/7+lrbqgvwx3QTzasw7ojtP
34PerutM9+bYMqfugDkucNn8EZ6K+tuh1pO+dzzBmTevLoRXUd3JPBrzvp/k
Z+k/mlNPp1r9hA4dfTzzZ+icOO6ik6Lfzhw8+mVwZryv0f1MVxqfg66RuZH4
/3i67tvl+qPzQ9cWRz2hP7h82nzRHyv+OwMfUR9t+zF9U/qPi8NuMQ8yPPxn
9Gt3nJv6/Km+R/91fc47b/T62T/Yno/PwXX2tf1e21db559qe6b9r2z7cMfX
N31O1+N1de3WL/0qvDDxN/1q6wTPRT8S/tz1rTt9n/LrO9sea0u/YU9559le
f4adzg/+fHZ5b/bzp9ruV2/Nvn4mezvxanb4aHb5+8UH4tE9cJ2O9x32H66Z
fdbPcoS+g3k39AXi19LNxPNRP3yxOPwGffz6Clsff976wGP52e7Tg/IMvAB9
f21PtP+p1sn3/nC7v/Wr/oJ/8Gyv39H6TQdgz4mei7v1MbQ+1Bnl17e3PvSJ
mEenDkznFr/8RrzJ1sPxF7fbe7q+F3W9f6v7918Vh90Z3ndzvO8DvT5ZPPVk
/vl/aP9/WRz3Uvt9us+91Pb/7f297fdn+e+nWydPw31aJ2+2Hk52fjvWReuT
Hgm9Fbwcel/yK30TM7ej52d0OvMH9CLpStHBxTemu3hO9wFP5YQ8MPvzbH7o
iee323SCdn4C/9g6wwthV/T39H96Evgq72q7r23+dOdd8uS232qdwY9vwCNt
PbE3b7eexBN0ME5kn296cfs7Pl28q/+JjofrZe6Q+ejmyui/nPmK+dGj5Y97
ln7Pl8oPrzDvtdfjF/FAy1eu0PfS/qN7T+crfW06fzO3Uv8GvYXOa3QN6Jfg
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
H1n/JxIn7B68I7wB9UL78Vq/xzfVnw63wd/G6856mh/bvilzifR/4mvAC/Hr
zbGLHzyUVzodL+WVn1Hffz55gPyGPX0jfp/OF90sehD6mMR/9FXFcfw5Pt2G
9YDzpa+VHumdiSf0C7ya/SefuTV+Hu9A/nMZHWE/m0uAj6ovPM/jGbzHfO7R
5DX0gIrbvv/ca+cghR9Yvkf0JfA+9cvj9x1NfCMevCTf+4x1OLWuT/PuPIej
8StvJI46GT7Ntv+S581uPrqed3OGtwauj8eFTyYPgdfSBdme/agfVn3A/tc3
pW/O/Bx1ff2+5uzqq9SXi/+t/xtPtnrLsa/6kORp5vHob6afos7Wun90OtUV
zXvvHMnMueB/Nt997v/1s8OP2C+6a9fl3Ogbmvj6/3NA555L7DudNf5A/kaf
xJyH6tq4b/rh4gZ15TzXPfRXsq7lB+dVPqTO5Dxu4EM8tn4/XX/1LXaQbqI8
F87LL97AT6or5XVf1hl/VJ/4fnX1vO7GM83rjXk9mFe4JL21nfk8upxP2E/5
2VzFV+A88n7zTwf/Gm8Sn/UGfgUPDE8SP1D+a94G/dw8nwN4jPSJ5NX6xJzP
2MXySLLvzBu1v/Dx8U2vyOv5sYN7Y++ejZ37VvIK+u+n+ONRN5WX0IvFX8EL
qY5rrgNf4cXYs5OJA89k32/dce5VvNc4z5z32Hv4Hx5d63s5rwdj3+gvPAnP
oq+Rn9W3zs/1HcpzoiP/cu7zYXX0Ma/gkOepbvbH6/P1fXTm6ayJg+j98juX
yRP1RaS+fX3i9PZdJy43n8HcmvOC3x4Onvu24L36X7835ja9KzyOL4W38Xr4
HJ/P683mLI55i3ebW21u+v9aX8M/Ko59R/wmntO+2Ad2mm6RPtmTeTW3+Y3g
byeTB5p7tMf5pS8vTo/9o9etPiMeoL9wKPb4ylwfHWI6M/QYnqFTRv8/8e22
4Brqm+rUJ9QZ4ldmv8Zueqb6vuHI9Cfw3vQ36QsWB+qDSLyjf11diG7za2M/
3Z08/6nsq5+gm591oj+nHwi+Ky6k+0NHyLmFC3kO+p3oUNLdhEvSLWg/Gv7I
g+srPu/Wr+e504XK9Vw38GdzmPnLrlPsB9xrR+wv3fJt4n95mn2VfbYzOIK+
anO+3g9XzjqJJ/Y8u+5LdUbxh/5oOChe+aa8gY4pvDV17I3guXSui6/JUxI3
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
uoS+WXOry1eJPdTnxZ/itfX36kbqcMGh6MPjhbVuBN+7a70v9hzP6Y2sl3lt
+j7UI9QLfqT/NOeHjgx9XedN3Hs3vRT8WXoUg4f9ePqmbks8/cd5/SU6Lomr
6QvTu6Yvc/Nz66t+T/O69g6+N/0W8zL8nh6jPp1LEx+K//V9XZhX/G883Rfy
qq6mnnaY7mHwpGuCCz0FV6Lrke/VR3hNnturec548J0HTv8g55n93aS/n3N/
MK/td/nm+nf67MwZwct/A46U/Eid/eacP/1O9+uTw2unCwTn8rynXqM+qoFz
0Zl+0xw0+vN4Ifl/dfPr9LMN3taro15mP1yadbg5uJN+4EdXnGDjm3n9l+zD
17Nu31cXzTqxR3Djk4mz1bXoLVQfBC+PnkLsv/h5H56eOHr0yZTPql7ALsG5
w19U/9yWujz+tfqA+izdBHxG+DA7ggegHi9OoxenL+qVMedDfoivt9OcZTrE
eaUbiddbPRXzFti9/DubfFA9TZ+nuThXyxfMC8CHSH6hHqd/pX3oA4/BD9ZP
Y34mfpx1orss/sITwGvW50x/Ah+z803DE3A95uXhjeu31IepD0O8izd1U/5f
HqX+WP8G3+eX4v/hcvrU3jr06/z/afuVbop4Dk8D31z9nJ9Shwk/zBxqPHh1
U/tQP4C5bUeDU1d3Nettnpw+IXkKXrv8QJ+GuV6eI3+mn8P8U3w89djZx/SM
+rw5lvg37A6/me8xl/GSr67r13mNuX44QOtH+L6ei3kGv5LXu9bf41nohzPn
pflX4jV6ELVL6o9Zr9YNxUP4rbFr+IDwDvNd8aPVh7Zdm8+j+0CXOvZHn6Lv
N4+YzqO8Hk9SnQ5v7y71iNj/84d/MNfprqybfA5+ch38JK/Vp8/78CLocThf
7Ez5wvQPzVF7eDyH7GdxJN5j6/n48nAYvH+/x58xt12+medaHrr5uvQU1fH4
EXNohg7aDeO878nv4XTymo1hB+QN1VPSv6hf5fPrvuy+y32Zo8cO0GlUT9VH
QycLH5HuT+d2q1M5r/obci71pcgD4YX0lvBFb8o+umL0xdsX7bPQfwtnyPer
s+Hx64s8m/ugP6mvEr7Fzuur0t9Gd02+RQcUzqufBH+Rnt92vAv+d8xx2Bh4
Ez0e+DrdUTj0nvjta/Oqv8rnm6u0L6/yRfpK8lc4FH0H8wjwQ8wP9/cbdJAG
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
qHvzH3AFuoH6R+ATB5zHrCdcH/4jz9w5cJztwx9szvr84+t1Nr+HU/MXA9/A
2xBXwE3waPCZ8GH8HT4me3Ni4DL8aHW4n1rvZ+oiw/vKuxl9++Vn6k/KeYMj
qjtXjy5+QzzROpt9hqerrnDrut/KL6I/oF7hevlb121f8NdwRf1V/Il5lHk+
8CX4D14xe6UOuDVwuH6v+iL/Qc9g7B/+o/MZsh/hWupPO+BXcDp/P/HB0X9t
X+svtJ8257nTx5B1qA4wvoi+utSJ2I/2A2ys69I8HQ/6yHru9Ql6vnDU9o2r
N/nnOvGa4Vn04Nh7/XThVVQvgX8cfs8cTvGOfgdxE7xHvQWfAU+p+zR1Uzp9
5aHFb/F/xcXCN2o9C6/xd9ZX+efTA7coT9c63rOui74tOnBwBn0XdNga79jH
+Vz1/Kljjads35df6BUOiefnc/WvpN7On7VPjJ3kl+Nn+Dvf235R85SnnzJP
zny38JTVb9Qp1aeKS7Oz2fflmeGdJs7F/3L9tVfxn/Ig803k1d1vo98Fjwbf
5CU6RcHjXvUzPaa8H0/cfpVPqwNPHUZ5WO144if8Hv116npwC3mGui7c687B
a4OniLucc/tI/VQ9x7xB/a3wxM65TX5G5+O4vC3+iv4PPwnHvxYPgU5IftY/
Xp5A9qn4TL+4/auO5HM7d/Uv1+s3P4Mfqj4lv6HekOtQR2pfEP6OeIf9HPqV
eLL9vvgJvB14DTzHfrE/2BP2Bv9J/a91afzurOshfaXZx/AYPMLa6/hR8ead
2d/yTDzRM/Fj4mU8CH2fL+a66HU4386jPFXcCS9hv+QP+iTgqfBK9kDcVb8r
DhAv+LysK149vqe+lQP6s8w7kRfIZ1JfMS+wfez0qeWv4sV8vzzb83ee1Qfk
V+aK4Kuqp9Se5fva9xf71bg55xSuhAeijiReEl/BAW4aPAE8Q7g+ewg3rP6o
+RXp97w0+DN7Jx8Xt8Cz9PWZYwTntk/pNehroIugXxcvH9+VHjk80T6Fl3Uu
h/pj4rrOI8p6NJ7Q70GXhO6MuH30e+Nd7oXjB9dtH9KYWyve0z+EB9h6PRxG
XvDJ9bzLz/hJOLf8np6veQfqTHAe8RE82VxJOkPn6/fAX4g9wlv0fNRlPCf2
RxzGj7W/m54A/4Knoe81OCn9W3xf/Bt/J87Fx6Z3q/5B7099Qn4F36CL+5Vv
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
r7TdvMDYPToJL8TO3xw7TY9SfWZX9vEReWTuz/wOcXfzArqd2b/texD/x17V
jiT+gHuWj5R9aQ7itfKhnLtn9YVmXx/Jup00R0m+m7gVPkAXQbxNp8f5Kh/U
+dd/nXhIPZAuHl0mvCJ+Eb6m7oh/hffIP6jLmj8iX4FDw+va3ykPDz6D7/xo
4uby6+lu4NVfvX4Of67vBt+ZXVT3Pus5xn9cDefEg9O/bt/jJSYelH+rY7B7
J3Ju6ey/nOv4fvIXfc5nU288mD4s9pqeIL1NeSP/SBfHdelPgDviJcCryu86
sX5O4/3Eq/re3NeePJ+D5h5kfTtvWx/NV9frZx/pwzrv7F7tTK4b3kC/Fe8M
vi+e2PrGes6c62PwUfs6/pSdxMPGU8QTodOB54Gfr963lc/ZIZ7Ct5W/ZF/D
w8U35ixsjjgIvtG8hj4AfkHWla4f3QZ+lB3Fi4AHic+ey3Xic6j/wjXphVTP
OvsVD8O64JPYT80X83ninhtij+Cg5svcKl+NfzUX1f3p3+Gf5Onshn678hhi
DzrPSN6KP2LdE6fjrbePJ/tLXWnbqMPO/gN16M4T+/B63tW98anUS/f/Xc5n
XuFI6pPX/I/1uTwSv7UrdoCuh32mjqKv+fy8lmcjPuHXUx+5YswNLr8Fz2DM
OVJvkae5b3GffrfzzfPI58sf9ZeZj7Ivdk98gfcEt3G+dstXE8fgh+GRnZf8
zLxkuF7rdtm/+qDmPFF1a5+rzs8e6B+WPzs/8E32Q78xXiLehP7sDbyz/Ezn
4oW/Pff6WtYdf6B2LPeBr38BfCiv5i7xB3iXrRt9/v+/H+EhdFTUWemT7lHP
DN+Mf7ws/kl8pS5b/kHsm/oGfun3kw9fljno+trkB2fkNeHx3591/UriWXmO
/Jq94z/xeTonJOvwUu6PvpG6nvhHPwl+iPoMHJVuuH7G6i0nDlXXxhc/Zo4W
Hao8B/VMeuUvjb7Ki0f+CX8RH9LJl7+dl+cofpH3bXfOcx5vynnCw/I9/h8v
jX+l66Q+r88Ovxyvyblhl9Uh6TXze9WtCm5RXbZ8DtwT3qdPb18+X/7T+r46
WuJg8R88tro2+hny+9v+at33nY+T/Qpfv1nfnud0+focxD/yGfsQn9NzMIfE
ucJrrK6fOnPsrbl76il4NPLV9vfE79hfdLPpo5R3mHxb/xt7bj/B49QTy2ui
X5vvU9+/Jd/DbnU98358Mv5JPiDf0MfnOe2LfcN7NG/vUvFlnhd9QvkInQL+
7iU4Pv3znPPih/okst987s15znfnVf+rvgz6iniJ52d/3hY7SB+luk+Jx/Af
4X9355zipeEpqA9djacIt4Kbxo/BOfCi9OO8/s11/fVhf/nbp5breeFcH+TG
O76T681zgQ+pj5dvpe/DvjC3I7wh/Unia3x5fK7iLokn9DeZx0SP4gD8134V
X0QHic4ffpj+I/uv/efi2fgtfWPqPPYHP0fXq/Ndcw79vnrueR76qS/LesoP
G3fnPOr3vSP+kb57cT38ODyJ2Ad1bXGG+hP7Ri8Lz4Ue1cPJa+SNeIrdh/Fz
8qTrE1/QQTqQeMwcN/VA55A9wHOF9/DneGael74svI/6LTgZ3Esfde5bncM5
ap9Hzrv6seeMV6W/m94gXAtOiReB92rOXOtOwaXku3AP9Yvq9cd+ics6hz3x
aftp6b2nXszv8/edk5A4s/2/ORd7c57xEcxzUccof4w+Xe67urKxK3AeeBg+
dedN01vRZ6KuTpcQn0wcmjo1PgS9aHO18Ijw4fRvwaPaJ5Prq15Z7Ia4XNzj
n3r+nuQv5WPJyxLv8Sfqq9XDpLPpenIu1I3UI+GF9IbwA+HaJ/O5/AHddjwh
58U6Nk7K8zK/XB0FH7j6WPxp7B0e1sG/XvfJq7EX/Bb7qm7FHuHptf+Ubsfh
db/rR8UvxnuQd+ObtD6V84AP1fkT5t5Eb1D8zv+Km9lX+Jg4EA+2eHfsnnlD
dCH4heqd5P3iQnhh+59jD+UD6vH48uIJnwcHUYdTZyw/X70nOANcEW5avWR9
3fCSrHf7Tzz/5PP7st/sX3ECPr56Vnnw8m59WNmnryYeukCdMPsTTqQPzZxD
fAz4ON0c+bI4Tv+J/c1+4il2bkP2F34Z+wj3VNeHw+ob3sOu0B3MfcsvLxVn
JT95RR+a+OGj6/vk7fBavAVzzOD01o9+gP1yZXCYC5N3fjfn65XU0dQh4Zb0
aaofhG+Bn4ZXKZ7Ofi2/P/eFv93+PPsz+7lzbvEP5fk+N+deHALXgu/zh/h0
4hF5B3/Hz+FpyH9PZ989kbhxe57Dw8mr4NauT93dPsR75T/kn/ruLkgdRp5+
Uewf3Qk8kFf5K30p+kASn7Rv+fPr+p3O5+k3OZV4SB7eeXnxW/Ly9i/kPNwQ
PC7rt/H58GnhOBtZ70f+Iefn3PVtfPgfzv3/3jynnw4/95f/Z67/nN/aeHvi
9LflfeoPm8ELzYWDbzZf1m+c58oPtT6h7yTxwoHYeTzw6rbFX+qfgjN1Hkvu
n5/U5wLPtx6te5rbQmdZn3dwPfz/6ksO/QN9P/abecTOK/wQbu3csNf4+ngI
eDL09/C1zvvGev3b4VH6VrOf5Je1K0+tz4FeJFzE9YhL6Q/CYdp3ETsgj+fP
5Cf0OPDs7P+Xv75+b+NT9S86/+LoPAf1ueI5uW91OPoB8qrjOfeno/dG503d
DX6Chw0npXejvoG/xN+2v5hOL/4vfEJcSn8NDyH2Hb6hDxr//gT/oF84+1M/
jetgl17J+4+kzgYHkJ/juak7w7P13cHrnUv9P+Zv6q9WvxLfqCfv1keV96tP
qlPDJ/Cs8HfN39GvQ+cHrur7zUV/LXiE+se+2JWLv5PPPZfXb7wvdg0epk6F
dySPgEPVL5nPoC6SvBVOTg+l8+LyPnNn2KvqLySeh7/j9Ygv9dV1nox4DB8t
cb08tDqG+XvxivqM/hf8KbjrCfW2rCsd0mPqgcHD9qgPZH/AEcyjKy6qzoo/
l/OEt75Bt1K/P91/92XeWeahVRcv+RRdBvk0fVx4aftJxAV/un6efSd/lu+w
6+U36nsf+iKdPxN7oC4IP1AfaVwgbgzexD7ilegP0IdsHfFN5O+uly6jOlF1
8/Jc8XLhcOwhnY7Z5yoPZNfVw8Wr7SMxpyn7Bo9UnogP2v7SxIlwUvh7dZJz
PthDOCSdGH388BE4gb4cvF98CXme+pw4sX2sdJwSV8Mb8Hv5Z8+n89r07+f+
6BNU7y37QD5nP3SOTP5e/fLZ+BX97HSc5NF0kK5M3AhP0l8Kf3D+9BmoD/Pn
eFj8sv1hPfGKfQ4+tfo8XFRdnL3Qt1Zde7hOdCHkT623Zp92HmrshTzQeTbP
B++fndJXo+4rDubPi/8kTuQPfA/9QPm0+WX8mbjZeuILHEucoF4E/7Jvmwfq
S4r/0+eNz9XnAi8yLyB2x3PAi9THJV6g5wHXuDXfp++JfhK/CW9XD8YzxSez
n9hTekb4hHSw5PXOcfM6/crxV51PbU5B+tKrn0En3PvgBPpmzG9mr5KniQ/3
JG7H41YP0Q92VH0Bb1zemLibfsnkf+GT0HkRl8AJzF2vvq55PtmP8E94JTwF
f3xj1LOO5fzLp/EN2u+a/aSua//pU8EXqu6hubX6d6w7PCp+1/eYPygO0Odn
nuGB7DN1P3qJ7LL1w9PVT6n/D55q/elrsZfsgTxFfGn9vG/qiOonwOPgz7fk
j19bPwc+yL51Dl/sMb6QeVzVVRaPp64r7pJXskvyoc5rg7PHznf+5h+t+0rd
gZ5e8eLsM/qA8jXxB94sniQ8Hg8Lr6rzTJyvodtPD808bvwN/Wbun32Hy1XH
OPupPP+cS/GWfi72V/zSumnOFTt6p3nd9E7ofop3vf9r6+/5N3EavJQuY/sq
Ut+mt0XfBj9XfKHujj+EF1Kdcv1cibP5x+Ky+mL5BfGuukriQHNl8BLFM+ph
+jD35X7lr+oLjSfVCfBb9RlE74o/6ZwrdTp8o8SB6v505uW38Mrqxshf2N/4
YfGcPihx2r7sVzwb1wmn7JzirI+6N71UdhcuoL9Zv5o4p3ORsu74xHT8+BV+
WZ7afkr4o3qT+WJ5TvBQPBp1VnGvfHwHPmniLfGwfjO4J56geNRcB3ECf4n3
9nS+lx3HD1SnoC/E7uqf0c+NR6DubX+as+w8mf9zTeJSuKl8UJ+h/ADvjc40
fgQeIV4q/InO/2bqAvJac4PUX/Bc2Ts8tuvw+PLvBvN04q86z4i/zPU7F+rA
9m/7mlLnYWedG7qE5kjjyYqHOp9AfK+ekHhOHmzuh3PBX7JX+ITwffGo89+4
IOeSXb5uzPWQD9GrLh80eJn5dfp0ykOP/VG/rR6hz8E3iv9TB9UvCKdgH+GA
+rXUVfCYqxeQz2f/qieszs/+5f3sKF06f9c5Xfq36Mzwd+YjiFOzn6uvq+71
vnX94DDib7xaebI4pPM4zZ3LvsI3kBeoo6t3yi/hXuxx5z6Zv2XeROyceKp9
Jp6XujZc0fyD1I9n/+bVw77QS9XXSP8c/v6muV+Jz+Ao3i8e4vfptIhL4Irs
vXNRXZrgHfppxCni686ZTH5SPWn9HlmfPt/U4fTBijM6lzPXDYejg0lnl76F
+q36Jb6bz9XnBueUZzfOSLzHv7YukXqDeQXskLgNX9c+wfupvVefhW/hDYqb
Y6ft8/bn41MEd+SX8Sv5cf0/nUutjzZ2S35sDlTvR/0reB48GG98zom1H/Wv
+v7OMc590pnpfBF9idlncAh2Rx7cekCei7wXHtH4MPmU/mt1MXog+puso35M
dRd9xs5R56jBUT6wPm84Gt4bfyo+gWtV/ztxEfwC34D9qK4Lf5TrNceW3pzz
DA+mn+V8mfdI52mnvJuubT6nPG68Fflj9h3+jLi2cwzo5KavQp7aPpCcb7ik
51zcmB3Peomb4O714/k78SL7w890ziH7n3UUvzyjDpvPq65izo1+F3gKO+t+
X4xdpT/C/uKRqWPg6+IPyDu6ftm3+E5w0urXZJ3Ed/Cj4tXykZwjeSjesL5R
dnXHOOfiYbyI1kHV3cWTX1j3f/WC9M9mv8nj6bKyR+XhjT6f6ukkX3Rf4lN9
d+oT8jo4uvzM+XGu9JfA6diX1m0SD8n3m//qM8t+5Qfw4+mQeW70YOhguB55
vv5S91MdRf7gE+s64fmwK/Jz+3fqYPOP9DuuHn+n/iyOsS99vjl8/Kf9qY6F
J9t+HLyUnG9zfuxPfQit+yTugaurN8w+fc8Dn9u6q9tX50wer06W63lxxO3s
ZOvG2c/mjF8x6hn4uvI2eSy7+nz8l7qj+JGOhfkgeCfONV0OeCodGnwY/EJ6
APyVdew8jcFD6fxNdi77Fn7Mj8oL8AisL305fydebJ+nurZ8PvijuoI6tDq4
8wen1pfQODdxCn6M/VLcXx977NJR9b7EY53Xod8e/pM+mPa347Pquw4eKl6G
f8kT4A742/ya7xf34aXg33sedHzEB+waPRr8w+KT2c/qfOIjzxlfFj/APrLe
8l58J/FK+7HHPCPr8mqeN16MPmx1HPikc8ivyUdqt/JcrRu+rudcHC68PH8v
nyzPQd4pvvjwul/hKnRE8K71RcNHfd4VQy/Zuao+rPma4g3198S/1dEWr6uz
5vlXz4w9Dk+Un6n+o/kW8K/gneIy8Qoc0nmF9/M7nTdED5v+9rXr9Ylr4R3y
U59vv8DJzLUyb7m6bPpM+IvYG3kRfApuBzfST4CPzd/Ib8Tpzmn5zcm729et
H0OcK+7AazdfBR+MvTOP/b71+t1f7Rx96tRD1Hm8D94qfywfNJ8Px4eD+Xv+
A19N/Od94mX+TF8jHRp8X3agOkOxg3QIxWP2mzgNvq1+xa7Z//Jtz6fzhdRT
P7e+tm/YPmJnc77lz/B0eCN9Hjpl8IrqXeT5wD82Xa/6BPtj/ejX8w8b6/6y
XuIA/mVeJ1y+utvZN83XYxfgxJ13kufDj8obqwMRfMTzhUNaDzy41i/0EQbH
EO9VN3Lo3qtz0cOSj9NbYWfFU/rSO2dcf1DWr/q30ekQN7kPeWbnruLVqafm
5+r0qj+GP18c4lPrua4+IZ51vlcc4f7F1Z6fvMM8Nnkze8z/iKvwOtQ31KOs
C/sEH1V/hJvgcfB/+Mh4MuIW+4t+JjstPoGP/QgfJzitfAjOCOdz/wc+tt5P
dQ0Sj5UvnM+Tl9DNwo/RH4afzn+q98LR9SvUTsROi5OKX/IT6ZOAf+OLw8E6
L/P31s8RX8Lx2X/nHZ4kfurcisTD7YeJ/dDXKP9SR8PboAei/1T9ofhT8uHO
+VCXY/fib8Vp1b/Ic4JTwO86r/B96z5X1yue4HPgHPZ5+Cpwf3xDvEJ+Sn6k
D756/zmn5qjJg+F3+Cbld5oT7b6db31aiRfxtIpDPbbev/i2di7ryE/rw6pe
IL4Le5+f8VRan81+LT6W5wgH63Ww2/iR943Pye/xt+Qn5elY/zyP4v/h21Un
Ar7Fz+B1yUfyuexU63Wx0+Il3wvPbf9J7Cj7XZ1eenSxU/Bs646Poh4r74U7
tY4Te4YXY36AvAWu1TkmdOfNx6BbLx4LzxHviX1oPj/62zpPyP3TPck+hesW
t068Au/pXFGfb/3wkeBWdNZH/bx+KfsNH0I+La4W98IBrFPj4uy38nkTJ8hH
7Ddxp7676rzL855Yr6P8ttgr9qf1Ajol4is68q7/fev3VCeCHh2eQHiRnXcL
f89+ehpuHt4x3Bd/bM7ZKG6qn0G/lzyH3pX8GA9Un1H2BV0R50F8hH8AHyzO
bO6PuWB06PGlsn/gcPC/8mb+Yn1e+HD4hq4Xf6j4ePJZeFnzMutHH19eB++M
HYS/9zzKB+xv9Ul5Uc4Pfpj4yz7G/xaf6Ovq3Hf3q38MTjnmfMA54DrX6TvJ
+uobpZth/eiF8G/VH8q55p/d/9bt2Wd02OjZ8EvylLzi9dFF89zgFvIyOlH6
IuiPuQ7xb/0/vJj9jf13Hfh84ht+ofY6fgkfXF+i+kT9f+IV+/ONgYfQfaWv
Kp6A17o+debX0i9TfZWce3hs+d6/u34ffqz6GHsPf1a/VicSj5qTpf8c7wXO
wt/WHsVuyF/MH+46D7xIvsOu6I/Hq8M3ZXfNTRYfqW/j4/n8xt9wDX4+66Lv
sfPVvT/4j31WfDL5qzoV/My+8vxax6cbLc/LdZYHEd61zzNXVFyNJyReppuh
PuB6Ov/FHN7sJ/igPEf8jZcKt4Vn4xnKH9RF4cGuj84sHAz/WP26c4Y9n9gr
+i3spz5ldRf7t/3GY//ow+77g+P4x47bh/AU/kxc0zmnWWf8Sf63+Qh9JXoE
8lT8cnhT8gH8iP5/7ObWiDPku3jNzpF+GPkAPEK8r74DzxNntA8j8Wjncxxf
36/eoA8dXiKut77e3/iIbq1+keCt+Df2AXy4zyP3Ay+3/9q3lOfj3DSuxScP
ni8uaZ4VvwenUF+jry+votfsPNLBEFert/Af4n/7mx1Sp8XLbV9d/l/9Wp+y
eFwcgPcoH5KXi3/xCeH/7YNLPCpeK28Irg3XTHwGR3Ru8W3xm4/n+uGJ9gm9
cuugPrwPHxTumvyU3SreJo8dOud9zTmpblLiA3wyvL3Wa/E0EyfIN/BT+cXi
NXgU+nv5oTHnpPP3rHfwc37d97VeFdwBfokvoY7DP/CT6v+Nx/M5xVk/s65n
efnqGexO/jVfUK/P/nLOqgcHz5cP0SFiDxPXwS3g/frq9OfrS1AHET96nvZd
cdLHx+9jR1tn4eeCf8Hj5BHd30NnuryPfA4/V3w69yNfxBMXz1XXcuCk6ubW
W9+Y+qp9cebkuk/wIlonVsfL81R/4pfhUPKZ4mXxf42bgvOps7d+F5wYnqiu
3bhBHSz2VVzdujkeA31kusg5j/y+Ohu7Xj74mDvAL/LH+sc6RytxcHnswU3E
peX7iJNcnz5vukPBxenEivPwfOQX5vqaa8RfqP/xL/hucBc4dutf8R/F6R8e
z089G39O/Gid1J0+te5HOlDlu3ufdcvP5YOrV6dOWNwnr+pFdF74TboBrf/6
+99Zr9c5cI7he/hB6ndwQPrXdKZbx865gfOrLzmv/H35WvZr4nx4HTsHFyuf
MvtBXAhX0N8Lh9Dvgxcon5M/65d3P+1T0u+ifpP5a+I/56N9vPh4+mL198OH
9V3xC/xxzgE73zoRfJDOoPv63Ho+ypPLeXCd5TPDzeggWpcx92/2HTa/1J/E
bwd3xFOceuDiZNdX/2j+VOKC1kfuWL9fPlj+r/mf4V+J76rDmnwPripO0l+L
V0x3yrrK78yXFAfCAVonzjrKH/H967fxPeAxcDJ9zvjPeI10y/XBqLfh3Wc9
8Zi6b8acZfEAntXEHztPmn2Sv7BP2U+dv5BzhveDv4QPaR45XRJ9ReL11pvg
Wamn6je3H+q/1D/gwh9Zzys77znKQ+SN+MOdr8V/Zl/bv/AH+TFdDX7B+skT
5fn8Z+dnZP/CafVlw3/pvpuPJT6VF5X3BZfNdcJbxN/iK/2m+MTOEdzhxbkP
6V6l7wEf2PxweYp6RHEp5zb7C34hzim/Gm/kD9e/93zENeZd6u9vf5K+qNhx
/sTf4UcVx8w+gFs6N+yCOU/OV/ud6bnmfuAZ4ihxMh6R8wXHpdNQ+8hOu3/5
QuJR9fTO14pfPZD+L3NxxP/6it23cyNe3RrnW3zAz1dnKOcBPxnuUL5G7Cxc
o3PW2Vn7Ju9XN5bHdq5Q7htf1/nlJ/C1yp+gp3/Hev7l/66neJg64W3ra+fI
wSXhE0+snycPETfYD8W99TkEL4IP8QO1Q7Fn6rfiCricPBluoy45566x8/QP
Ok8en4N+hDzp6Pr9/T64RvIa8Sw/yL7jC6kr2R/OCTvx9MTL6WfRiRpxXnma
yd+Le8cvsfvmqYqr2S84iXgR7se/7R77HN7mfuRl8KryvAd+y//XPiZeU+8U
B/heeoPyL7oBzkt1S9OPIW6C29CPqB529rv6HPxi9vvqy2Mfnd/icUMHiv+C
D3Ze77vX/Vv+ds6V+ID9c46m3mPxdX0EeW7iV/vLfpH36A9m7+DR7CE74Hm7
f+eu/V/mn8T+8CP8ln6AzrWw75MH3znup3zT8Amq95E8T17YuuDoh6EzT9fA
+cOrs+/pw5hXjkcFrypPQLycfXUs929+gf4kdkm9Gf5kvfS5vkpP3Bw18wfi
z/l388vpttORll92rlniF31W5pbSia3+R/bxm9m38vmeL3iafO7edX/o18On
9rz1hajLq5fyP+qJ1d8+uF5f562L+9Xd5RnZV/oTn0ofM/z5u9GrMB9LfP/D
vI/+bOdyqTfnuZdfn+/xvs4DHXUEz792TR47npt4ovw2vKfEx/Ab8Tx7y47q
E6+d13+XfIbdenrkI8XZ8HDiP9kDvB15prhR3CV/0TcPB5A/0tfYqW8/n8ce
FpfDq3hw/R7xZnXtfn+8H34cf6CObF35Cfl646jYHXVg/Kfyi/DrY6f1ualX
yrM7L5uOkDx6xBHlsekjz/p0Dq2+9tQhd4734bfTl4F/t28An5i+WfJnfSS1
u+J38Vp4nvpDnFe8CXlP57nhWWX/OtfVNxp9y+L+6p2LO82x9H3el3V3/tV7
8bqq90l3VjwfvyfuMW/a+Tqd/Mt+FHfZh+rdrpduz1ber1+H7q5933oGe5i8
ubwz+yjrWt2pd63n3flpfdL5zfPSF6ae4j7MJbCO9qn7Lk6Uda/OPL541km+
fJN8JutbHszga2yMOFj/kzpb6z/wltg9eqLqY+wc+24+gDro/thr+guel3Vr
P32uzzw487bZB/EfXq++9p10i/QT5Xyz552voa/BnFi8oOBE/O9d8av4DnR2
95if9uS6no/HX5ujwq/v+qs8/z9b9zUdjRcHTmE/lzcaHlf1ueMv5CnyYvxD
OLrnCLeAq3lfeb6pG4gP8bnwKbcG3sTvqWvD4fGjzKud+j7wUXEee+f8yDfE
EfaHPmB9ufTfGz/Ab3M+3Zf4UbyovvfisOfqdPU/6mLiBrgRnSzz47JP6PTR
KdiTfb7z5Lo/zNFgJ9VFq2M++v3kw+y5OFqdDu4mnm6fq/tIHE0HQZ6h3qI+
wh/Jp3y+OjI7AX8rzqYOpq8v62WfdT5F8BR+mT23jtVpynMW3+Ez8EPqpvBb
dlx9s/0w2U/irNZXUq+d+mFwIvU0vJPWqcyvU4fyXBJHyY/hKb1uuvvxg+YC
6ZOyX8zPeHv0YsTp1ofe++ngUXjydK7Nb5N3dH6muoG6beJH9VDxe/O9PJfW
/dXzEp91zk3wLjxv8Uv5h9Yh66WuhH8gLuN33Y/+PLxyeFj7vPAW1TnowdAF
gE/Lw1KXaF4ZP1Yetn6i1J3E++yHufZwM/lk67NDj684UOpLcAt1PfEu/FB/
An3DB5LH7KYXiodFf82+Ek/jSeiLTt1VXyweJfyULgR/Kq7HS5J/ii+Kh8Sf
2o/yIPZMvwCcdad6RJ6H6yhemriIXojzNHn05e9mv/Drm+YYBZeG9+OtwU30
5Xku1Ru8e70v50KcYJ1bj/J81XPgVc6BfYf3Yf/jc8ANzTPZWK/DOfX56pXd
V3Qq4RLwYf2qOVfwFv5AvLEVu8XvmQ+F9yueoE+lf8p+gC+xn+2rY3djL+j1
8//msjSeHPpF6tPl5+AJxS7Jb+XTnkvnxuV99ln7qHPO8Ro7j/Xe9furSzjm
m/NvrSPuXV/tr9l3xF+IS+y34iR4BPquzCnTJxveTOO94AFwabi6+KQ6c84N
Pxr7iCegbt66f/a7uP/48BPicHYKXib+EidVRzD+WbxGZwJOYX+Wv67fkf3O
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
Q/j86N+HE1cvml9OXM9+VE8EH0D8hl8SO82v4V21H5T+kX3/yfXvqwua75PP
wQ35MedOPVv+I34Vl7bvAQ/TPIfkj+yG+MD+kD9V7y88T3mYPKs6gvSX9OHq
4z+Q52YfZ/06v0K/Flw499f5rnS56LrmufAf9r98TbwF56BPLK/0/eyquU3V
v9IXk/sSL4i3zPWVX4svxBvsOj6w+AF+5bnWj8Lt8Dvlmf5lv4jX7KvOoR7z
QZwbuI7n1nhz8Jd9X3HE4d+KN797PR/2YfsZ4ldrp+Jvyp/XJ/fx9f7piXTO
DVxEvUx+mudAv5nOrL+3f6vrmDxBXmW99K1ZR3WmzjnBe2Sn967nyOfgadav
4NnH3+EF4oe3TyD7he4sfEycDTcyj4u+PZ3x6jzyO/le+Do7ze93/sZn1++B
azp34knPBf/CfsALU+/3/GtHEv/DnfGQ3Uf/hT9yduCLdKfVwTxn+Tl/rE/B
9crz5Tm+j10pvimey/kvb+OxdX2aH+iXhVfjQ9IDjL3zfniy58qPtf9enfDy
9bm3r/XmdT+pR+PHsXszDiy+kr+vrnb2V+dsmuPHP9++Xje9086rzTmGH4gj
7E98Zv68PFb8cjiX/GPvel3mHXtO/Inz0b6rMUfv7Iib8a48F3YeHgPPlAd0
fq/4VZyhnkwHB79h2HV26uDgIzmPzhl/4nPl5Y07Evexg3jR3m+/Wyf36TmI
053X6qbStzIP55b1/KvnqQvAD6ofMvYRnTS8W/UnvBA6jvJ5dqP+wXPLfeJj
dZ+Iu7POnReobuE50y+Vl+5ez3F1xmIH6Bt1voy6rvg2+0Cc0Hm8w+7hyVW3
6L+u+8b9Vic68Y48vLjLwLPFH/LWOS+T/YLfV59EXqA+KZ4Z8z3wjMSH6svi
VfaEveTH1X/Ls9T37BzTXYUXpA6DD9G+PnFsnge7z497f3kX+CKfXF+L04r3
1af1W+KX0XWWf7luOlpwa3W7B9fP83fyIc+ZHxJnzbmG1e9n3/R76Vcxty95
TnV3zA80h4CfzPnFf1bfoIdTOyIfVeekR4sXH/xaPwI+V3X7/T38Rhzz4Pq9
8rPmV4kf1RXwz/XJVLfIHIXYIXxRfaPV1dd/BzegP2N+i3pH7qN8NLizfM76
ZX3g3Hgw6hKdQyXvYvd+a/1/z6Fzoeh70V19bHyuutzoty7e/cR6PfXbfo9v
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
a6w7WU9hl7L+O5/yzu5cx/qpdnJ1MMLXX/j+0bM3Trc6KvfmcdZf4okcZ/2R
PHmug1jvJJ+B9+26h3UI64nrs92WV38L6/L4k+gf8dPPcl37g/4Cn0g8nrxu
1lnUFzzh5eyDT34667nEA+7lP2OdnH4/Dn9MfOW9ef5B8ZDooxwXz93Tu6E/
eT8vZks9Xkp93k+7wDPAe+CbHWXLefDS+J7entdp3xcXZd1FPF30go1PQ8+Q
9QrfPesy8Jb8vI51ETzz6pCeTXs2vFa8FfyXfN3w5RhvokMjX51xH/4l4xTn
gwP9dB7v+sZ4N/DgxHvaT+Xl/VvqDe8y6w71pWgXzxv+H3Z+eAmuH+GHk9+a
8Zl1UdcVx/M8ef7nZrm2n3oSdwauiL7Lz+d53o916ruzft6HeTi8VnXUsv5V
N6U6rVdTXvKvOb9yn+Pc72rqHR6ux7kO3gZ8ldg38m+Z57FDKJ92EPfZ/H3w
g0/N90Nd2OLPvCfgvszj9BP8VHRm0PEF3/5pyqsuS+JPF52E5K9U74f3i3k7
+nTej/IYJ6vbElxJPDW638Vhxa/q5wMXZTw/O893/I/fVNw587bxXdFFcJ4G
R2T+Dh+iPAT1SjqP7ekt3Ez7Pk476Bf6+XquK5+BctPvj2sn3Us5zM+tT3TJ
xYubhwy7LP4CceLmz6G+H8/yeb7aS/AZ4D18lnYUJ6Z8/NzguQ9Tb+wr7DXs
LnRp4A+Qh+jBbE/jO21P+Cr494+DF/u8+j5+mnJjx9oPwbXVB4ndat4R+vH+
vP9h8PjD2supp+8D/qgbOV4+Dc+L75HvO/i79Xs4y9fOjP6I19euqz8oOilu
L+W66sxjn27jqfoajLfw8Rinss7S/muehuqiEReBP/w/5//MA+po7OixWb9f
pP2vznbUX289T87zrA/2Z+Yz182dH8EzwQFu57zgXns4pPgTOErijo6C84qD
Jd7QuKfoBj8KrihuBV4ZfWbjo8BvwhMVvwHvSTybcV7BRcGBxDfR+yb+i3oE
9zoR3Aj9afju8Igbj0g71GunH76a5Twq3gYuyfNAjxse/bcpLziS8Y7VEwcP
LG85+JV4Y84XtwV3Cw6JX6P4srhh/EBu7zy7/r638edon2L/bu+feG78MNp3
we85z7hL8DJwoR0dXfUugpt13ed6M3ac+BL+M+xW1gucz3i3rY9cD7DeeH22
zzz28CqqA8J6L3wT23c8618/oeMg6xPGqaz7bE/GMeuduGh1cIjjoz/BDeOP
qV/U9Qbrviuz/qfCV6nODfdt3l6fD+u1y7lfdGXEabkfcXFvz3q4Lo0f1HmA
9S/vYXWlWV/wfFlfs55hnZR5z+dI+6Mr7fvz81n+ohsUfrnzefLBan+8k//R
R8BOrr3y5ixXfAn+Y3XvyhdM3uvyncX1bqcerHeix1Y9EvMdlT8J/+BOyrue
9kTvpbzq8k2Oez3rh9jTB8FbyyOVP/PJvJ/9UL23toPrP5rHD2tfl38Evlw+
KfZk86pems9l0Z/j/WBdjD1FfEDel/I3jtuPt2f9XTdWL471U/Q7j1vPvo+8
18nfI6/l3qyP30nycFmv6pVX9/Gd+b/rmcYPXE39rqTdzV/7UdrJ86jOMngv
14U/ZP9Qz+Pch/VMeE4LH6/PkfepfOI9nhrrFca112e9fF48F9Y7v8oWXCfv
tThM8xL/ZNbL96g84l+kfs3v9rvUg/k06xd/nI/OWeYxz9/WLeBSro/wt4Vn
7LoJPlHyQIqvNo49PNHi6cYXs97JvC4/6Y25rz+0fkj4JpdT/vs5/uHcfxJ/
ZPNmNE678Xbakddm+eaR+mTW23aCU56f9TlRO5k4u/ghsF/Mk3Rv3udJeC3a
Kdhd8TM/iX9YXnDjoosvVx8SXUjsw+D72k3g/ayLw9f1OcTPrZ7nv8/zT8Ve
exKedOPafR/DxzOOsOuBtLv2mHlHg4fLIwnurX5I4zxZ/0aPRd2+vF/NV9M8
VcZV3sv9WAdmXes67ZPZnua5OpF1u/miwi+y3qzjWG+Gb6IuSfR26kdp3Kzr
3fCDuv7i+fR89VbuzvP6vpsnNvw+xwP6J7wk6t38S6fCA+T79Trevx29JHkY
wWmMO6juf94/zpdPwvcePlPzuZbX1vFWPxfzCuNA/KWuW/Aj/ib/41cFJ0z+
Cdep27jBOKK/pfqNP5738TzmTewF7E9wRvStfznra32wi8Aju676t516Zj3v
OhFeb/R75S/ynHi+xC0zX+Mn5XnAf4weiPhJ8jr43N6a2yeZr+UHYx/8ftbD
cb3jP+Pm+fm/ep3vzffyRL+b6KqJQ8E/A6+6N88T5wRHYnwM3ikudz/XhXco
HtvxOOfLTwwfWB2x6DD5XSWuybyLtCv1fxJ8q+NTx9fqqIjvlZdMfdsv9Bvt
xP65PdsjXy94n/hc9VuqL0f9oouw5NGj3uGbPcp4L58SHLm6C8HH5b3xfjFf
wqf8dLZbnDy4bPmZbeeyDU8UHQx4iuDFzOPlJar3kLyA5hGM7ot80q196INU
R83nyflfzfqhL2Keys/m9eiYqIODTgf4OO/Vdv0/oovCfnVreC7g59+nveqe
bPvF96kf56OXQnnsl4eN/gjt5flwXd+X+gnwT9CuC+n31o9+U2eFPJ5cn3Ko
t3kMv53n8X6g5/JC2n+y5aVeL7Q+0at5mPvIc/561v9h2sF19Kf+JOzWr2c/
c575QHMfzje/KH6d+nfq18h7ZbnYm8lnW36/30vyDzlP5b7+z3fcPJOMZ9G7
8r1kPgmfV/uzPPLoU+7Zk+pT7vgLn8aP03XOo9rrXR+xbk2eSu30u7MeJzLe
a5/envVgfbvEpZTX9W7qgZ1cP0V4VrWL6y9y3Vkdtnfmvv4PeMfV9ccfgL8Z
fAU7FH298pewS/Fjwy86nS3270spBz//hXm9uBf4HngcOOUfZjni7eB38GOC
N4tHg3uC06FnkvhG+UXgwcn7ZLwoeDp4ZfSR5fXcnFv5JNXzCK+jeLa45oNn
b82jWP407dqJBzV/VPIfmT+J8srDgbdDufdzHfVB9zu8IfRF0A1BzwN9D3TL
1QGhHHSxN/6P+hxfpr3t5/Cc5FHnPp5Hf3w2y/V8+EcPZ7vVKwlfW97R17M9
xrFGV9v78pzKa0v86qJb/eE8Txye65snKP42t9Xj5jvlew4ve4nf5jsvTg0O
zfr47ZRX3jbrYHiahyn3bM7ruMX49sed/5MPRh4s62X4zqzXt5/4afMTE38a
fq/r43Nz2/iRJ1mnu35+c+6fKo76Xso/Srngs+EpnCqPt/zcnCdvOnGPe371
Jb/gxVn+qfjFxbWpf+Iul355Y5ZH/1t+9FrFTcBHwmMor8N+TVyxfAXm9+qA
J0+L/Vwc+EraU9449Wmc0ruzXW7B5xMvatxt9JOL8xTXX543eA24C/1WOwi8
7sysr3hk3jvfE3gbyYMkzkY8APZF41/4/refPAW+e8YP/GXYLa/P66pz47gV
nZnFXgLvA28E92P8xG76Q8p9eR53PGWcxt94Lu1l+968z3HsKP2nF2e7/L96
BvhLqzvSvKDUL3pR1V3Qj/xurosdVb615zGfUA48grvzfgeZD+13+uXmrK/8
Cey/+q1pf/T/bBf3j/2mHZt4OvVc7sz2qieSuLuep90bPr28ksanUb/m9Yl+
WXkmi74GduCdWS/9/dEbM34vvO7jlH8Ye7l2TvNnal98OLf2y05+Fe39T+Z+
+Tn2S3U7eZ68T/ASEvdnfMaZed5e3Jn8hOiCyGOg3LPZ73NMvJ37lMd3Uf2y
2mtvzfpbL+6XuLLq8Cw87LdzHePkufm/fhHy/RIv+0rux7gLby1+H/nUxMcx
XySujvu5PsYfhN8Cu4N5Db8TfqX6m5nfkhfd8qIH0vjk6nSciv3ptnoZ8as5
bycPibhNcfHgE/ol67cIvr3kj4mugXHrd1MOOE/81fKZP83/4RGrv5D4ePH5
4GHoSlf3Wdw+OgPVR3Y/+FrzXojHFn+Ov8P2hHet/6K8EPoZP0qfd3iifX/c
1g+OXUv86vZrXsb6y+WXnprXyUfd3qPyFcrHMW6OPPHVVcl6RfuPeD7s3Orc
JI/QqXxXXc+Ub0R9fc/jpyw+ZzxBz28/1K+OXc/zAk/kud/KfnQPXafcmPXZ
8zu53mDcOTfvSz3NP/Th3OoXQ+8bHvZ7s70LX5z6YeezLuj6mX6rvzJ6VO4T
D816JHGi+pHDQ1/yPmYdoy4j8c3NZ8rvxyknfm/te+Z95jH0KZlPqttVXGRP
j6+6n83jzfzKfM56J/GwzqcvZcs8XV7CH3If7BzmZ+Kr0BWPDrf9kbirhScJ
P7R87+pE/i7tfCP1BPehnY3TL38WO6b5AU+mvLdTX/r3zE59qgN5am6tR8+7
mHpR3qu5D/Yh9tqltCvxvQuvlfuFryyf+N3cn/az/gB3jq6yfHDs8tjvjQPu
uk7d5egguk7CLsWOjz5jdUe6zlGvkfPRRwSfz7pBXj/b6DhznfoblBd9RfNe
gvcSRwqOnHVx8Xb2jbMFvwYnT7xncXBx7+D0xoeCW3+Zeu3ExR5kn3bZnzyX
6FraH6wfo39JvWnPcde3t2f5xjMnv2Xvq98n8ePiEDxX+onn/0mOUw79+3DW
+zD+AfNtfj6vcxv8/7B+EK5/OP9XdzzPyfZ+Mbfqz+c52f/0c563fivqw/nV
U62fovkA6k9rXEj8Fa7P78/zjdv+eG6LKzju7MQpL3EBN+a+uFjHxcQPNC5i
8c8wbjLeNw8q5wenc13d8fN6zj+d+1zMeY2viO6P89kb2aacRYf3wizPeazz
T/2+l1NfttFLbh7mxqE7f4K38X41Tqk4DfZJ4m48rzhr5mPxm+YbuZz6XEs5
zWN9I/e9kvsV36p+fnCkpf+xP5nvsRv6HJvHm/pSf3C4D2Y9bUfit/z+gk8v
uHXj6Ngep75vZosdc262t3oIjf85jt/zIP7+g+Ku0cXwO2Kf48FDD4Izeh7j
Vu2Y3r9xjI0XvJb7Fce9Oe/ve4P9gx3D+Jv5UHug/8cuc/7f0dHw/OCvB7Ub
E3foeXdSbuZ/x/97s13VY2nc3+IH+GgeL87tceqFnRGduOp6PM48pz1xb+5r
V4RX0njL1kOcvfot2Ee1e4OzH7bcjkesxxjPwqtxPqiu/Y4O93G/h/Zv/Vc3
Ul714Bl3EtfrOqF6hV33vT/LX/qD49dnO90nzpl1GPNm8niou9d4QdbNr2Z7
evab4z3z12H2z6S82iXVkyzPKnlqnY9P5fjr+f/MvG7xNzJf9nnF7nCcrq5N
/KHVMaydZnuv5j6dN25ky/NgPuE5np71XM4Hv+j6n+tey/3BH/A/gOugE4b+
AX5r+hs8ijiN4KnGg7BFvw5+QeLNjKM7N+8rHlpeAP4CcD7wy8TvPAl/Qdwz
erTyGagfOF9wb/0K4JPBM+VnRq9jwTUTTyV+HN36U8E/xc1vzvvJR/14ts/y
im+Wd/pByg9vddEPCQ7vc7iW/5MfXpyW9pZHw/tQ3Yzg5cY7nsv1ibusbvri
j+O9Znx8PdvyTqsDxf8dj/gewenw6xGvhW5f+CUe/3n+/1Ou+8+0K3mN+BU/
Ns40/Cy/25/P8owzi3/T7xX9GMYdxuHqpDZfNzgm88uZHGecKn76h5z/i5RT
nVbWgawTLuX4u/O+2uOM6533y0dkW/u580F4wIv9VP5wdeiqixBe6GHwEPm0
4EDkPyHvHPzR8Ek5z3x4m97dS9uW/Hvk6zP/3na9eVaS3898eV/MeoMTkQ8Q
XT7zGYLv0J7o9skDfjD34cVWd0/+7xcpZ+uH59uutJu8g/CE6Qf09I7TH/CE
Ke+f9MdfZ/nyiHf6uf1PvkjyRz7mOOV+tx3fto+37Utb3siXvpv1YYu+ofvJ
T3mYfjAv5TezftT3+b/MelnP7fzn0x7yMdIu2mF56Rf3814fp398n3luvA9/
nu0xn2b43f7Pc+r/ybfI+/B82kV/HOb9Mr8Q3++f53l+P/DWkx/zMN857TTv
Jf8Xv/1y1t/+SLnqbgYPLm58GLz+OPi2OO3nuX/yl+ovyDq1eUX1GwRHFh+/
8+z7iycUl886kXHauIrg3sZBxJ9xkHq6/uY+iXc4Lu796Ty/8Rrer36m4ADH
wSv0B92b9Xvc+7EeDv7s/Nf1Ke9F1tMHWQe5fi1fjfUd6736PfkffK75ujhe
Hm3zCgTvXvBN7lf/ba7Xjngn9T83y3XdeG3Wszik5dbv/rtsaWfXddhTP0u9
sUvhA2NXbXarfJZf5Pwz2ef+0Qm03tSr/uGXU154w0ucRvXw6z8ObuL9us6+
nPIvzf99/45TzqlZf68Hx/og5VRn7uKsh3Zd7cHmbytOtKN/3H3jtPh+i1di
P+7hx9FbEx8LDnwcvFMcszpkOX/BDeO/FkcrXzv4cHHVg+KM1fsqrpt8wvbD
rVm+8wXjGvWtv/le2l98+KN5nv75e2nPTh73w8w7ltvx5P1cV38m1/E86x+K
f8T1SXXJeJ+rw1b8i+/qvVnPjteNg1zyc7BlHm5ejvpNqBfPjX4Kvup+9eOo
T/kowT8XvJZ+uzTr6XhWfyLjYv1LWYd6Xsb5xb9Y3ba2rzgs5dWfdbzT/j/m
vFMp743cZ5sv5EGDH8BXBo/Y4t6MfwK32clT4j5xZNXHAm8qbzN5CKur+yQ4
mnxXcMYr83zjz+ER353Xi/PBN44+ibod1e+AZwyv95N5nrou0UlRbyVx7tYP
PejkTbMc7l89EnS34BujB1CeNPUM3xk9AnU4wuNedJSjY60+C8eji0M71K14
MLfqGjxIuxrvv9Me4/p7v+opRD9LHbDoH/gc87zlW0evRH3xL1NP+pn+Sh47
n1euRw8C/ZbyzdXP3s6vXof88AfPPh9+OzosXle9mB2dE3jx8uWTN7E8+kXX
nHJzf3V1Hs7/1UGnntsWXRB1Vrbr0DWhXx5+k/+369Cl8f7U96vZHvM4fjH/
R9dDPRzqyfPl/YmuovEID2a7aRfvgeMMz59+S//6PHl+fB+8f8QjfDnrbz9H
z2PJvxj9IfNrUq/oXlWn40TeK3VUPp3XHaXevsefzXLbj+a9jf6f49HduW18
ytNuq490d9bTcSF6J82TqP5hxtH6ffQnhddvXkTiOMiPG31P9b4SD8B5tvPu
3K+frP1mXMmHqU/iCpZ4Y/xP+O8ax5A4o8YP2C9sP8h5t+bxxa9X/1jjI7iu
cdaNxz+a7Vzi9M/O+1aHsOcZx/DG3NePy7q+8cuNK2adj72H3cv6HXuP9Xv5
Xaz/wR3AXbKO1//e67Hry5fCPr84z3f9w3oz64fyrl0Xsm4L73rRjS5/tDzt
u7M8cbDqsrDeS14k8+g03xTnVZ+F/eiclJdcPFh9kPCA9RuVL1x/ymez/Jaj
3kp1YL6Y9a8OTPMyPc7xw/hpPI8t6/ryvlhnh5/vOq9xy+VhsQ2fyHVm8cjy
aIpPcV51t8Mj9T6sUzmvOFb9o3yvxZ/ezHnnUg+u4zvt+vStXF8/beNpGofT
dSL4Y/Nkxn9ufBTrR8oBf0QvpXFH0UOtv7p6p8b9/XaeZ35e4n9/Ps9fdF/r
dyfPJboWjM/waPDn47/f05dmPD87r1vig08/ux22r/q0ya9hnHLjzao3y3M7
mX3wYJ4v80ifO+XwvE6lnFezz/bNZ//v+/Fi2pHnW515+zt62eYljV5I9emJ
0zMPTPVl2L4x+9l6Red3j7ciHwteBf3443me93t9lr/0T3henhd9W+PdwWew
F/Ar8Bx57tVtq9+Eep989nOT//LGLL/v4/KdNb8lP94/2t14Qe6zh2MxHvI+
bu+f41x55ozjyfcrvhl+s/NOeKDaIdgrjT/Z0elofkD9ovGbHsf+OIj9cRz7
w/m2fIrO7/iV6yeOf9fr2Cf/YPze8D/ko5S3gR88fJU9Hov+c3gK3+b+D+f1
lLvnX6ed8BfMA8l98aM/nPXXTqu/m/bTX4ln0j8cXbeD2D3aX83TEt55dVP0
E32a8+/P/fK4H+c8/U7152CXfzTrod5J/D7lUy3+Duy32ltcz334Xt/P8cRd
6QeKTqI8/PJ+Y4+5X39k7bjo3ni/vTjfxsdW75J1W/0T0WnvfGleLcb15N1a
8oNH71PdreZDLt5wOdexjk1eN/H1HHd9fPHZ95EHzH2vze2ig3Zl1nvJF72H
EwRvEAdAVyH5DuoXEMcOTixejF4DOAJ5LsMTli+cPAfVt1DfHNwouJM689yX
didfi3k4wOmCZzX/4aPg2uoig7M9SLngdcGF1f0Fl4zOtXrP4K3RueY4+s8/
oL8cPebv8/8P2/a5v87yKee57569fWHbnty26Hpf+C73/W7+/0Lux/1brwup
zw9pL1v0r9Wp/maeL66L3wA/AzhxcGi2D+MHeBS/S+sB3s3zOkr5+l2iZ2N9
glc3n4B5XuLPUjfn87lVPyjtLd5NfZ/u+A94D9Et5714mPfx+7xf6pd/M89/
Ic9Jnfeel/f8+/R39zn/HymH9wB/iXrhX892nogfov3zqN8p7w39Xv1+nhvj
UMaLnme8BMeTh+JJxj/Ht+g5mecgOPuCwzNuRzeneX4WHaSb8/xFF4t5LflN
PM59mCfBjRNH4fzI/Nf8VtyX66rvGZ3VZf6LHpHr29gLbn87yzF+ADyB37Ye
dN0MnsF6ebMzXMf9dJYvfsF6kfUl6zrsm/C1XG9u29o52kfVAa6uCrhD141s
WTeeznXcl/iNxodwv+qmvJb6Nj66cd+NP6vdWJy9ePub8zzxyrM5P3HlC79k
L87+Sso9P9shrt+4/+oUVP+zfLp35vHjXrfH84nuoOvw6BguOql97o034bmU
z8lx+id4sMcb93eUdpbvGnyi/CDb2fu/P68Tz62OQHlaxbdTv11dH7Z8Z9HT
X/Kjsn9mttNtdWPfmfdd9PzLH7uSdl7K8fLrso5rvyy8uvRr14U+/7OpX/nA
lMd9ui7u+f2eeU9O5X6Nl92eh+P+Ng6LBzL+smU8BV8Fn9vwPMa/xpm5zovO
9JOsHzsfuR68MMupzpt4aHF07t/5l+vZMu+zHrudLeuwxGW6fyP79RPjV2Ye
x36ojuWteVz7IOtx642d8H7qcW1e17zs+qeTN23RDW3cLvtnnr09leds3OGp
lBucofi38Y6/mdct+fLAhTv//zrl/TLbX+f6F/N/eIzeD39B9ML7vqnrVz3y
rV+al5bvxvv/x6zf4odK3CblV08Wu8f6Nx8h9hQ/7BNwJuwbfntxs4mXcDxv
voX6E6sbxHMsP5V5YY+fGv+k8xHzNnm3L+V+L892ePxs6n069Wj8aeNQXsn1
76Y+5VdUP6F2YNtVu7B8iurq1J/xdspv3uY/pn60s37iMymv83btjuhBqMdR
nRy20ePQH38n/9few16Mbrp8f677IPvVm74662e55ZdQfuNEwLWje6UeOzh4
+QSNV3knW55/3z+eY/Oa8B3y3v4k//Me8Xw3v592AD/iyROnrp8QPzXx9qzv
6o/PeOb41Xyiv811v5nl6s9lfmI8Tp6T5mOtDqzjdvjoxc0d/6vfGt0B+WDM
z9gft+Z5ztPJryluHJ6dfL/gt8775BUvjgyugN0AjsH+9ZyfvLhP0i71Ja7M
cj2/+Vnoj+Amix2WfDb2H+Uc5/yrs93VGbZd13baE3uwfoDqVWuvcvzDeb3v
0bncj/6PjrbHsYOS/0f85s1Zrnru4U3aDvrvxjz+pM+j/xdP4rz6XZoP551Z
3yXv8rV5njhSdZWLU9GvF+bxU4nzWPRers1y7Ne0z/qGF+r7xLY4XfJP8x0u
eahvze+6+XTLV24+3iWPYfIA6leKzndxyr5nvuf4x7q+ot/CV2k+5iVuJ+/n
k5YT/RDXH4yjXS+mXl7/7rOvX/IdRf/7Sdprfuq2++K8j/cvD/f8LK/rn+oZ
OZ+wLjqT83pd7PquS7TzO18z70bPxXUO52HPYkdgt1dPu/wa1g3ct3mOsD+K
g1JudbCanzFxwgsvmOPFs5pvKHnmxH+KF1afpf7/6qrCBy5vB15w4vOrB1gd
Q/MdRr+gugeH4V2o65j7N0639zeutbq35dOGJ6ROQfI3Nu/iQXgt8G7gxRzm
uvKQq2Nhfkb0MaLfAb8Hvg/6H99E70QdDvbRTfnrPM7/6LWgm8L+Mdf9be73
OnRMnv9u1udxtpyPbk71Wx6nnOP8/022z2/1+ud3s578f/j37fz/3u6//f/4
r/P+1Y057n2+m+0/Tv+236sL81Kv23sef5n14zj6KOjIoLuiTg/8MHhf4XnJ
93rw7G31NRdefvRH1CvhO4Q/xfox8eON55dvxbr4w51t/SHVHWzcRfQpHQ/P
Z1u94egqL/z46CovfoHzO+e9li3lgyudyv9vp13gD+BPrFuZv17OPr8fZb/r
4ubp3PMXMm/u5V94JdcXD9tZj4tvxg4wrwe/zsPN41fcnl/sgOa/qE6e63Ts
vNhproe3epbXpV1VHL/6jVyHvVa8PPHZ2sld/74/y2/+7OL7je9a7h8dSOtz
89nlue5IXhzXG3t8tuRNWvDl6iSCI4Nn8HxYXxUPOZv7oo/I84ydqh/gv+b+
wntPfZb125Xc5+3U7/V5nf5/8G/8BegN8v32+3k1//MdxB/Ab7GjG08TPR7H
T8bFszm/ft/i1pxfv2LzokQfYtGhBUcMblkeb3WenY+iR9K8FYudWb54dAgf
53zj2qrPHfu2eR3KT1aPJXrdnp84vOK7zaNofGD1qZqXMvkQxJXLN+G9aL6b
8IOX+EW2zWPQ94tyq590Lv8z/3U+fm2n3tWzil99idN6Jdv6Q/je6keifnxX
5SfXz/TmrN8SJ5T8VUvc0VYP47bij170XDP/FRd2XPjJLFe/JrrGRzvb5OUy
Luh/zH1xvozH9fM2v7Z+b/KGNa9Y9XG5X+fJ8K0dpzuOBy/0fHC/4suX5nY5
Hr93/e0L7r3hXMbdw+vbyW/YfIbqJkT3Q15geIzVE5EP+vmz/y+PEh0O+Jbl
UZ4Mv7O8Z/i8nFf9C/io8EDl836Zejyc7aF8eKtH4XGiy6C+R/QzqrNRfi18
V+rNvvze6GOoH0H5D+fx8mDlrUbPA36rvOjwnx+l3/Z0Q3p/9VS+mPvqX2Rf
fQq25cFTTni08GDlzYbX6vvN+eE5G4fAfvi38r/h2/LdVP8heg5swZfVpwju
rD7F3blve6Jn8Sj3N54icRXVN+d7N/4geV69b+5j/ATHqzPy8TzeeI7ymJ+2
fdXj+Cj1S/xF9TDw5znefTrv4/U893s79ct11qt6LJSXrbrwrG/y/NXN4vie
n6FxOByvX615gyk//OXu7/kVzQ/LvMj65cLclk+04OXYNfCZsSt+ky3x4vB3
myeh6+nEj2sPYcdgn/CLfof2TOPhi5uk/kvexvI09nTWOd48j6/m/LPZlkeC
3Vp7r3rsbF/K9bTrKOdhNwdvan6uhTfBfvhB4ktHO+2hX6uXSn/wPH6W9rY/
Xs992We90Lww4a36PMoL6XN+J+VT/8b19/lRTvG24mTVl8j6adE3bL4tzg+v
9aDb6MQueCL9WH7TuzvnX8h++DbLuru6weWVN78X67vy2Mtzjw7JwoOKv8l1
ceJo1a1hXRx9U3VF8SslP5Y4AbgBeEB1vxPXXf0a9/s/8dDEVVeHJnox6uEk
fvxxcfqd+x23PtS3eRG4T/V1Uk6Pi/fHP7foBt2d13mc5wX+Ur3e6mvHn3iQ
98D45+TXWvAO8KLq/yZ/xeL3rN5pdVWbH3FHR+c441nzXy5x1tWX3fNLZPxe
6t+8ks3L3HmJ8XPDAaqPYdwTOEHimfwlHsn1f/z7i34L8VbwfMJLaFyWfIIN
T629oB+huOeP0g/VA2O74ZjaH5xfnQ3mOeZr+jF85CXfTs/nvp2nqv/B9c3n
2Pxe59O+87me/c7nzS/DcX59b4rbNd6D9tBvtKN85T6X5v+qLu8fc9/TadfP
5tbnGJ2evf/dBzcrLhidGe3hX+X+/Nq/jS+pnRK7duG5/wudmurlLe9r4vf8
XhOvsPBdGwfDeuPcvM7v8l98p64bwC9p51a/8lXly+a52f8vpr18R+EPWX/G
h/KD+R3O8tXxqT5U1wfo6vN9dHzpe0x5zUPwk+x3/XE62+oRlvdPfXnvfpHz
W27f226PZ3v9rimn/H/qXz92v+MzqS/+YvSu+OX/vs89T70n3p8/pn7RLbNc
4nvBl/Hjld/X4/0u3pjvsfNj+HJLfA7tjk6W623GuV/P+3X93jhlcXRw+PB+
Fz5g/ZiNa3sv3314kcX1vW95zuURJ7+dfGzwk/dzvPXfiRt7Up4o/gn8EFv5
4lzxey/89+YP/CDnH8/naX9zv+A/5YcvOjXhfy488PdnOdaz8fXlt9+a7S5v
3Oua//DmfA7WM/zh4mrGDYZPsOgB49+I7oE4X/ToxVurI8z50WcAvxZPDh6t
Hnn0nfWfsM/14JfRp38aPLw62fo1wOeDo+uPiO62ePvXc/tC/CfVAakeBuXX
74KfQR3v+DnwX3Bf/Bjo0eCvwC+jnk38JvhT6kd6Gv8J5VfvZMkHQH0fzv/V
X0l7H6X++I/UKY9uylH8Ueqy4D/j+VY3iPP4n/ez+t55r4528PJe5xbcO++1
/gD8LezXP8F3CJ6fffWYKD/xPOqORG9Ef8ydnfPLM0r8cXF14wJyXv02jkMZ
/5Z8somncXwMj8vxnfMY127nuvC1lvifnfjwhee1E2/0JPNr7W/Xz+D78ABY
J2QdVn3Wxj04nydOujqg2jvVX+VXXZLqjxxmHzsxca7VSZDPEjzU/4vPFAdN
fKP8o+Z3a15rymucZXUrKP/j2Y4lD1HrGf2+6nqLt/Z+Pb/5XhMnYP2Km4V/
VF1E+b3J87fk+6ueIrhs+Fjip+CczaOYvIziqdXTph6fzPIXftj9Wa44aXBd
8yImX6I6oZ/N+y75EhO/IE8suKn1hU8d/Lr6ku6Dq4YftuQtzvpR3LL5noKH
is9El2XBayiv67rGuRcHein727rI8Sx6xo43v5z75fm4fSvnNa6rehHbdUs+
p+oUVzeiPFV0Df4r9es2uKn+XK57PfULn3WJVzuf+iSey3knPKzytpx/Mv+e
ynpj4R0nDs91QddlbMNjaLxi1yn60xsX2fVP4xcTD3kiW+2re/O68kOol+sS
7LnmgQo/ojptJ7peyf6j2GVdJ6nLeW9eRzvkXyR+86j20830U/Q5Fz54dGG6
nqu95vNq3pHw53w/qvO2E1/rFvuF75nvLrrytVv4iSNhf4AjwkcAPyueB07T
eMP64xsXyLb6F6/nOPZI/c/N0xp7QbsBf2n8Z9o7zD+35v/6W/GbNj6n+YQ5
n/8/mVvmMe0Lrus8x37sAvWbOe/T3Ae7IXbIohsdPemD2BuLjnh0q+Wfk3+z
8YPxo3r/5N+Uz77DQ2++aO0l2ps4y8PsP46dZT3uznb4fLGHsCfY3p7nHcQO
kd8evfe+b9onyWuqjnzzlSQewPe5+U4+nu2t7ojxBLzfN3O8/PLq78X+d/2x
oztX/kd16LSrd3TAm3fF+7MeSRyF948euH7m6LIsut+Uy3H81uFfeF70zxdd
l+tpT/Vx6teu/hB2I+Nt/c6bfbjoeSaupvpajv/oJYAzg+dv9tSCE8B3LC4c
vQLW//IiwQ3hJzKv1y4A5wGnaR7E4JLgTeYP/DzX5XrxqOhVi38mX6O835Qn
TgnuFdyyOObT3Fe+Mbhmt81rmPuLj3I8PPDipk+Dw5mvrfvgaPfncfP6lb8c
nd4lfyXbezkv+J26vs0DmudxlOd1lPNO9Dnu5Rlse4OHFx/3vQ1ep30b/K76
60e1h6sP8vG8jvO1Oxv/WF4tdmL9NtX/ia6h+svlA38wt+J+9fdUD/nKPK/r
PnVd6ldDH4ZxaFu/6dfHTsUfmPwyzetUnUv949ipzWvzYvZZjyfOVj9leQz8
4r+sH937JA+O5zPO/2Fe17xHzVulff6veErgCttPvhM4AzqI5SuBX0Yv2nV+
46JYf5DPmXgi8NPgyYtuaOahRbeL9Q/rnerHoAeW98H2vjj/936Ue3a2T54W
8c/Bn6sHZTm8l3+a9XS9VZ0Wnh+/xKMvupj/Oa+rrqa8ivI09nhZfV/LD6K8
5pPrffZ4H41XrN4gdhzrwPLQwddYD4b3rV2VeMzqITTuU7uS8mpnBufWbk6+
muoQam+Gh6n9nXWm69P87/3LA60+RHWx35nt0Z7FPr08/68Oou2Jnb/kp28/
7uD5x30O1fPpNnb44m8Irn/c51HeddZTC/+76yvKCa91sePxH9DfZ9If1c24
8Ox6yufO+vC471Pafbj3Xnw0y22eMv0vrEPvZpv1rO2NHsmST6nrrK7n8p5b
n/CExW+qixIcx3Juz/bYT8nTZn9xXdbRrrtv7LS3+lKJA3D8KM+r41TjvdlW
r7Xj5av5v7hb8kP5w9+4bZd8weVf4r9kvgp/svkjnWebH2GP9/arHGd+wr5q
PHh5fxxn3iyPkOua76H5j/f40I2rP7tzXv22Z/J/83nV3izf+bW04zDtbjwT
40vwDOez8PcXPLZxVhmfnU/4TuqXrS5C9+t3Ztvxf/veH/f77DhQf3PHz7Y/
+QOq62D9eL58f/G31z73/SjPu3F5/Mpb5r3ju+w6pfpJP8n51GdHx0Dece1L
ygl/0nUJdjG6hKw3sGOx77N+W3R28d9V/5D1ReIjq/+r/lD4FI4v/OgHvrM+
j46X5enW/4B+Ru1Fxu3ofWtH8H1hf1aHq3hl+RnVL2S//GLmkeNcXz7IG7P+
zl/lV8TuWvRuYlcv8UGNW2xc3+XU/2jW1++Ldu7pj/DdNY/9r/I/z5X3onG3
6OWHH6TudfPzUo/EGyzjQfW2orPZ/ATLd18eQHACf1nnL/zp5FVY8v3mZ/kn
5/267pc38KfUN/Ea1U2Rv1tdVviy5eEWT8q6XlwBPym4VvNS7ulAx7+rP7Y6
YNFH0I9cXRPwsMa/wx+AL9Z8EdXVYlxNnmnHQeLGGIcbX/LLeZ34UHTpfH4/
nscdf3mfeP/5XsBJdvKSW1/Gd+JbwoNT17067tHBW/JuvJV+5XnzfpUXnven
PMTqxsnTCM9DP31w2IUP2S28xuJd5WeU37iTl+ZJ3lNx6PI3khdP/BlexP15
3tPi+NHlkU9RHL86FuEd67eJjg58a/jZ8oqj4yLvOjxneNjyucPDvpByl/yO
3zz7//KhKZ9y0evhPPMuRsdH/Z/wwE+mXK6v7o33I38oPPLmK03eU49v/z9M
vduO59J/36cfXkh/HaU/n4aHf6L7nBce+9P4wdTNeTDP0/9W/w/v2Wc5Hr+d
ukfx97HVb/dZjn86tyfq/+p30fy3ya/rPn6k+6nf/VmecR97ejPo9zD/7PC4
5Q91PGTcqc4/41/ibRbd+PDKFh0X/i+vrvk3r8/zFn/STt6B8tz433mD+YT5
g3VI8jY1L5nxY8yz5Sm+k/I6P72d896d5WrvcL/ky7Sc5KHqdomDrb+qvCz+
b75J7G3s+q7fWf8nD7u4dfHs6jOyrS4lPJzPnr2FV/w4PGP4x+g7HISXzD46
EPCiDzdd6OqKH6IrHd1xdMm/QZ88utMcP9626k5Tv9wPfXOuQ8/6+Nt5H/5H
H5ytuuf5/5Drv53tOU77Wl/O/2fu6/63875cp842/1O/6Lej2+3/D+f+cdqh
nnva8Tj14jjt+2fP/3q2l3r2uR5+9ez3iudX3Xp49PLeqz+S4/L2w0MrP00+
W3n48Nui76EeDDy14t3FvTkeXVnX+c2LWZwDHGAnHr55nBb8Jvxtx/c9uzl5
frR3Wd/BKwpf1/XftezXvm98Uq9rXFL4us6nze9Muc2zFD7Eknfovexzn/ZH
eViX59b1NPMU/Q7fIvk2lzyGzJfw5lnnZf5sPHXzdxXnW/RLohchjretQxec
L/6Hltt4B9+70/N9NW6h6+rgGUu/kDcG+wi7JM93iY87znm8h7zX23tXvcXy
0+HndD3Y93jR74PXHx69epP3ZvmPwpOSl5d4yvKcjBNvfqLy4Xn/6N++Z+Gn
9/kuejK1f8D7qmuXvIjaRfxfXbX6n6uXhH2EH6T88I7X1beOnhN2U8d188RE
z0t/54fZ7t03/tzyiI0/+zjtq35Z9dDAcZtHuf4Ujh/vbIt3V4+7+lHV0Wae
qj5V9IEWfTaed+MU3573aZ50ztd/zLxa/1Sea/MIydPPvG1eoLuzXOf55Mus
3lvj3rQfPpnHe512Q3kQ0anTv7ajI4a9sdgpN3N9+C8LL715OOt35Hng32jc
SHlCzb/OOJFxYVlfVT+r+Uiaf6R8KPwF9eviL2fe2sa98reW+Dn42uDorC/h
1TUvWnh1T2J/LfF7iftz3m1eiuSbWNa55cG9k+tPp11vzetd95/ONroq9lvy
T6vvjl7VL+f/+jN/m/YnL6j70Wuv/ov/R8+mOIZ+jMRVNq+G/dLnn33xldrV
xWdiLxhPFzuguiHywmMHgA97/f15nfgW5cRuqN479Wn83WL3fJD2Fme6Me+j
PfTR3HLfBWe7s3N+4h0WnRh42jvxfcWpeE/U3en32rg+3ut8T75/vGfVVyjP
OnnI5fvCty7PpLxOxtOOr+E1OR+UJ3g51+FnL9+L8Rr+xnHqUV3A5Ms+7rq2
2+ruHuf/6gSnHbb/d7Mdzi+nsu18gF+t+mPF82jvNl/0uS32bnlM1SljvjuX
+5dPy3Phep4f9lB0Oj2PfiDP+g4/aI//aX/v8HYtp/Zg9B60kxIfepzn7PHy
FWr/Rc940SuuDnB5qOGR2v5L8/wlrqx8yvIZux6IHrB8rfCYixcturJZ33i8
PFPsx+a/u/bsrXZ0v8cd/ehFdwG7Pc990c/eK/94Xr/wlhl/0v/2b/nAHefK
D856sTxm7erUm/58XL5u4k6XPEuNp028beOMLb/rzY/ndc0fqq4J8bps785y
2D/MulT8n/O43846uesW39vG8yZv1XH8DV6f/qk+9uO2I3HT4rqJfzZeufHa
ae+SpwvdlsaHp78ab+x3mPh169N12MdzW56469DgE0u+rsY7B//wfnefff+D
3iflLfl0+R76fkcPxvxowdvxKx2mHw/y3Pdw9aVeWecu69qbz95WT37hx3ec
yLjSeI3jPKdlvgye47hVu2YvLxnnYRdgPyTOYeHlsX7mVz5s83XGn6D/lS1x
XKzX4D2he8169PzOfuKltJ93eFnqaCaOa/Hvlo9Wv/lOvGPzZZ6qv+Bq9rHz
WVfAP2r+zPhD6rfQr/DerO8uD431MnzIxBXu4SULfzD+AX8/mtfpZ6reNrhJ
dUb4HzuZ95Xry9ffyzv3cs7DXuYXv1d1k5uPXf/DT3M+9vkfcv/60+DzlYdK
HCr6uWfn/YxXBEen36vT++az7+P3Fp16fy+mPjy/8l75cbz7ae+Sz7O6zT+b
9/E6ntfe+uoP8/olr87rsx2LjvLPcv++d8132LiQX6QdbQ/9QT0YT6Pbbfms
NxmPG4dZffh+N9u6z/mE+Sh87K7bqrfvtvg46/b353kLvss8dJz6sK0eW+M5
WH9Tz3fTTsYN+qH8ctYZXZ83rqY4SOOH+h1Uv/ww1zUum23zT/Q4OCbzI35V
5rPowPHb88/LD/7TvI/vf/y76s9F51teM3hVcS3mQcap5JEsv2zhgZcnEF3S
JQ/ZjXlcPAzcDlwPP/yGzy34X3TBzLPGfnTN5OFGr0KeLfho9CaqP2Gev+jZ
8r/6tehvRPeiPMJH8fuaT5DjyS/o+bmv7bj37Pt73+DG1rd8yeTvVDcOnLjt
/2S2E76n9YnunHkU7852VQdbv3b1aFpudErkoX4696sf0n6Xb/og7Ye3Cm82
ujPqzHAcXZfwkNl/tMevht9Mvk14wfCF4RvDo+b4tkUP+nv4xtv53+d6/ud6
+Mk9TjnwkalPeczs/2PjPV/I/R5u///QeuT+8J/Z/yH1Z3uS+2zbF7btP/62
nfff2/7f5/05/4fvZn1PbuU+t13/8O/zfrTnhe7/Ze6XB8758sBp97fzOtpz
cqf/aN/35Ytn+3CvP8OTpx7w2nk/0T3nPeT9LI/c/K/oJO18L+olNV9r8ria
7zf8l+qJMz+Ud30Uf9Wj+H3MX0o58Hx2+M1dL1a3pDoq6umw/sSejw6qdvyf
5v2q/+U6jfjL5uP5t3m+dgHrbeb7rq+zfiiPy3XC9vP/5pXhh/2EHYddCI6L
ndb47ubDwb7GPvxR7ld7+pXUo3lqkg9pWa/+KPXBPq/frHkV6w/azte+xt9S
vmb178CVa5fTb6/N4/Jf6t+gP6qv2bjq1Kc64OKT1bGILp+4OOuE6ntw3Y1s
g9eLj5a/FJ3o6i6KG0Y3WzwXnnpwRHHk6nOCL+7lEfwk5xVnjo6meQrhIcNT
Dg4vnhwesvx6tg/mvrri8LXRAS8f//N5X/XC0276Tz1QcO8dXHvB04tvxt+1
6OdEj9H3r/EJ1+f57kcH3vVn8xZeTb32dOR3+GjVTTjI97foJnSd3Hjr4rvl
78Uvteh37vDndvOgVr8o3+fCi6teEvh2/b7Nwxo/qfhFeWfUFxyAceqtlL+X
V/LdnN9xMDwHxr/FL9x4fcbJPR2R5lEsvl7eWnVaqldRftsrqX/mIfv5esq5
OOuzvL/FubptHH/jkF5O+7ttvuTXdtoJ3vKLXE//VKeD+b74T/ur+hHVlWle
wcRXLzhQ4qx38+69OssT1yFumuuKg76ScrefeBDx3bzP0d8uz8HvjPGhelrR
pZI/XF1sxkfmufhxl/E/+/pBmZ/uz33mOeK+jDP689yaB5j8FWyJ0/p67hNf
dJDjxBkRr3WQ848Tf0R8F3FI32xxUQdb3NPz2/4/v9uOb9vn//Z/ti9t2+Pt
vMMcP2a7/f/P/P/P7brnt+MvZcv9H/9llv9P9v8694nrOkw7Donj2onnatxc
4+qIP/N5Eb9Gv381rzfOLfFlPuev5nH+Z+v9eG94bnlfsHsOEgfWfNbaizlO
+cv5zTONvRR/+ePYl9qVd3aOhz9wGB5B9eUbh9l84OahIU4Oe/Kz2T76y++Q
8/P9mCeG5/HnfE+8Fzw3vuev5v18Lg/m86GfzYvT83guyfftlv/DI9C+Lz+D
fm9cBXyX2LXavR+lnPJawp9w3CXehPUN4++1ub/olL8/r29enMVuuzT/P66f
pX6eq/kfexW7qP7O7uN/wO/GfI7+b/VZyz8/mvviKvjN4+8WT8E/n7iuhb8L
L/nW3JfXjF8g+PiJ4MpPg7frFyAvH7g2uC94dPIsil8Fj1Z/ILobi+44/wcv
Vr8hOhjqU0S3vPidOg/NR/jlrMeil1BcHX9G8gju/a9eQ/no5aXv6ToEDzyK
v0CcP3z45iXU/7GjF16/gXF54aPrT+rxHR3xR9n3vukP/SK8j/Fv6WdJHKB5
iHb8I40PUM+c7Sez/KO2l3Z+Nsunv3jP93T6zSuZ/KDNl9n3E9y634F5N/Md
PBe8G1wb3Zfq2qDjrw7NV3Of+qnbH30V9FvUxQnOzf38P7r/JzquBBev/28Z
T+KP9PnluTX/5YKfE9/RfFjVr2/eR/By4iCSx0xeVPTF1PMgD3LyeakPnvgm
8XF+4bGJg2fdJS5eXhrrN/g6we3F6zccXv88uH51yNEjafxy+HLVJTHfZcrx
fOZP4kSi06g/IPni7L+U6zp0W88a58Z6NHwh+X3Jn2l8SuLAFj0C1r/g7vwP
7lDeDeeDh2CPlB/yVs4rPlR+WfQNF74I1+/FH5/J9WxP5/rtfrvxCdWzbH6e
4ufgccmrs5Rf3LE6kI2rCI5aHEFcMPrKix5l9Gerv77oX1Q/PTzj4hSLjnr5
t/UjnM95iWtZcMvik41TaJ7U4Ik+p+K1xXWpB+9Xz+c464w9HW/WFzvrFv0n
O3EIrg+D47C+aj4x1pXmH+v6C78D60fWe1mXuy6Mnkv3XZ8+mMfFb75M+ZQb
vMn1bnGBB7M9B/XvJM7b9WDi+hc/A+/7lRyvH7B5wXjPWJ8V/268XfHYPd3V
HR0Y/4dv+bOUEx6o4/7vd657Mf+Hh1ueGr/qk8hnxa/MOnO7T+OJbSf+8uis
Wk75nc1zQbvp9/IS6deTue5Mtl03l+cc/Hfh4dPexqO/lfv8brabflhw4sQn
+v7Uv1Hc/kyu5//q/hZvb3xl8/GGl+px7l8//u9S/9gt7c/yK8q7lA/P+8l7
hQ5v4tEX3kXzgfP8yg+mf9pf9EvjcsFj6J+d+WqJc038bceb+iuXuLniSWw/
nufVn9C8zo8zHxk3BJ+guvHVJWH+Zr6+mHZnPF3mz+pL1I/H8b7nPI/qQOR7
rq65OkboEaKHE16ufFziw1kXZN1jXAvrqvKSiCNhP/xd41eiY+h6IHwl4w5O
zfsv+Z1Pz3YYt8B6Bv1gvhe+U8YxxmH6lf4mfpnvv3rr+LeaF4Ft86fkfTUO
tjqIvI/Vd2n+kuC8tae0C+InaD54eRzJM38YO0x9uej9GDeXeE/tkD0dnL04
+PKD6qfl+TQfBs81/lDn4eiXVzeKn/oovK98D/nf9zx6buK7N+e+esjbFh2I
7i/58q7M/+W95/7y6KlvdUgbR/XGbH/zrmhHVRcFnYcX59byk4+h9pX2D/Yb
8xX+8j1/e/JNVAfH8RQ74+fzftp9Wd83v1v1Zxb9C/iUyd/mcyFuIM9P/Ih9
dGOvzvNOZZ84BHXmo+fd/OTir+Gl6gcAn0s+U3Hu4qM9v/zY8Grl62crzhr8
u/nZ6w8xj2XzqUfPpXrr1bmrrvHCr+V7TXzjovtenf4+92spJ7hk9e9938gj
EZ1ev7fwP6qDX90P4/N+Pa9b4oqwJ4NLltfb/A2uu5oXON+J48v/mPVZ8hC8
MbfVZXScaVxvxzX0k5LvUt4zdsTZnftjh0S/aemXrf+sJ8+D8aU4YvLwOB5h
h7ya84o/Mr6V51V+LfjQZs83j4vrFubX+J2rDyfO1uPgfMWHqn8Svb4FJww+
tpRTvY/iFNVzabnXcn3y5GiPsN4pv++tnfrQ711nv5Ft8RLsFuyZzn8/yZb3
qOvul3Ofo9Sjed66fTnlFk84uXN/3h/ev5eyX94keog8r/LAk3fI9V/0/hY9
nti/6kmUVxE9Du3l2MXytqO3rP37+bP3d3ne4UVX9xkeifyW6EmXBwPf5TB8
F69LOfKZ2II3Ftf8cu6rcx5ddHltuY88qS/nvrrqtOOz2R70scE35Y+HZ3OQ
/+ETyRPneUVXRV4T66HqsET3xfNSXvOtHgQHcNyKTuiiD3Y95zXuIHlKjzsu
Nn4heTT/f+tvJE5FXKd85drXv8j/2Ok/yXnVdQhOWz5r8wXpZwQXK07GcfIv
EL8bv++SV+6NeZ12PXjC2/M++oOjx6G9nzw/i044ccPV88s6Tzs3eaTUL4/O
c/PzyNMgn8dHsz6UY/nJO2Uc2q20ozrqsbfVLeR87Nxrzy7/ROonrwO/Ptel
/+znrHfUu74929f1Av35NPWo/vTTXM96Xf3H27Pd1FteTtZZXX95v4+efZ+j
PNeu9+yP6MTbbzdn+epJVg+T94J1EP3L+wrv4Xy2zZN+KfcvH+Nmjl9Jecnf
5jqI7/y/5v+MP813Ly5eHRZ+1ccg/g/7Gzsn+b6197o9n/OqQ8j8UJ04tnvz
BuN6eJaNO6tOd3W1tIui99fjS77w3u/qvN9x/NvFIw/ij2++6SXvee30nfi+
3bijHV5A8zEvvNTLuV/jwaK3tcQBbuUf1o9wPeXQjsQLth+WvOuNd6re+NW5
v+Tl5L3MumbRCezz6LqM/tqxdxY9RtY3x6kv+9VV3YkbLe9j4QFj37DuqV53
9Z2wU/jOX8vx6txUz+V07kf5rMMYX8Bh2C9eif0E7vJyrq8fsXh215XlQZ/e
uS71XfI2Fm+ovYfd9m+5ruvD6tQU/+D6rfwlH9X2E8/B7tvT08ZvBZ6zzU+n
aoeAu1b/LHihcfnRfV70U6orAs6JngY8UvjMX87j5h9M/run4U2je/Hc//V/
tt9v2wubbgQ6EQ+7RV8hOhzV+ZCnut3XfIXRa+B6+aZb+9B3+B79CnQj4Ll+
N8sjLyA8Wniwj8JLBW+mXx+FFw6/Vd5r+LnqkKCf8dfUI8fVr9h0NdDzgH/b
/Ibyxnf0dfTrwNOO/gz4t+/h5bx3ycdZe/Zp7MTmIVr0zmvns17iO2l+otj7
6s/wfO7P+/v+x971eynuH/0d/w8Pe4lH4L2IHpE67VkHVSep+Reb/1Q7vPrz
iTtwCz96ey/haVNf84F+PevLe+4232HzXKrns/M/PPTy05tvc9FH+WLe33gL
nkPbzXPbiTd5VP9Q4yvK96/eVcdTyuc43xP1+WLeh/rS/486Lj/I+Yln8DrG
58Z5wE9PPET9XNWZ4volHuRuyuW8z+b5rhvJ65Q4ifrpjEPhe/9w3tfxIuu1
xZ+V9aPHg1t0XWn5Wbd6v+SnavlLXuRb2U8cldvwVJZ8UNgZ2DfYd+Dz2EHl
L4KXv5kt60lwtD2ebvi5zaMnD6T669VLwA5m/QFuemeepx4J5WAvcl/i/Xb0
muXBgrdG31pcGRwcXB289tJsjzwTzoueY+NSxV2rk/3ZbJ/5D8Fvib8Eb/5k
tlddcvi4X+b+d2c5xsnemu0p39b/Ew8rPye6Iz73HX0Q12Gv5zzWi81rxX3w
p1yY9Wh+Jt+Pm7k++us+j/gRDuI3wC9hHDLvF88pcbXql0fnpXHH+lPwwyRO
2Tjk8J2qP2Mcb/0Tjevn/eV63pP4U2wn/o3yqVJO9QLUAeC+8MXjVzrOd9j/
vU90ddgaF984/O/m/+gKPJ88segFsCVO33ysf57tI+6aPKvms+W88t2bf7d5
d+mftFu/HXz48NH0F1aninG9PNjiFswH0clqPmPH58u5vjzh8m3Lb6v+2F4e
wuIE4AflhYKHVD8YPKb+Hc57PfetDk71TOofupDj5G+pP7981/K24xeuH95+
BN9gfq6/vfN4carzaT/lg3Ml74bjOLge2/IgGz/EuF19heazix7DQcsHZ8x8
7bzVPAo7+R7Ema+nHcVdb892PE65zWPQdhX/PAhvdYmfuvXs/40jYrzPfPE4
9oLzTvmu0TFTp4E4HsZbxqGvn711vI4eCPv45b/JeKgeDPsZHx03yTddnQvG
zeipWX/mga3c53vf6Js4/2Uc1u/P/ILdV32S8ofv53ze5+qI8JzCc5Z/8GD+
3+euPch7Efza9y16E44/tbPqB6meRfNTMe5XR7DxhVdnOQt/JfGRy7jH+Bu9
Ss+/OO+z6MA1/pRxEF5789NGx652XPOQ2s/pr+rnLf6Fq/N69Wr+ha6T40D4
9Y6fzHuvzfOs5/mcR3817qXxlMyLwbf1H27/i1vjtyT/JfENO/kTjLMOL9T1
cvL66ae9NO/TvOXyFapLgn+9/NjwVFmfm485eQuPdvAE61G/8qUcD99WPPLq
vG7JR3p11kP+Ae24Mf8/VT/Ardmu4qPFAcvbL64jDhN+hjhocF35H9w3foej
4sDxR4hXRjdcPAz8CFwLXA6c8Yt5vvoP1fcOTn8heD14of6E7Trwf/SluU5/
Av6FDX9/IfrX4vbb/y9s/o4f/nvun9zw+pPoaG/+kYfd/7+3dmz7J9n/X3Mf
v8r3/3Pe78JWD/wt6HdTP/XEv8s+1/1tlk99T/59/k/9LuDvob1bfR5u///j
f87rv08/oQ/+3Pb/D6nHw7/N/R/+9ux6/ZB2cd73O+Vx3++/m+3yvO9mvb7/
2yz/+/Zj9NSrB49fSn8O72n9W9FhObGD27N9Lv4utrzHfb/VTf921vNh/G5c
j+4LeDV4855+ubh8vq+T9U89nOXSvm45r7pMz6X/8NfhR1APqnpPtCO4vOeD
u0fXZy8vr/NFdV6Iu2B8Z9u8yMl/XH0W+U3ogMHvTx6jJR48fu3GkctDenGW
J/7ceEzifeEzHs196m2c0dV5XvlZ5uNOvt8l//Zbs/2LTgo6LL/N+dt9ytOs
vWOcxu9ne5c839t9jLNrXvLo6xjPBS/gzVlvead/muXpD3jj2ddTn8bbeB7P
i+cLXlC+xSvZLz+leArXVxc3cdKum5Nvz/VN+ULR1/B8dAWb37HrIuzprC+W
fLTRWW+eWPGP8tWuzfOPs55yW10R1g/NC9V40sbpNr4d3Zvoo2j/n5/XL/mo
r892LXlvaW914ZN3t36aBTdh/ZXnIg7D+c2ndS3l7uk3fjjbY3tvzvqp2xKc
/TA4kOfVf0U9+5z39ER4LuVh8RwbB9U84M0/1ny65aft8S6LBzcfGLgj80Jx
0eqcNK719bSPfdbrjQOqfkrzjb2Z+/H7Q8pvvDT/Fyel/Objq9405TAONx6A
+9FvwTV8DsVlk4dUHJnxoO89z5vnRT++nP3y+JonsPrd9G/j6cJvtB68R7ez
X12A6mfFz3jQ9zW4lfNB9TX28uhdmtfz3h8GR65fuHoC+tnin3UbHSZxw+gV
sd//i/d2/On51v/OvA5/9UH8uepKJc+FcUjBgY+Dvx4GR1W3O3gv+tLqdqNf
jR8OP9tfnr1F51u/XOK+uG91p9HLrj42+tvf/GX+T73R38bfh/42+uPW4y/z
PuiDozOOLjj1936cF73v49SXcg+/2dniR+U5Jf5N3W38h/E/V4/LuDzwZ/Bx
cPbEp1Wf6zB+5Mf1Z4K/f5Vygufj93RbvP6LWe6ST+VB2o1/IfF/1RU7znvf
vNfqWrPfeb/xdYwvt+Z+8+uIL4OHMz5FF1C7ofET9RuVpxG7+LD+guLf1Kf5
hBg/mY/eyX7zQJQfHp0zceTO39WTfDfl7MQF7+WbZf0iL4p13LbeNW9m4t44
z+OJ+3H9tpOvy3VT8l2bZ5N1Pnhx806D64L/8n/i2srfBGflvOK55m0E14Vf
F71idWjvp/zoCzcfp3rc8As/TT2ibwsOrR5z+ac7vNSj4MS0h3LEVRq3Rz/e
2DnOtvoYwdXVxQCnYb3O+h2cH92M4Pnl48vTB+e/Mu/vc781620cXXiIJ/Ie
mI+V/fBPFxy+/R686kTOO5HnIY+1fOgc9324N7c+17RDXib9uX0H+jHyvdR/
UF1l+eDRLapfhO9U3I73gedXXRX2o28jfgVudTTb5TgF/gS+tOFTy/iGXy26
KYu+WXSQLTf6IeJH4Dzbb9E5Do605E/mvHeyff3Z91XfZRvnO06rm/LvKf/0
rId4ZOKrbc9P5/2Mn0y+Z3GxxmFWf415o3gm43/9nN1v3CfzUnm8b83/q8+j
Tl31sIgDT55Mdb8zL6oLBr7KexgdOfFg9MR43+j/H8/jze9eXNl93r/4kXf1
N7f/vf7Hc+v3cpj7U8/mHd+LTytecDL1YV3P+hp7qPgGOGjjaLv+DV5WHom8
z+g4lH910PV04jLL3xCPKl8j+0se+upPJk7U+zXfXO3O4hnhgy9xntVfLs4V
3Yna1xx/fOf/+z7iDv0fO7p8ZvjW4e+o/1E+VvMbcV7WP6xzDrMOd53UdRzb
rv/CM/d+5ZmHdyvvt/l/+J9yy2Omf1lXZR1SHra6zl2PNI9j9RTPZoufoTro
xdmynlnyUzbudidud9ER3tOf3dY31WUsr9Xxq7rN0S1bdAPh4zDvlR/6+k69
tvou+oWMk+CgjLPVLzzMfnWp8f+hQ5J52Pm6+Qu23zKeU+/mAY7ekt/zxZyf
deaiz8S2/LGL8z7F7Zc8Tmdzv7wHiz548XSeE8+V54MdmHlZvcqsa/XH4pdE
L7b5MJonqjpxp1I+6+Ojnf/Zj91bHTp5X9ENlEfF/9jlyS+16I7urZ/Dn3I9
Vf3R6iiG/2U8WfRp1GFpnp5787o9flXzB6kb0zgx1qfN34Jd1+fWfCY899qz
+OGrG0jekOgbGY/ePObxM+/qL/OexO+sXd/8LrU3t5/rnDdS77bvndlfxs0f
z+O+l5T31iznSfpZe773o33lOaY+HPf7jV5T1yvVg3K8xX7OOm7hbTJ/MP6E
R7Do4VV3kfGNcYzzmVfxRzJPVrcw/pnFDxadPOfh+hPfyv8XUi/q3zyt1dVo
vCPjNPMrdvzZ3Le6G1zP+P2rlFMdyvrh6N9TaWftluYbOJ/r6288l/sWV62d
UR1Pfj/J9cV5Y1f5nFvPvj+135LHR/vtXI43/wP1OZ3yTs12Fh9wPsIuAW/4
bY6XVxO9NPHe6r2/M6/f07WWz8W8FBxKHC84afPIiXcxH0Wfq3pcxX/VM/hk
/q+OQ/TUjorjge99kvvD4w3Pl/IWHYjEczsv/qu8a9VRaJx69ZmjswC+bf62
6D4bT598csahwwNMHsfyG+U/blt0FeAZNg+e+SfDQ7Ze0QWwXckXKV4Pjzr5
Cemfp3me1dluPkn5jvz/6TzefHq0x7x65a0+nOWeyPP0/+jPNE+nPHD2qW95
nckvCE/0hY0fCk8Ufiv8b/i46M/A0+U8+KTqW4RvDu+ULc8dfirXw7N9Ifcv
v5Z8h9T3+/BbuX+3D3Pftvdk6kc92C9vePlutuf0j5xv3tTkRV301qMjdJSt
73/ypKpr0e/zfrZ5n59mvPC9jv9Lv0Psevf5bj5NOXfm/+q9ZLxVR+f+LM/v
kXHxwbzuab5r6lV/ouNv5gv9JFlHVcfiSfxDJ+4+e/8ofpgnWX89iV908YdW
VzH+FfV8qp/Z/6vbyDb8aOZp52/s/Kx3i3NU70u7i/+xX7CTqrPG/+eyjR3U
PHYHxWmLY4Kr7cSlij/DV4XfEH0E9TI4v7hfeEnlSTW/uvns8n/5VOpucB34
6qfzPPPFEY9Znevmv2sevOCc3EcdEMovPgpP5f48fpDrjOMHdwVPrf4H/dny
Pp/3Ochx+T3REThM+4oT225wZXhW4XkRxyvPJnG/8pW2+78EHys6C+z/M//D
F3ucLToM8Kvgi1HONzv7L4XvhY4D/8O72uNnHade1EPeGnw19CW2LbwvdSTg
hTU+OnHW8JjgT1XPXF4VfKnwu3y/v5zHjXPO9+B3Un3x5lPqdxf/k7zp8vDL
P4qOpuNQdFhdnzcvWHUiqk/Etn48cI+ua4u/smX83taP9cODlyy4ClvwcHAA
1p9buc0Hol+geAzr1cTTLHzk4P/F24zzST4P16nMa/id4bEEh11wXPbBh8G5
WC+fn+UufvDX5/3qpzY+lnXz9ZRb/g18EXBk/OOd9xtnhX0TvWvsh9pJj7oO
Dv6r/RadPvFh7LryuD7M9sZsl3ZO+F5tT3XHxMvTP+LItaPCd6ouvLgmPITi
qHv8ueD+e3ltmndrl5+SeDJ5LfFH+T3zaz4gxpnibOU58j/jUPyOx/E3iyc2
TuNqzj+b+7Nt3EXzXO7pvxSH63jaeIHGae3FZ5zJ/4xDjQM5lS31J06O59n4
sd4P/PPN1LP5ccALaSd4M/2K3Vzdh8bNlE+beDT91clLoZ2N/Vy+RPNpxO5u
HkHjnaLztszT2JXRx1JHBb9+7TzsVvjj8LdjV6g/1bwo4X1rl+Q4fHv1ZJof
JXaZ9mb44+i6sMWuNA4Bnnn48t4v+VXUYcPujp0ubyHrm/JpGgfG8zMv5Z1c
Fz3C49pH4QVpF1VPvvms2YbH4He+E1940POrL9/4mvInaq/xfb41z1vsK+qF
PYQd1bi3X+U49lH5DthXv5jnO3/Ej7j4+fAjkv/w8txvfPWyZd7Dj/qnXIe9
8uasj/ZT9b1fz3Xw8v4z9a+//cKsP/bTohOOv7z2QXjH6pQ0n0r90s3rGb+8
eUywi7CjipOFhyzPu/qy4F34Aap3HDxaXerohHj/4NWPik9HF7j4HPbc0b/A
FYsfnoj/4dEejg3eGRwZXFf8N/rg1UGufwG8l3KLd3P+98WF0YMAZ/7L3Aef
rt5CtyeDT3OfRV+6Ogvxr+jfyHtQ/FW/Vt4rcdXqF/Nc4z9Zyk38hH4w/BTU
m/cg5+sniZ/N+kRHWt4I7eW8+H+e5n32ePTM5f1nXWL7q8cTfkv9e8aphNd/
IuumvfVWeT2nwtsxfxL/M041D090k08l3kP8vu0Lbv40z/tEtvohE+8irp5t
+7G61c3L0DxMR+3vG7N9zc/quN98vJfnvut+1n/Nr8w8Fz+4+UvJx/7reVy+
GustcA14LI0P7/qmeqF7em/sY/dXr4L1U+2Q8FkWvkjzyoHLV1+teejOz3o1
35z2E+uC2n3N53kj265jrs3/teOSj6m6dPJ0sFM5zrqH9U5wPvG95pmsPyG6
mMcpt/ap/XEj7Wge1ttpX/nfiYdsnqMlD+HN2S5xzOSF3dUFKe+YdWX1XJOP
1fcFezn5tpY4gqyHq9N4nHqpg3pz1nupf3RT7L9LuW/WI9Vr7/u9fKf9XhsX
Gj6Z/dV+2tN7bFwquAXjQvla1TdivCgOi92e/DzyKjPeifPCmzzKFh0j8FXW
C9jzZ+Z93EfXiXjV+ik53jxA5Y3GLyrfKHlVnFfhLbF+AGd9b7Zr0X+kv+if
4NmN/xFvp/9Z34Hb8T/Pb4+/zXvUOBPe26ybHW94v6tTE72bXb3ixIvUX2J+
tIynS/nZVn/HcbZ+3sbhMO42brx6L3s6rfRr+YPVp2HL93Uq1+E/aR4wftgH
xO1hdwRHblzbEufGe8773/hb3lf0vfJdu/9utnx/5QOGx2u+xsYvNP80/Uh/
Mc5seLj2Su2Z8nLLg8S+eW+WX/029cVo7xup944O3F4cn9fxa1wM9addzGsX
crx652/N99H5jvnrytw/6PddvDj/a1903k65Hmd82LGX+O60H2r3NB9Jvld5
GcGdtbOiFyw/oXYYfl5w2vp/w0dg/zDHxU3hIVSfe8f/LB+ieUqybV4Icezw
NYyDo9zwQ4qLqzvC/XfiLA86DvP87uW86kFXR55xOHk4mwfT9zRxZYsuNnFj
zRvAOFsdvdpF5/J/7dD6zf9fO+r/AXFcJ+Q=
              "], 44100], "Preemptive"], 
           Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
           True}]],
        DynamicBox[
         ToBoxes[
          FEPrivate`FrontEndResource["FEStrings", "playText"], StandardForm]]],
       Annotation[#, 
        Dynamic[
         FEPrivate`FrontEndResource["FEStrings", "playText"]], "Tooltip"]& ], 
      
      TagBox[
       TooltipBox[
        TagBox[{
          {GrayLevel[0.9], RectangleBox[{34, -158}, {58, -135}]}, 
          {GrayLevel[0.3], RectangleBox[{42, -150}, {50, -143}]}, 
          {GrayLevel[0.5], 
           
           StyleBox[
            LineBox[{{34, -158}, {34, -135}, {58, -135}, {58, -158}, {
             34, -158}}],
            Antialiasing->False]}},
         EventHandlerTag[{"MouseClicked" :> FEPrivate`EmitSound[
             SampledSoundList[{{0.}}, 8000], "Preemptive"], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
        
        DynamicBox[
         ToBoxes[
          FEPrivate`FrontEndResource["FEStrings", "stopText"], StandardForm]]],
       Annotation[#, 
        Dynamic[
         FEPrivate`FrontEndResource["FEStrings", "stopText"]], 
        "Tooltip"]& ], 
      {GrayLevel[0.75], 
       StyleBox[LineBox[{{0, 0}, {360, 0}, {360, -164}, {0, -164}, {0, 0}}],
        Antialiasing->False]}},
     ContentSelectable->False,
     ImageSize->250,
     PlotRange->{{0, 360}, {-164, 0}},
     PlotRangePadding->1,
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQmUnVWV7z/vvTUlJBAQBUfU59O09qDvrdd2Wlfb3bam7aa1jYJoFEGD
IJYDglNHAQvFQiFOUTQOUQY1CkGMQ6klMWqEKEQooBIuFFAkxTzIJPN5+7fP
+Z977q0KhCpofW8la92633CGPf333mef77vZ+4DDD17Sf8Dhh7z5gL1edtgB
7zr4kDe/Z6+XvvMwu1R/TFVV99jnPXtVHAc7TH/uCfbPboazzjrLzut8h4mJ
CT7Vnfx9zIxuNcpbfOaFo446qp6Pfl827upsTItqZx+1i+Nt3KuX96pl6drE
lmY4+5dnh0u2TFQvfDSn2RzWnrU2bBrfrmm6UreTTz45XHXVVX7W8zCnPkJT
T4yH5uhIGG2O5XGbo6OhOTaRRozXxsaa9hkv5opkrztrnZP9lHRtvDkaRkaa
eXTNMToyEprWbvftZ++ggw4Khx12WNi8efPDZu9Q/7ur/W2GZQvdUNNnURhq
WpvmUJhv50uHRr3N4ALuzfdr1aJlYURzjK8PRyyoam7p3WFg9ca26dPw8XY9
LB5ckynomkJIs9O14YEFYcHAUJuQmsMDoZo/GJp2VvNrvdum3ubYuGppnLY3
VEtW0C0RvCEsXaDm88OKdc2GjzYrzTDQagrf86swMNQMw4OLYpf58+OojbBs
XbPkdXt01nCd7b333mH//fcP55xzTveDqM3J6qF1YwoF9vvfx4bRISO6Wloo
ZGM4ZfmKMDzithjGmmOlJsKCwWE/R8TVohVhzI7H16+wMRaG4bGJKNluN8mR
jSNxiKGlPsXoxET3Qyht/tJ2pY0h0spFGvmp5k2meGwoLDTRrtgAxaNhwETe
vyra0fCgUbl4ZRi349E19DsibMzj7xRVVrWrjP5utqNrfNxFyyPH4+MTje1V
VFdWFJ9FixaFM888M9+brrbqJb1VlOXsMLpxfVi3YTSMDg+me8aDQy/Z1/hw
WGCWuqYpvrtcPcOnDDp/1aLlaLGaSjfZE6H9xaaf+fPtLNrvomXrwvCyxZg0
sBZGGS6JM+Fs3iQxN7EIw+JYOndj6l8VxW8kDQw3s2oX2PmqEZE+O+N4LAtw
zFEWPY1Z27rljrRlw80o8O13hklfRjZ/6+H000/PGqg9orrrSvY3vHxxcgvy
KP1hw3hyl+YmR7HbIfS6IAyNTdSTFxgeXOjOZ+ny1Qw3VbzoTTOsGZjvTmlD
cySs7K/cl42Mg4alPurqjaNh3cp+O14ShkfHGtvSWMf5yKp+Px9NPk7Sn5jY
GI7A+NaMJo31pL6LwopVq8OqVavC6lUrw2K0PDSaxFoPG1YuieSMJqBvj9a6
21DGZ3Bw0HA63nhElRXb9WVrHEzWOeQ+fZG5vaQwA0dEQV/oX7GuI5CNhRWL
cCbr3MpHRsamDPO9GaAbQz9zrRsL65ctxDFmE1zVjxteF8bWL5vkHB9KbxtP
aeltoENv/TFeJ73Nsb6DbmVL+vtDv3+WePweoI8ZKf692dyQYvvSlmN9eKHs
Fa94RTj11FNnGsqmChYWWpprjGZzfjHdMu8gJzkWlls4W3LKRudltDmeCRsd
Xu56BpALB4emUlNfajq+HmezOAz0W8KxdEgaIqtZDD4H+5URZA2NPYSGoi9c
XYSi0hfOd4TUk0VO9oXjGY3N4WVuizU57fmLldtES9p+v7jffvuFtWvXPmiS
+OAqOrSIO+uGhsLQKZ2C2SkJzcxrTTRJzDwGhQlzD4tlYlGNzbGdp1DLrHRt
eNlC196CwaFKPnNs3bLoYhd4DhhVtdtUFCVxD3t0XL6O/GckLCWrWB0TmnUM
v9CjZhhZvdSzipGcVfQ8WFYRLWf7RD8wMGB+YiQNum3Rbzs/73K/s2pgccy7
jfPRIviMDi2L1z0AmftvtshdYQbt+fr8LLG5DyJwJDS4ELgMV9L/mgGktKxI
uKcmp5agunH1QE7E5/evLKS3MQwsLDLu9c00R5J0JC+TjjuyBOLhSHrLli1Z
cg9X0u/NIrCFXkyWswgmLDI0m03Sz2oqe31K0W60oy+LxLHxOMdjH5qVaS+N
xzf5eBdv39J42tNsvTJsumhTuGLrozLNeeWQD6ue8QiVTG7lwkMEP67f4rWc
Sd3/XDq91jvVw6I3nB++dspWP/urdO2YT4yFr58ar71lOoPvkzq978hLfAI+
7z+q+Zfp8n33P+CX3vz2i8LKU7fW0rTjW/4Y7rrrfj/TtZ/8/IZw6HtG/ez1
MyHly9/Ykkmxj0i5994H8uWvnRxJqXFmw/30rBuC/g0NOx2WAEyDhtckZv5o
zKXJqlqLiq5wzz35RvjqyVvDER+6JKrG7h32wc2Zih//7IbwtkeNirvvblHx
lZO2hoPfffE2qTjE7s2Iijv/eN9UVDTCXQUVprSuREAygvCjn17vt3629sZs
JCd/eyJcvOl2P9tnJkT9ZsMt7UTZtcOXbg5rf3VTahH/nvjVq8J3zrgm3H7H
fdX/SNfuKsTanfp+6vNXhltvvTd887Sr03iNcOp3rnZGaGvWve+06e1Kk7z1
XRc7TFoENnzwfQ+4IHzrtKvDD396/TOmELpo/OBHmuHs395S8NwIJ5lA9zvw
Am9rlj99GjUJJpP+VQXG6uG0M6/Fztqku3XiLrdFzp4kyu9sUd7jf3vDvm+6
oIR0OOlbE+GYT475sU04N85zwUW3vWw69L86zWx4yzN3JflAof41L7tDzHzz
u1d705IZzpeZGXC2RwIahP72vD/kIe648z5bhMWhj//cFZkhs/W5aZhPf+HK
8NkvjvvZS2fCzhe+ctUkdkY3316Cu6HLl9zuerjvvgdKlZ1iBvzDn1zv4+2e
Rr3k0jt81A8e3Yz6nZcap4berNf/9rgut0z80S+CuMOXxihh12bGmzmlDt7q
Luebbr4n3PKHe7PJv37JiLezybODA0WS+yc/ewXMGxmRGIQg6Nx6272zkhr3
eVPL9j7xmSv86q6c9aUGY1fc2Wag5jayW9l6dTah6iXTYXpRYtoIykzv6X9n
O6bLiTece4tisH8jkMuvvDP8fN2Npo84DpHw3R/Y3Ob7+PfGt17oZ7sk1PUf
scl92F0RoeFXZ98MBvz42uvu7k1dz/rlTU5a5CxOceNN9zgpnL1oJjx/45sT
meenpwnP+MF14e1HxEyhO7U7/fvX5nb19HdxUj5n85LyE4/++bqNvfH8W23B
w72+NqDy7/s/us7bAQO+TQ7TY+aVicgJswQSAM6enYhESuf+/g9tngSvIcL/
Z2r3jvdtCocePtpy6NOi5GlphgR0P9utMAtRp3hL/qZ289I1KEP854/cWj03
UZf6hRUrt1TPT9fsOLxm//MxmczZHyxEYhuc/a/pMFBPnuWyy+8Iq06/Jmw2
d4SNS2ToqJawccqqq8PV10TwKT81ffs5Mf0zJ14Z1vz4OsawPhbVbRlCTnbO
727xkEomZA47fOz4MQ+74Ih7w7+4MVy06TZPRJavGPdx77//gSS0vnCVZbdc
Az9EqRtuvMcdBO25fsONdycb3dXblPh99RvPd5xdd/3dzp/GP/rjl/m3Cd0d
GLRxfuHFt3GvRq4XwRAGjruMTMBvH/fpy8Mvfn3T2322v8khB6/xxa9dFZa8
42KFH+eYbAAurUs4zyT1e5vt/Atv9TbMumr1NY4gJM4/R4dJ+Yw114bvfu8a
p+6i0dvcbPAU3P/lb272rOOBBx5w0rjG3Ej0wEMvCtdce1emafBTl/ux5edI
yY8//LFLXdsjF93WmLbFuHOYVvfYaQ9HzJnmEDAoizBuySeYOI0sJ9OSDxcb
0WPZ8itdRJY0hu+Zs9pk4fWC1O6K8RgpEM+RxhrisqhcQ+PVY8Ptt98Xzt34
B+9GM86xHZrtf/CFvlLBr2284FYPxcdbADvgbRe6vaC5CSOPtB87tSnK9DRB
oNKi54w0xdJjLjUKbguXjt2RzHKOd+ceCk/pq/eHnB8MXR+uue5uU8qdbgT4
/m+ffk311uSbINPCTVjx9S3ZpK19Lfnw9efc7BzYdOHjyy53C6YZVo+5Yju4
IjjGPkXKzbdEmzv9zOjpNzdvd8kgaDheMxRN/sqr/ui2Q2jHvoACtozAQSbS
OvaEy2uJWoSImZNyMeRB77wYJ9A1HVt5ZvJy8oacPS5dw/w7PakF0ezn5ydN
yextQVT9n3QNh6O+MbXqKseTFqq90rj3F167ezqMvCoNhGxF4LMSMUUKGbH1
5HTjkMNa6fNs/9sTvrSybS0ePnB0M2ePL5wJZXcUqwSFyN9tzPE7wbbL85eS
AFtJGMpie7wh2bZ5qJwHvaX/ojxuT8oLgDn/gDOWKSbIF8huzSXMLMnB7DXp
4/xvwyOniDZbEH24mHe9f1OCcLx21LGXZb670l8DZBvfRqsF+tj+dW8Z8bTD
UJGXkVrQ8DHgamjTUx56RrkrcSyxZFF2cn5WTzknEYJ8kzi9KFUntNIzF+wh
Vvmd8jKLICm37fbIUvLNP1sIaZGi2kKJjHvuvT+bifk3jU7294iwjls+NC4t
k0nVs9OzjC6nq+AnrU3StT4Pymkx6P8AH/3IJBnXwkFSoXt6j0ZEH/6R3hpM
JBnSLkll3XqvchCYdknz4d1ZMdJ4dqKcvJTmlmxUM1pZp9VGwVqP+3mJHd9P
lgVLRkhuQ2gi0IJ2/n3uS+O+3LAYklNU+CL3aFl/TFG1JJnV4cuwevXdnBaz
zLZToo7wxTWWhXNSO9axUs20BKGyU4n0cukF/N7vjMd2S49pevAKvtCM1whs
ybNnprRWNThnppR4lS6CVBc30VJAwwPj/odEZs0Qpl/6Mdh2LkNZd/OPqpS5
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\
\>"]],
    Sound[
     SampledSoundList[CompressedData["
1:eJyMvUtvXUe2pbvv/R1qqPpuuMmG4LN76Z6FKgPHQApIWul0KuXX1ntToqQt
UU/qLVEPS7RNy3Y+Kk9VddkQUPwhaugnsMmGG3VRjm8A8wvGyUtACqxXrFhr
x4qYMeaYY/6Xo9/81z/9v5PJ5P/5//5N/uv//X8yWdr4t/9bzp/+Vm6/aNtP
fiuXnrf936p81s571cqXrWz799r29ndt/2Y9b69tL7Xjey9quaTrlriO+7f9
e7SvtX/vcX2e+fN6Pe3nPjzH3rO6vU29L+p11Md9l76t9+e6+UYt92jPs1ry
fpeeqj3cZ0PXPd3/+rRnUB+/c363R/W8uZ7D99nW/fI+Xgzuv1GPpz49D++d
/bN7tX2799v9Hray/b7bHH9Qyxnl3Xr93iO9z1bPUqt3qfX3+cNaP/1pibLt
n7V6Z7fafW7X+85u1/rZnt1p56+3sm3P1mt7ZzdbeaOVV9rxa9q/pu2rtV2z
xW/luxUdb+W7y60881u5+G+/lTt/rPsn77XyyP/+7bzft/O+aPunv+2ffNzK
z1p5tJX8sd3qmRxTyfELrbzRyivtvguVV+v2ZK2VN9t+ymt1/+ReK++28kE7
704rb7VyXcfX1J52/fRhKx+1/a3+6eO2TdnO22nbk+dtu5WLp61s25ONev7i
Sdvfzpv6/Bd1/85GLbluR9ctNur9d6inlYtn9fjkWb0+5+l5pqpn8rJtP1P7
qO/bWk5Upj62n9fn4jran/f5TO16puuf6X1v1G3eD+93R++FduV3fKH2fKvn
dzue6TnZ/2T/32Wh8xb+PVQ/7eE97+g9TvS+6JeL1t7Jpt67nsPXTf0euP+G
2qf+ON3Q86u/5Xj7jhb39+/f/F68P8pJ+4529F6n+r353nKfR/V+i9u1zHjS
xomJxoPJk1ov98/zqN/tqB1cz3PxviaP6v0yTjBeeXyjnbSf8bGNs4yTGefY
zzjYxsWMo4zPnH+9Xp96R/vXa3tyvcf1y/W63P+22nWjPhf7/VyLK7WejPv3
dd3NQXuuqx3X6v3dLp6feaO7nlLzW85f1PvkPfj9Us9lPecVba+28mwr5608
/Z9fP/G8q99rclXXX6/Pm3n4qvav6/kW9fx8b5yv3zvX8Xs9rN+Fv8d81/pO
uuP3dT/qv1e3c597g/7Ed6txZHK/3g97IeMI37fmf48jGffY1ri3UJn2eP5n
PNK4nHH70X9+X+wc2r3j8elhfe6Jx1e27+i7tn3F+5H9NfH4fK++r5x3V+fz
nd6o7cn91nXf2/W69IM7es7bg+s1rvO7u//lPfJePD/x3t2f/T553w/qduYH
vr+79X5+X9Tr32/i+z6uxzNPq91Tv2eez/380f7ne35fyJ6KXfC81uv5NnYr
9hJ2z7e6XvN17GDa6+9Q83/a/Vj3f1TPX/j7cL+lnzLOMM7SzzhOv2a81jzF
+J7xm3XX+VaeaeXnrTzVStZpXud5Hcg676Tq/7qVJ1rJPHS8lcfq+ZkPacdM
5Qm1g/ouqmSeW2nlJe3XOjP1f652X9b7OK7zD7fyQ70P6pmqvRx/v5Wstznf
f1z3ZWtvW48v/r1dt6z28Dt98G/1+s/qfVnPU9+7U62c/VbufNqu/6jtP9H2
f9PKP9Xjiz+07d/peVo7cr9/r9fvfNXqP93KhkO8m7fjf6z3pR3vzrXyfCtP
6jnO1fbs/LntX631v7uo/ZfVHu5zobaP95PzVnVeqzc4DPgNOFLDfXaN7wj/
2b2i88GNKO+oXrbBxcCp7tXzwaWCY7X6wLG4DpwsOCL4GDgaOF3b3gNPFk4a
vFN4bXDTR7We4NLU+3j/+sEbaRe4ofE87pN2gQeClz6t7dvm/Bf1vrQruC04
tvHchpcHz6Ye4drz7+v54OWHttp5DR9fasePbNXjlNTD9hJ4+vf1Ou7D/bdf
7X/9G86nfT/o/j/+Vq5u1eObP9bt1ba92c47sFWvozzwY73/5uC8zde/lW/b
+W/b/l9pd9u//UPd5rpNvVeeb/5DvY7fYZvj39f9+D3wW7Afv8f2y7pNP8CP
QD/Yk79iLj8Efokl+U3iv9D9qJd+Tv8Gf6cfp58PvrN8J3w/lI/q92S/Q74T
+wHkr6H+PY0bOZ/xgHHn0f7t2FZ7du/V7zvncx/OZ5zDj9DGP8Y96sm4Ca4P
3s55N7Wfcdj+ght1O+Pvbe33/Tzuq56Z/QS36nU5n5Lz5RegnneXWsl8xvzH
vHy21dPmpcx3J+tx7IjMx+147Ipm98RuwH7EHvqkbTd7ietid3Ac+6fZIZ09
xjb21jEdb3/xh/yl1fOBttv5nNf9Lat+26nYjbZruQ47Ebvtd3oe9vt5l+v7
yXuZ6Tye9zOVHJ+qHp4f+6vZT7HXsLv4nekfp7Td7KNd7Bv5rbK/+a92r9b+
lf59s+5Pu75QP6Tfrgz67+V6H55jdr1+H1xP+6g/9thC9V/Wfd2O04NypvPP
1feR74r3jb3Kd3ai7vdzpX79TsP2n67fGf0hfsCv6nfL75A/1hff6L4nan1p
90ptV9rj44xLrAvoj3/Rdav1OfL7tufFvs75vF/Z7Rnf2KafYpfTX/DnMt7e
rNtdKX9yvgPGfeaFO6rvto4zX7X5K/as5knmddYFzAP2f8fulx9+rvWA/fDh
YeD/vlvbn/Pbc3idsEe7ZbfHvhAPgPPx/3frEvgC/C72x/O+GYeYN9frc3bz
vefr9Xp9xgX76el312v/oR9m/321m9/9mtp3W/vvaj/tuqn6b+j+vI/r+r4u
6HrGv1XVt6jnZ/zQOJj5nXmpzWfhE/DX5v2MN8yzzJfMnx9qm/kWHGhF2+da
2fwgC/tX8DPIT5VSuHSHd6/X48Hz8A+w39vgrOCp9vsZn98YnOfj4I3yM8Rf
KBw0/tIHg+cTDjsRHp/nEO4cPPxOLYPzm5fBefYzgmeu1XLo97qu68EDwfPA
/8A9wSvP1no7HPGc9tP/Ttd60r/oh1/qflx/oZa57pKOX1U7LtTn7fBJ+dtS
yl8ZPxz9fuBnzHu0H+Rf+Bvj16PeO2qH/Yk810U9F+/jrLbxa/I7YBfzHvi9
GT+O6Hx+d+xz47+f6fxjqv9LXUe7V9Q+cPUTuv6E3ttJtfuknhfcmL/P1K7P
1S7662nt/1L1n9N9D+u5lnX/z/Rc3J/3xPqNv+O678e6bnlwXfvr1h2ntY2d
q/UH9m3mZ+ZT7LY2/y3Jnoi9tV7378pOiL3DPHpb92nz8rbsJ/Me57JvbOdQ
gpvY3sp5wjeMl3b8RttXg/3BZcCbhHeaNxqcVfiwS/DV8F3hk4JzjXBYcCW9
r23/jg/0fE9ru4Ijt+Md7nKv9hPsrLRb9ir1dfa08KjY0es6rvcevGqjHo+d
6PZeq9udfc9zPtj/Psa/gnsJT8J+tr2/JJwu38t11XOv1pd1/3ptZ97/zfpc
3J96vb7Ld7/QfTQOmB9rP0zWB17vsb5mvMFuvqz6hbPNPP54fDJPWP4c6s19
WD/491/U5wi+J9wi9jt8YPyA8sP5vXb430U99/V6v+AVrBPmeg7eJ+tx44+X
63XBe6gXfKCN+8Ed2M/6/kS9nvVF/KjMn8xPwgdjPzBftXk1dhv2C/NcswMy
v6/V87Mfews7F7tYvLTY1ZwP74x1CvazeHeph/MpzccxnxC+kuz+bv1yq5Yd
L4rnEQ9q4edo54eHIr6WeV5TrU/CsxEPMusMt8PrNfg81AdfWDyr8Kbg8Y54
q/BA4MV+37Zftfu0cvFd2994tzuUL3R+46ksXtXzws9t5Q71cb+t38qtQXnw
x9Z+yrZ/+uP+xxft+I7qWej85Va+e93qa+XBn9r+Vk5+bvvb8UXbP237F23/
Vtu/w/Gf6nXLP9X7cR77D/7Sjv+s++u8ha/j/Hb9gvLnenxLz7X8c70f509U
L8/P805/qe9pS89/UM9JeVDlhOv4Hfi9+X1/GPyO6ofpR62enR/rNvVOvqv1
cpztg+o/1LtD/e36xQ86Tr9vxyff13byfYR/zndrnhffpeIxFvpuO9yFcZHx
UONA+G8aN8MP032nGsfCd3P8iHjsC7U7fP+n9fjUeBPjrXCtHY3/O2pXxnHz
yxVXYz5vcDXGdeYh8JoB7zw4wtV6n46vaV449bDuZr3Lupn5+azKZZXgAMz7
+ONYp3q96+sPa5v1LPW8r/JwvU/8j/KP5nr5CbFbgq/az+d1+4d6Tvv7FPeV
bXBZ/K7Ua37bYV13pLYzf+AH3Adc+He1/jwf5e/VzvbH84e3Rjvf1/Mv6z7U
w3tr53V4tfmO3g+Ogn92quez39d8PNpF/+I9Gr8yX9D+Zu8HvzGPE9xpbdD+
Y2rHl7oP7eZ98fvCs8Mf+EH93WJve5t+D56DnY7/Ed6e/J3mL8Zf8IGuO7f/
ealvXvtB2vUH1Uu/4Xcw/8D9mt/ttErGKd77KV3PceNy5glwPbgwuOsV7ed3
W+h+R9XOL7XNn8/zuMGfv3+2P9F3ZR7Gcd1P32X6F/vFg3C/yh/v6Xd1v/3Y
9A/6bfip5puaX+qSdbD96vBAFZ/b8VfNX2jr4Kzr7T+8Wvfvuv6Vet+sx1l3
U98AV9jVun9m/+bV2s5d4Sk8R+oTXsP7TfvEdwruyv77dTsleMlaLcHHwEPB
aRNfPsABo49gvFTn7cnPbN6c8bbwaB/W6/C37xp/a9vGOYO3mb/W9gcvpn33
amlewLZxQe/n/er6ua8zL9A8BPELZsJFgwsqnt+8ZJ4reOvDetx4eHjBOi+4
//16Xc7X+0u/8Xu/U8vgsvdrPR0uTTsf73+f4PjmOQpXd7vBXzsetOvbqNfN
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
dv3K+/hR2+28zZ9r+9624+T7fEP+z9e1pP4DP9X+Rfve6L3zHGy/Vb/j9+Y4
75d+4X7A/ZJXVP3eejPY59HjES+/0+mRbn3Gi5Huj/j41uuJ3+mZrhfPBp5P
ePbwfRhXlGd2WzyjxAtIJ8h+NuscmecU/XPz4607z3wjfXv7o7KOkh5mp79J
vdZ3ua/7M7+1+rp8x/DstG7t9C7F846OmvXDGn8guIDwD+ehyP0U/93pW5qP
YL6gcQfr+FEfdv4VHZ9r23xs67lSYhehayheaqcjcEb3x09g3QPrHztPpXTI
g7ux7nCcMSV8YuPo1mN5WOuf+np0VMCdjU9id1tXWnZ77HXHbUpHBdw8etLK
K2n8FNwd/JzjHW7+tNazEG6edY/iVxfEETvvu3B76qeetNfrLT1nF0drvNjX
084narfWbznf67LB+gZe+1TvI/G+Wq9160vlj2S9NdXvlzhcxY/7/e143WXd
H/tbfJ7zhj6qzz8x3q18WYkTtp/JPH2v+xRPkPfg+yrPV5fXy3x2thk37qj9
g/HD9ezou8z3ZVyB70v4Q/KxEhetfLbWj+I9ZP3u90CeBMdVOE8y75Pj0jtI
+UTbzq+AP8R8f0rrQ3idzHHzzllff63jzDcjPVTz1Kwzo3xluc7+B+P9X+r8
9hc+IfMwf4rn7vIeSjc558lPbzw/fgThdeERKP97cEP4Hid1nnRdc57tlk91
/IzaI/5meM7YK+CY8IIc503+RfOBbEfhfzir51N+IfuhHD9nnmDsLvoTfF3F
x+U886+tcy8/VfY7Ls32lnmtxn34HsCP8OOBL7E9ipO7MNgexBXl+NeqV3lH
cl/F6QSHc+n8hc7zYJ0Gxg3ej+3JmZ53VfWYd3te9UnXvcvT97lK7gfv95jq
O6F6aId59ebBWvfafkbrALXjHd+V8Y3+rjiE1OO/gZ58hy/SHu7zvq47rOew
X9k6+Y6vsh49vxvrBecdop9cqsczD1kPnv7pecjxWSfU/jMqvc7xPHdR7XG8
m/vZGZ3Hft7Hl9rmffE7e/3oedHxsOI7Z9t5E7gPvxt/1DuKu1vVc860vabz
nXeA92s+AO1hnIaPaV6j8waTh9h+dMVPJE7IvEnFC3W61dI1SXyb8jcnjugb
HVfetdQjf/2ucHHrZXd+S/v5r6p9zkvtvB+rqtf54Xhu8UKD65snfEfPNdJT
sT9XOivx20uHIHwA/MzyB0QXQfkqO31k+RXM20783JP99xvvB1dbEg4Ivm28
LXF99luwX/4LcEn8BY776/B0tl/WdsUfAu6Jf0P+EHTF9+Q3WBr4LYIrglPK
D0M7aU+nyyI9cPwvHKfdtGtJ7QF333b7dX+ee+7fZVP18Hyv6v3iR5FeOdfb
bwMe/1b+gCX5BfAfHBHevyr83n6X/C7yQ+DfsF9kLtzb+u32Z8VvZb15PWf6
07f1Pnvyi/A+wee31W+tp5M4Vb5Pf3/STe/iXvUdp3yq+uDlWIfH+kCOU5UO
lONiu3HtpuqBT2L/KPOE+OiZR8Qfz3Gvs1inMZ8xLxLvwLzouIQVbYvPnnn4
Uq2nw82JU1Q8WErnDXLcne0w7A7sEuwN7NOTKrnO6yHrzl1UO3yd895xf+fL
+Vztx852HK95lopj63Ryndd7dB7liuq3Xcgfv4PXOcZzsMNXdZ7td9vr0oeI
XW99Up9PfebTWx/CvHtwRukZL8SXd37FiXC54J/WPTFON9AnDW74cP/j5j0Z
b7UeSeoVrhhek3Dm4IbmQwnvBg+eCA+PfqnzYj6p+3fU3uCS9/c/P7jmA+2X
fqt166O//bg+n/HmtGNd5z3SfuuLGC9Wv08cyPW6P/3Y/dy6JYwnl1Wal2Tc
1HH9jGt818qD2OFgzmvk9fhhXW/dD8dpt/t1PGzFUQe/RBcAvrPwUOdlynpP
/MjsP1f3h7/seK1zg/rAW53fQ+s98zidz9x4ZxdXxnrVcY/aDo6JH1r5QoK3
ntBzrOh5T+3fHq/vurxM6K7cqNt5r9InyPzu35X2SofbcdXO99jxUrETPqll
8GfwdvRu4MGie0C/XN7/+uAffE8f1Pq674HvwDjk52ovf1xvPR63Y1rP6/wi
/g4P1+eLbjk4+qnBfvqN7MOZ1/vSSbFuuXXtu7gQxTnmd1muv1N+/z//2/77
iYeg36/U7ZTKM9flCZX/pvMHfFDPN5+y02OxH+CIjrsfoDfi8ZdxW/oinS6G
eN3Wa8h11ncxr5vylI7bf0H/xv5m3rK9zDx2WvfluZyHUzhpl4fC+K1xdto1
miedt4J24s+llB/T8ZjZr7w7XX5l+x+wZy+rHfaXOm/9tXr/+HE5rvjYtIf2
jXQDzYdZ1/OKh9Ph13M954l6Xewdnof3fbo+f9671wN+PuHpnQ7jTMed94r+
5nWL4uXS/zmf78A6NjzHKN/1VOdbT41xHr/r6fqdd/km5EfOPPvnWl8Xv6a4
O4+rsTccX3JV97OOuPUX7NdlXrGf1vpOwhGCM3CfgR1me8u89OAlistJfJdx
aeuZcN0VleYnXqnXB6+Rnpt1eq2jm3gm6RXneuXP2xaubf2P8EIVTxbdNeuY
gJ89q/ujvyyeanSgdbzDx57quZRvMHp2ei/WWzF+n23pwizpfXQ6MSNe7gj3
Ex93T+cFRxev1nrb+f3A8YUXBpcEbxb/Ftw9x40ng9eSDxMc13z6zVo6bsB5
QtN+tSd4u3B9SuP6qV94cvwS4lHnPvKXzP0+lE808REv9m9X4gwc9/FK5z2v
58c/4jye0ovHX7Gt9zZXv9jTe8x3sKF6n6l++YtGv8Oe9tvPNNfv2fmp+D2e
1f1z1+v3y3Wq1/1n2+1Xf8t5jFe8N+nn53cY6EE5Lnhp5Odj/AGnZz6w7rn9
m/Ir2x8anRnWy9bpAV8XDyzzsnVlHBfKupz2Ui/2wZ90/bnaTuch7fJAO+8Z
PDfzXowzsT7A/sEON7+l2WPRVXEcnu3JQV67jtep/E7O3+S8NfCrgwuKv2ne
r/PwBDfd0H3YhjcNH9f5eZSnMnmD4EPDX+Y4+iPwqeFPf1ePO+8l16ce9EqU
14l6p9pOXiLap/yL4Y2zX7oeydOo652PEz2QiZ4nfHHldQxfG30P3rPzI3Hc
/HB+B7+3F/V4eNff1uO5L+crz1L8Bm6P45LhYYvXHzxb/TJ5l1j3rdd+3OV9
dTz1YP3V6YFLFzzrcvMAWcc6L+911c86y340x5WYP8S4wvrL49Cyjh/XfnAI
x8163WZcx/i2eZ7W0bafDr1M1nVt3LbOiMdf498dvsX6zDqP1nmjPK9t493W
WQMfPl3v2+maKS9i+FDoHlCfdZevqz3cf61en/Ol9x3+kvTmrNth3NLzdJ7H
/GfhovFXm6cNf+yrQX3Uc35Q/7yWsQOs/8s6eK2eH7xWz+v1beyam/V866l3
cd/YC/ZnXNv/OWN3nNBx9Re/7/we4ot3etwz1ee4OHBm/qxzS8l4Yv1bvnOO
8z3z3fNdM64YJ2p/wV9HfrMV1e9xDrxq5F8HT1Q+hYXxO+N41/a/rsuzzvmn
1R7ayTh6Vu2aa7/5sc63gB1ovYdVtWu1lp3eyHnd/5Ku470bNza/xPczj2Hl
X9Tj+Ynf07xhcEbj7vQz/jyfndHvs6JtlcZRu7wbzr9xQe06qudzf6Hdzg/L
dTOVvD/rYPN8zit0XPWZF8/36JLvWnG01h2Lv0e6zxmHlP+wy8esPAHWb854
zfqLcZr4ZcUbZ5zWvNnl6WN96nhnxzGP8lbAT5NuU/Lxse4d5R8znqg48OBe
2r83WIfPhetRf3DSe3U7pdobXWTOv13vG/0s64BJF8s45baeN3kCxUcM3iP9
q/AThe8EDwKnEf5q/MN4SfAZ4V/hFSu+P7jbq3pdtoVjzZ/vX4LjpL2D/IbW
D5gL/woeJ1w2PGnhaX7ve8bzjKeOcCPxRFMav2W/8x/6uYVj57uS3hl4VPBf
+qV0GWbyI8zsN+B7vl+fr9OFEB4203cT/YT7tT3RW0CvwXpq3N/5Ra8P6uf6
m/U6f7/Wc4v/hu/5ho4/qM+X8dP5eaRrl99roBtHe/P+pZPX5Wm9VY/nua6r
PVqndHmNbtXrOh0lP594O7Hbb9b6hvlY12vp/EmJw7hTnyvP5/nmgZ5b+V2j
O+i8ufd1vnBX+90y/7IeYP6VHzPrWPyNF3S9S637Ov6a82K0vy4OD9zAeTqw
g7BjsG+IwxrZ/9bTcDyn/dHSiY29hZ2muM3gNzfq8eirOd7O/Mc11W8+ruNC
rc/mOFbHhY7ypZkXwnknB8+LvYv/3/HrzmNpPfArur95zYtaT+zt2/V43oP1
CHgPfn+3antSr/TvHJcb/rP4JNEvAP8e6DwEL5RuYXBI63VIR9C4aPROBvhs
cF3wWPBh8GP0qLfqdvBr9KzRnf6pljvoaP9cS/ZPfmnXt/1brXxH+VM9vqPt
ifZzfnS7OV862dED13H0u9HR3tmqz5P94Orf1zK66eiXb9XzjbPjR4heCzor
P9Tzg9erfeigH5QOeq6nPeDsP9T2dP4F2medd+m/RK/G+D798KXa/109b0f+
gfgr5H+IP0P+C/bz3DwX7yPvlftIb2c68AflPeBvkN+j07exjpDqz/fGe0Gf
RDpB8X9JfyY6JeLNJ65A+V8TT8H4Jf5Z/BLOO+A4gRHfzuOf8kF0vDGPi8qv
0OWVcL4H6xhwH+Yf5gXzg62r7nxonseNV0qXJP5Y86HN//xkcF/plSf/iHBZ
86rNR0s+POULjQ7Kn3Qf7KgjajfP93F9TrbDN4a3+0WtL8/L+8YuAEf6XPsv
qXR8l/K22j/tfChdnhDHF5n3Kbyz41ne0Lbn93u1fbbbOn1b5WXp+LEje8Z2
Erig9QiEz3a4Ktc5HoXvZsTHt+6edP47vjg611x/WPU5LkB6B9bdT79yP/tc
9dovaDzSujHSE4lOjXWFvY5wfkPzVcGDrXd8ZnCc92/73rzdsyqxQ91/vf+W
6qf/WmfLfmfzmZW/ZjG4rrsfxx3P5zxCrlfzSeYl5iPaY361v0fNK7kv5Zra
4feg36PLd2Q/vPnu1tMxfr+2fz3OY93tv6R6nEdJ8+PC66ZFPd75l5ivL6v+
0XrunO5zTe3k+zmmbfn1u3gMjUvWy7ZOjuN5Mq/iR5Bev3Wm4tfEXyA+WvzF
1s8CH7lWzw8+pXJbeH6ny2Ecynm0wZHWtd+4kHFDcCjhhsGZFOcev8dC1wm3
DK5IOeDtdTjf3focHZ5lPrl4212ecOGRXR7IAS/Z+SbjR7EesM+z/oB43MaD
7d/o9IQf7d+e4NfWFxYuHj+GeODWUZj7/Be1/vhPrHus63mO4IvyM7Hd8T3t
97pft40bbxs/1/2cNz79XDo91s93Xvmuv4FDw29XvhnnbU3/N+7LcekoBycV
Tt3l7bGOv3R7Zmq/8eO8V85fq8+d96T87/lO7TdYU3vXdF/nFfB3Kn7vzL+f
8wcNdK07v9AgXiBxGOqf6c98L0/qfff83hTfsOdxgnZuqJ2Oo9io+zOObOx/
/z2NA3lPA39A+h/9mH5DyTwl3k/Xv9wv7XfS7x8emfws8YvYr2GdrNuqfzFo
B/XLD9P5X5ynyXmt9P1m3FDe3JTM+6e1Pa/tDn/K/g7i3r/R8Uu6TnlPwwO7
VO+Xep0nTO1yvfFbnVe9zf+SP6+74FOKP+l489h50vPMceMz/ElfLuu0Uyod
Z+r1v/XMB3rk0e0Fh1ceo+iGS9/DvPXgcOD0D2v90dWQHkbuY51i4f87wgGj
u2FdbelgB0e0HjQ60xsqn6ldtFs8aOulpF3SzzaOOfG6ivWC4mNHeRnj52Ld
xLrSfDTjKubDmR9mXWPr93O9dXqsPzDTfusyntZ9T+s8r8O433mV1q89qeOX
dL3jvvmOpAfb6adaFxce21XVax0j6jHvz/U57veU2n+2Hs/68ozue0HPYd6e
eX5+D1xnHJJ+4d/Lz20dqUF/yrgpfQTzdYP7Sj8h4ynX4X9nHmGcZ9yHH21d
aM9fzP+adx1P1eX50P7kmWceNq/O+UKkh9blPbxSnyd2gfJlOq/Iru2F2zrf
fBnbR81O6Xgq4lPMvB6X3Wt7vsvnLj1PxwPkPOfF9Ppc78356aMz4/3K325+
f3jxX+l88TNjP5yt9du+7HAE8Uusp5e4jZMq4bt/ofuL7+7vqPPrSM855wk/
Dq5kPerjKj3Oe9yTztRQd8M8EMZb5zdfq/V3edjxB5xXPcyz8rM5P8PE+Kzy
FMQ/uVH3R4dNx53XIvkznC/F+UvMT8DPbL8x/AbFle2IzzCR/zgl/mnF9+FX
Jn82PIBl7Y8/+gfVq/i6xN+JNzBxO1r98Abix9+sz8124vSo/5WOK99L+AWb
9f6dn173jf//u/oe8MOHn0Apv7rjFM07ye/DfV7Ueswz4Hf38bwP97NX2qa/
cJ+ntQxvgvsqrjTxl+LbpB7sYtnZ2NMTrQN2ZMc734r5QRkvrPOn/OPo+sWv
47gVjyd8/9ar8fmMX/gDrO9p/7rzelgnXf76+PmO1v0Zl+Hv4fcmTo/xHL+9
86PjD3B8gdf50mXt4ssG6+tON8W4hfNc63jsC+Lj4SWLR+880eYbG683rhZe
NNcpj7J5ubRnLvw2dpHxlwd1/65wQuwq57UOf1v6JvDH94Svz3X+9gCfWxJu
HVyL9yI9E/Odu7zd4KyP6/H4Ecxbl27JtvB14/V5Hnj34PJsi9+//S/KxAmI
bx+/gfBI62dEb0P8fPPgl7Sf36vzqxjf1XXW0bFeTPK1Oy+i8N30E8WjbAtn
ze+q/mmcPesC9t+v9VgXf1f8dccjdLr5/h4p+Y71PVqPaFvrl11/p/JzOE7A
+YO9Tur0PtmWPqh1NLKuRV90pFfKeG/9PuYPr8uZb1i/g2M4/lHxmx3uJL23
8N7Mo7s3OI95+26tbypcLfoB4v/uaJ533rfgbo9r6fyFyUOOXSHeYfILYtfo
+vARld8udpB1h8EhrbthfQblxwsf8lltr/MLxl57WutLKVw06wHzJ5V/cCpc
N7/Hvbrd5b33dfQL8yaNW4I3YU9xHbgl/eRebXenH6H8mTu2++7W+oOz3q3P
F74ox+Gdud3GY8WzyXryRm1Hvot11af17ohX1MUzXNZz8Tvdru0LDsz71fNb
/9F65rm/dW60fs7193Wd4wkc9yGeo8eXvK/r9XjXv6yLzu8pP0DWBdLXcf7V
rDuox3lbb+v+fr+Ujjc2Pgz+4nHbPNyjug4eH7xV467GZz4Z3P/YoLTeqvFt
4eHZbx4mOLbzTjnP0mnV+7H2G1dy/gLxfrOesm4u6yTrrbT31/GnvM6ybgvt
YL3m+ygOPHzl9hdcEftAeiTBIbErzL/iPOtpCzd1voxOZ+Nmva7L5yH/dvBa
63JaT1xxbdZP7vSzpdOcsr1H57OOHWW9UOmlZJ37ler5RvV9VduVfmLerNfp
9nPYD8x35O9ixJN1fg/xEDu/LjjGWi0zXjKfOA+15yfzMC/peuv4Ov+14hkm
5pWq7PyaPNfZ+tzBdTnPOrzn1G7bGbdU/7laOu4tzyN9K+PA0W0zLjXIA9Hl
29A8E7tqEOcSe0t5K4wvW0cudqb85cmTLT251Md11Cccz7izdely3tPaPtdv
Ozh2s+zh2LfY2cbTpT+24/WB44Ye1XoXg98z/n3p+uV68bHNH8h3h91yp14X
O+pOvU/wR+t0W59b1y/kh+jsKOensf6445zsLxnpc4/wUOu3iK/f6dxY18z8
AsZf5gfOt12AHdDsl6EuP3rY+IuFq+a45h/7sznf/jrnmUg94K1nVK902Ozv
i//7pNrxje5Lu9p7zPwo/c/cTzgwvKfM83oe2uV8k5n/8Zc6fxd2ivh4nR9Y
+qUdX+tsbW+e/3I9bp3xLu5e+Vo6nTvbOTM9L/aV9e0u1efq8l3iFzZ/EPvN
ujnS59mVXx+c2jrewckH+SyDd4Grrdf7gZ91eKV4zdYTDp76rO4P/1p6zNEz
kV5z9FUoB/rCOe68jNZVphzlCZRuNHkLyY9IvsRDlMp7SF7BOWW7LnkclRcx
+Qilq81+6qUde7qe9rwhP2MrV1+37dd12+WRn1v5U71+s20f+qnWw/4DHH+t
kvr+VrcP6T5vW7na9r9p5a+tPPBL3aadh36p1/9KfW3/5l/r9qrK3Ifnb+Xb
Vh54Xetd/am2v7tf27/5urZ3U++f7QM8x+v6u5Ffk3612spN9TP01uknHKe/
cR15LMmzSf+l/6Qf0c/tR9H3l+9UOtvRVWK//Ckjf4X9IPEXafwy/t/5A8QH
73T9rY8Eb8j6L/d1XPkzu/gc+ys1Lse/4HgM6/NYb9T6Os4jZj+s9FRZT3fr
auwi/NOsT8FdWE+ZP2h+D7iN8R7nMTdfUuveLi4P+24UL40daVyK/bZHzSs1
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
5eXKOlb+NucTm3gdqnVfvkuO36n3c56yrFtv1XYvFM/R5Um9Oyg9bjgOhvHK
OBh4rfMawHdy3LHzebW/Tp9DccNdHj/HGzDu8zet7cj5x7R/Wc/Bn+Mp1O7M
c54PrActHZzg0pxv/Nz6WrSPdn+s+xg/X67vyevgDj/nPpqHOv+FdSCc3/Ws
yhG+7DyIF1U67gmcQnFlC+Mbd2oZP5DzCyjvX8YF+v1t1UvJdyX/VMa1e7qf
/erWtdY83OUrvF3b57x/xok6P5bzB1rH27pDl1SP8zLrvSQOzeOe48fA1WTP
BAdbq8etJ9zlcbC/wLod9o/Zr4B95n6Ofab4IscfBsdz/NFKrTf+DuevsL9h
Rc+1qM+d6/S7Oq9njl+qZXBD5eXs4vKUB6PDHe03dbwi9fo7vDPYTz9mXrPe
tPNyPtb591Tqu/G8mN/JcZgaByaedz1+OC/pLR23X4h+dV7HrWvjfrFWz+/i
Wc/rPo6rtF4X/Ux6/wt9f11+E/dr85OcH4H5gfmYecvrKfZbn8/6YdT7sa4/
qnqcz1f6Jd16b7men3lZfmvjrM472fHDhUMHj7B+VsMhujgY5TXs8iHercet
3x08kvOt63FD1yufZHAf5SFMXkPxDa3jER41PGuV4YGKHxn9AOtrc//RdYO8
jr4//NHwOcW7dF4687KjW0B74GXSzmd1v4+nVN4Z8zvNnw1fXfkDo9cAbuk8
isIjzQfN7zvIgzcTjm5cMv1Bv5/zOjp/aX4n4fd7vs+TWk+n4/6klsnLqPcW
3QndZ6b3hT8h/f9Ovd7xBXvql+H5Dvpd+L36nefqX0vqh11eIfN/9V05f+eS
v0f5RZIfiX5kHvB6rS+/r/MvCWfnvvn9PW6J/xvcXO0K/qnrMy5Sj/IGZNy7
ree5pf5Ov+V7eFSfL/4kxZXMtN+86i6P6u16nftT+t/d+tx5/8qLOjOe6/hE
x22yHz+P45Gti6l4wODz5+p1nu8cT5a/9+rxTieXP+u0Yl8Yh3XeD0rjw9IJ
7fACr6c/1nWsx72ePa72YG+YB4i9uaLzWN/K7u/yJ3H8et3f6VFjH9outj60
caJbOt95XrTe6HQVrL/i9eKa2m/9WT8fdvVId4R19s1a5rmw9+/XMjxVn+d8
heDd4MzirRqHDM/KuDK4gvg85sUH/zYOLj5PeFzO50PpvFdP6nnB8Z/Udhg3
D75unu8AD1/oOYzzJ3+kcXh+D54XPNpxBnqOid6L+VP2G4Rv5DylD2t9Xofm
+zCexPes9fxC/du8xqyvRnpD1rWxHhLrOcY9618yfoGzsr6R/lTHMwXHbONe
p/8tfm3mAfNlrEdonUPmG+cJlk5A1idez7Cf9dG1el7iqdEjdnyrdAly/aDe
Lk6V88xfEY8k9uvDen7mcdlJXb5or8/E9+h0Gni/rEO/0HNaF1pxwJ0+pfTQ
On+69WP8e8JPgjf9Vb2ui0t2fJbbZX8761qdn7gw8zWUt955483D2JZ9Z/7D
rn7P2ImyH52f3bp0We/IPjefxbwM69yZh5X2YCeq35lnYvud+2Sd4Dg8bXd6
oCMeivkw4m35OwlvRXymjAs3anvyHjQedLoI0ktxP44uQfsz/yH2I/Yh2x+r
NE5l/qPtW8d9MA+Y7y6dvY7HbpyREvvTOtvXdD/z3433Kt4l+OEdnSf/Y/yT
znNC3k/7Y/F/YNcoHqjzI9uufajzbD88qGXsAF23o/suRvaW/c7iKcQ//aBu
xz6RfWoetfNtpxzYX/HbUw/PzXPY3jM/3fbyIM4red039j++kL2c9+Y8lLw3
fg/njZX/K3i99QvNgzHPWuuWfAfmyYzWO+D1V3SdeNadv0p5Lzs9euP/fO98
t86L4Tgg7DuPM/zJv93pY0k3vtOZgl/HvNvG36EulXWkbH/cUOn8j7bfOA4e
KPwk86bm8Q435Drjv9KtDf4M7gs+B46HPsHTWhrXte7unvDduXA/9AqiB6L8
j3vCv7eFC0dvQect+TmtFyB83NcH9xzoJWC/uB3BzYWbRsfhaT0v9Usfwvne
urzquj44uZ4vOjDG2zlf+P+S3q/bF5wXHFp4s/OvB6cVrm3c1Di9854Gx7ad
JX5zcELsXuwirZ/M67d9tSvcNvzeq4P74Ndynlbb71r3dDpGWrdZL4/6ujw9
Z2o9Xb4f4Z+Jh5C+VXiwigPt8sK4RF9ROrBdPqJT9blzH+uyOb5D+XSc1yD7
VU/0QRWvGt0L64E6L7H0w4zrhu/lPBLgEMof0unEMU85Hwp2tOOlHZfKvGnc
1zrBnAd+iN0rnpvt6OA82AfmScjOiL2HPWNeDzxCeJLiK2IH2R7LebLLFrJb
J7YzOQ87TbhgcEDjmTyH4vUnqtd4ZOoVv7izkxWHCG7Y2bOj+E34ri8G57Uy
caiKfw1f9tvBfvFiU99Ad8R4aeJs1T7scOqDf7uj83a8HnhRt4Pzal0UvBO7
W/zqPB84LaWP85zmWQvf3dE6JPGpbDt+dqQLYz417134efor1ysu1roWo/XL
Qr/HwtcL987vIx542uc4acXNph8pfnik7xH9G8VFh7fd+N3owqCTQpw0eibR
VUHPpOmdoOfC+eirTLjPD7V+rkfnJnHctE988p3Bc+d3FA9/Z9DPws+3HpB0
e7pt9d/u+1P/8ndsXaDuu9RzLfQd7ggHsJ9p4vW58Qb5M0b1T3Q8/hD5A4PD
SC89612vl8XDzfzrPA/gVc5/5vn9fW3Du8LfYN6480Ca1009y6ofO+BLlccG
5xvHww9iPM98Mj/Hh6pXuqSdf9w6+s5zZj+O/T+z/73/ftptfFG4YvAI+auy
37w8/FK277gfv/sxvQfpFsculo6a83J2+SEv1uOx120nn9N50vXt8Arw4Msq
Xd9FlfajuF0n9DzfqP4ztb6sk8C/12p74xdiHSW/ivkhWafd1X7FcdpPsDvy
N9wZXK/9wW3sn6Hdiovs4i5v6HrtTxylcSPHUQrv73iXjlfmdxn0K+Nl9os6
X090v4mXlH/Mfgfn7et0wRkfPB62P+cFzDjH+Yw3zsvs/COOx/Q4OcqPzXiA
ruF/037zZkb5STxus5/1G+MS499ner7Dqtd60ozTHp+dj1rjUp5fuhX+s75C
p1+t/JPJb6hxMXjCezpOXA86U6z/z9X+5ucw7tDlPXTeXvAY5f3Id6l47Zn9
tTfr9kzfv/3+xp26eHP7Ix13/a94jPazS8/BehUjner4NeEDPt7/fuEzil/a
+U/RtxYuaJ5szqce4eLGC50/rdMTEF7e8YKNA7fz94R/BwcVb3UuHLXDi8Wf
dZ7G4NrsF+/bePO2S+Pcuh/PGVz4WW2n+cbBdbm/9HqDH1Oiq638gdFRRh+6
6S+jw8xxdKCjUy2da+tVo4tNfkXyN75RvsZNHUeHm/PID0m+SPJCviWPY9t/
wHkj/9qO/9L2t+3Ntv2G/a18y/kqj/y1Xr/6t3a/v7fr2vavrTzU9h9o26v/
aPX893bftv32Hzr+H/W8Vepv5a+t3GzHD/yz1cf57fq32qbeQxxv5ZtWbv5H
rY/6N6n/n/X+h/5Zjx9q7d/8+/7P9Yb30soj/6jPx/vK8/61nv/rL/uXbziP
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
+6FUXEnOk784857zxKxrW/snms+zjV0o+z7ztf3QtPeU2gceO9VzfFLbH/6C
7IXYl9ats5/qw/pdJc7K86bz+56u50fnn+/1Ez0P/dk8Kr4HvhfsiY/r+Ylj
07xnPY7ES8vv6PzG1lGMP/NGrS+6ZGyjx6+4tKx331PpPLXv1e+z69/WXYQn
xvcIjriu5/R36jye67U+5yGOnhF6a9LriT2lvMqxC4QTdvdVO4NXCzc1jpd8
lMLh5uIvB9cDH6R8VbeJz4eHir4FvFLwtk63QDhedITB8aRbjQ41+QnRr34r
3I+8b8bDKeHB0s7oLD+vzw1+uSf8MvkxX9Tr9oR7Zr+uy/tzfj/pLsbuk75F
dA/Ab7le9UX/AH8F7UYPRfkL49eQjs2e7EzzPneNp5vfIL1T+uuS7AjrhgSn
RycJe0P6jca9k1f1kdrL99jsEOfjMq+0ywPuvOjivWb+J57Y3+Ng3WKdzdHv
Gn1udEf47jhPeSGXBv03+jgcf1zbGT0syofaLztv7t/hWa03+mCKf+h08hln
+Z1Yh2IPM56v1G3rlkWfS/Np1gdaZ9qPGF6XxveU0tPMfupzvkh4y1f2L50v
Ps/HuuGP9TmDh5pPiv3mfOOK38j6ynHK1jFxPDP2k/VBlKfd+eGD/zqOCd05
rePyPLTDccOKk+/8FDyH40x4Ht7PcZ1HyXv8UPvNb8K+Urxd7NcbOk47Wb9g
NxqvwS6VfRM8/dO67fVw3r/bj19gVe0A7xIebL2R8GzB2cC7lA8w+4VT5jjv
Rfxh6ySkXZwvfNr4bxdXqzjQDqcTPhr8lXqlj2Ief3i54P7wtuCjw5uBJ6U4
2NTzotY/EQ8Nf0P4NYo7DR4Mznldzwv+DV6ofJ15v/7d7tXzwks1b0a8p+Q5
kF9j4eOUjvf2++Q8+194D8rrEX6P+ey8H+VVyvqOfko/4P1u1G2eO7+X4s2n
9ivRLuv50/+NYzjuiP2sZ2c6j++a8WWQlzDrVekhdHmCzLs1n7v9BcdhfGIe
YdxhP+MTeBS4knSiPK8732bGb9axjI/MQ+YdzfX8jufR+NvFcfHcfu/Gm4zP
mz/NPMMf7WZec37D46qH75Z+y3dt/OOM2if/TM6THyvvAX8Ev7/53MbX2L+i
48y/jos+qv38bvxe/LEtvCL2wBGVjq+27hz9Tn709C/iorGv0C2j/1Iv/Rh7
85juy/MYZ+S7mWnb36l/Z41XE/uhGN9u1PMz7mm+y/zLuEdpPkh7zs7PIR0/
8wGsQx7cy3Ht2PPgYcQZYhdLv6fjwwuHCY52obYv92cdgG7RN3oueCDmU9C/
+U7p54qfWAgPnAgX7OJzPA/frcczH3M93+1M7bis+lZ1vuOA5Lfv+p+vs9/d
uoYndb3HHekCpV2Mk3wHjFvL6of2nxr/X2g/9iP2pPRbEt9tO/FJ3R/dPOn0
WC8mz+V8RWf1HPJD5Pe6o3bzns/ou7yh5zTebL6W7QLPX+DExlOJB9O6oouP
cbyY5+U2Dia+C/+h+ZbO2yB+Z+K4HfcObgHuAH4B3uO4GvxPbR2e9dNUz8O8
5O+Mfst7Xdb5X2q/+dzOu6nxvMtjyfdje2RFJf2E8RZ7Cj+jeGgZF8VTM98q
++WnMF6R/HjS7Q6+z3gOLm7dmFXtv6Hjl+t9Z8bfwFfwV0uvr8uDgT/1Zu0v
c+GKxufMnwVnM54G7hUcjv5KvdZ5wJ8sXdrgYHwX4FHmV4u/bnyV7yl8anRY
hMsZNzWvwLzp/8PY/cd8Vp7ngX+lWMJaR2bURAurIBhtIoHWWRjJkRglLLyr
/AG7zhp2HQkkI5jGTqC1CxODzbgeM2/iH5DgwCQmgZQJTGrX4PyAcZyUSTOB
17UTaG3DOHYDrSlMa++ClAjPql0xu0awUt/rc0vn+vJu9vvPo3O+58dzznme
5/513dc98Spxn48t+zN5leUfHX5b75PfUvyh+JP5p8UPzqr2WNVP2VfXGd7g
bfD6zt8vDhC/Kp7kxic/V/ELuOJXP7dsG6e83/94xPt/cYt/tmyHXzzt1Hns
uAm8szwC+H/97PiH/APP6TsU70f7fyeO1OOm4kozrovPe3hsSr871X77qhc0
1/nUG19n4mAlN1quOK95h8ZfXf7ryU/o411ffkPnMzS/Zc3TifPdUfuL52dv
tacq/jLHm/ddj/lj9f+dy/tPP5zX60vlQXd9reF96u9057K/U9+j8wdsdz53
r7ud3+07Fq5neGVKv1/BYcGfiRf/g+Xxo/e0ncl+ZR/ctPy/6x3N/a9d9mPs
2+14ukp/HH2x/MltX4y/s/PtPr38f+ov0HfLb9U8BvM//sbmq5S3qY6kNvmZ
w19c/Jb4Q+Qh4veYfMTiacZL6H7qVuJNHv7s4iMZPsPiW5EXOnws8lLvXx4n
T3X4S5o3gr+y8i/l8cor1Y5/WD5s+4vvW16//cZdf2X8kOwb37f5SYp3Y3Da
5acfPHXzmhpPbSd1/2wXP8bUg6z81/HrNg/3A8v96+VPn/f727W///feq76r
PNr5v/zWnnOeq9738Kv85vL/weOXX7rtx7XCQ41e3/zAjeP9cO1vXNYHapt9
1n4o9ot1jJ3Rfkbb7ndLte+v++yp+zV+rHmB2x9gvb2q7uP/ztOpugXDOyVO
uh3fSa/vnZfT/fB829mF7Hzvk7yoeOxsbxM/Hf9j93fX42+8v/kXfKeMn5Ef
2/F4aLfDkZM3FR+Y892v7ecP1v37PnWdOc7/Xee6ebD5o4yPxse3v6L8mvPr
/K9+38YPPwn/CB5PflHjreto7KnW9Rv/3PGEwvONP8nzm58V3+n8+JX6W/bz
S9y2vF7ngax1HNh62HWdOk5Zcb2uvzH8zOQBeSfuV3lYk5dVPF7zf637LTc2
Wo7jiyy+iOETK76Ilvdd1715HDpuuFn62Up8sXikJ8547/K6GxVP3Si9rfOF
Jp5P7pM/leczflBxB37Ujq/eXc/T/MpVl2Keq/mym5dku/0Hl/9v1HsYni56
QPFUDO9Gj6Ou+1J5eyt81e5LX6n8rPXSF0Zvc92qvz38H1W3petqd7x54rX0
OvO+4xDWi49W2/E4crVxP9bvjoe23GjeoPY7k4/W18KxTB3F9kOnnThOxYcn
j6TrC1g3f7H69+F6zo63vr/6/8H6/wN1XsnhruM8uCby/T31fPZ3Hjg51fHv
jm93Xu8Ny37N+a1vkI//uLabJ6zj46V3bnScsuLSo99WXGt4VH51eb1p3Y88
bLu7473vXT7v5N3wZ/NXGj8HlvsnXlB8bl03pnHU+9pvxe8JTwgXWtdd4SWt
ejkr+PP2e/EXlT9p7tv+puaf+OQb33feQ9UxPvmxbe7T2667Hb6+6v6t8GN0
nbPiUej8g5MVB5j+1vOu4Hybh0O8ocbLxBsqr22er7abh63xoZ1/MN+7nmcl
zlFxl6mz03mZlVc/vBHF/76Cz1lf7p98MDjavcvrW9dO1nvt/MCp14i/Ef63
eEFOlb95+EPuXbb7Ku4Cbz9xluIXmbhM1dMcP2Pxz+yu601e6W8vt4+Wn3Ly
34oPfu7X9SHvrecufPbERSpvYPhbqs7l8O5vU6dzeFuK73L8ydanzrdtvqTm
N4Hjr3jW3vKLN9/8+JPFCZqv2byteuztv5/4Q/HW9Hrc+PTdHbco3qHdtb57
vq4/O/Pe/IUr/9iy/7MeNe6718vywzff6Er8/BN13B3VH3Kj4w6Fo5l1seq8
d/7rCt83vztcDb9347nbf2L9oYdZlxzXeGx6XfMxNB5H3Lx5uYv3rXkvhn8B
jpi+XfjUqT/U+N/yY67wI7Ijy/+Ml4+92fV48CLurO3xvxeP9oo/+f5l/8cv
WnUn2c14GZuHfK38sL2ff334uauuITu7r8v/7ryVelC/u7zv+Mf53z13+fFP
1PXH3+/+4gPFi6juZn8vz9lxgul/+rVW33vqXv7ucnuzvtd8t/I32O8+vpd4
CL/FxmeXLb745oHvOl3b8mRWPEa/9tTzth9/eHX4K+C9Kx4wuPBt5su8x8bT
37c8fqWOVPlj1sqPMPj09jOU32aOtz40f2T7Q3p94V8rvF/XFdgo3Gb76cbu
Lvu+8Z/jH6m8hYk/3LF8nmntr/p7E59oHt6PV3+sy43jaz9m81XC5zYfAj8q
3E7xcEy96O3yiDuP2XWLh6v59zp+PjxU+5fXHb1bfejCy43cI986X7vjH+zv
7Xi7bG+HH+ZP4Sdh5xbudiUOXn6Jrsu8wkfWfv3KL584QPmTm+dmo/3RnVd/
+3L/WvsJ7G+cc/MC3Fbbn1j2d/SHjiM030Dx6Y/fouOqHZdovqGOo1YdhOar
mv56DvpN8SOt8CXoz+11/Zrv692PX1leb4X3qPO6Cke+wrfW12k+peZV6Lb4
vQfXUO9/8p74gUvurJc/dXjV+HXJC3LrUJ1f8mGFj63vw8/c8eXKZ5o4dfud
S88ZPVO/un7JoeX/Xdej+ai7nka/3857W+HLKnkxcuuOOu7XqnX8dvx8Jf9W
4pcd77qtzjdver5rOy5m/TLvm6+5+WM+VNuRbyt4/1+q8+NPHjnufs1T2fm0
4o38Mvglre+RS4Nzes9ye+QBeRg878g7/q7CcU4+BvlZON72mzZv7fiDPrHN
ffZWfzaW2yv+tuK52Fv28vjH2N3tb+TnKLxZ83oMbpC9zw8AB1j+n8E/8s9U
PcDBm/ID8Q/d88bHt79m/FxVL3H8XPcsjxveCf3kL+Ifcr17l/0f/ubGN9+9
fN6ut7K7/G2Dt/2d5fPPdtrmncZHfSy41ObBHtwqvpDC0V4NB5v/z8r/hwqH
Ozhd16kWnhauF94YT8ixtHi5h4+42r6u/Y3L9Zz64/lW+Ls/szzPdQ4VLvpQ
4XnPqv7vr/OGFyR4Z/wftuGph2fi0PK4o/necNJw2sNLgqei6g+utI4vP/DM
I+OseKqHL6N4QAaPf6j6XePT/3Dd2z3P4MO3ed/ek+/i+00L113HDZ+77958
8IVzP1Tzxn2nv3Dpje+ucTf92gZHPzh865f5+8CyHX4f7+93lu9Tf+d+xXPf
PNzGp/bq+v+iGs+7636ON157ndFPfnXPcXXNB/kCxufwA+E1Kr5w7/tYrRPP
1Xc7q+blvP/iPe911HyccW9e3L1sez4MT3nxGA0Pu3lfeRHkxr6OX9xT2yX3
jtZ8HT4Z/Wi50XWBK84wcqnPq+ed5yKfKp5Dru2r+wyOv/nv71s+3/A7lRzc
XdedOEt/l647Ufk3E1/o+sLFkzNyvnh0Bo/fPD5Vj2AlTtxxC/GKyt8avaz4
nCbeuE2eWPOHDu6eH4Z/Ivrg4PE6jx4egz+JnVu80WOXsleKR3r+b/uh83TL
rhh71X0rv7Jxdxt9PL9B4e1W+AKbl6Ttrsqjbf9B8zQ3H/bY+/wWhQsbu+6O
Nz5u7r9NfdPmjZnjC7fV9SsHp1b5tet1/YnfeC/b2ZHeV+EX533eWf0unpvG
MXbdpfEPNK974dC2rRvZOPn2M8C7Fd5vBYf228vz5n22373xct637eJ5GT9U
+ZlnvBWfevPIrPCGNJ63eaj5L+Gbuh5f1UEYvtriDxk7l51ZeanNY938ASv1
kuUxdr5V1X2Bs5l4c8mfweEUvqXrVDeP3NHaP3HYjjM3TqTivYM/Kl664Ytu
HE/nm96x3J48uLZDC4/Q8npFLhZf8Ao/XOWh7iv5ODzMv7ZsR579HfWhVuLs
vq/3VPW0Z7zU++v8vfne+tPbhf+aOHvlT8+4LV70iV/0uBanMP7JZf6abfjy
Jt9AXnjlgU984Mrl9vCp4EMXP+C/4reCm/y5avnTyPn2y3cdW/KEnN4mPjDy
6a7leSPnm++q5XPpARPXoA+0X7H8eit1MW6vdrt+/mo9b/PydB5O14UWdyw8
d9cJ6bqQs7/5Lypeu1Z+8smfKr87v/fIq5I7XVdy6vz9k7p/4S9W8N2Nj27c
eeXjdRx68hI6H03cGW6i4vwTx8//4vTi51OP3P46f+phVr3ywUsUXgE+YXAL
v1v9gmMo3AS8hevuKfyB7RN13cENyNf87PL+G4UbmPr0n6n9lW859yscw7xX
7+d36vn7fTYOofM5up4oPEHjBRp333kdlRewVuOs8f4r9UaKf655DGddaR70
5uth91gfD1RLv7qp2q7HTL/yS1x67LMbl+3oK1UXm7zbXf508nJf4ygbZ1fy
Hf5wBfdZ/ufmfVnh3yic5NRpbD9k8VWPvc/PFf9L+234g/hLBsdZvMr8Z+Mv
a/wmv077Xfgl71/2d3Cu5Tft6/B7nWo/Z/uTDlW/Ko5wtOIX+8ov2u+Fn238
WVVncurr1XHT8vv97hu3ff5ztf/q8rO9WsdNP+s87+lov8dDy/Mct6+Ot/9U
+UvH793+a3EdenDzFjX/cs2v9het+HlK399X8/Jkz+Ouo0mvFR+jV1e9ir2t
b9+5PG9f68WO+3jdv/Cv9PDRV/cv9w/Pz4Flu4Lf53e6qbb5par+zXb8DOOv
ar4kLX2666/AM8UubR7hyfNpPbnyf9m5U28E7r7qG3SdvhUe6G3q685+OKW9
1R///3hdJ/r71In52eV1mmd6jstvtivfYHBUXddQG7k28fXOE9qGh6954ca/
17xsjQ8iR8lX8rTy1Ffq3ONhe2/1v/PryO/mGdtf/ftobf/SGz/nCv/1R+o8
ekDzAtxU/WtcdufZf6Cer3k+L6vj99b1mg+geQm8v8JprNQx6zy/yldcyedr
/FrzEWiNs8attX52+7Idfa7wK82/PDiuTy7/Hz9a26HaxocV/2DXb5y83eKZ
aP/q+A2bHyZ6KxxR14Mc/FPlg7e9N/nG2/FgFJ5q8mkLX9X1M1d4tItn2nXX
qn9zXtWr7/vo/2b7dTufl93QeCz7y75ZLxwXO3DOK/6S9bIzdx5+4+PGL138
PHDTjl/brnVdOPfKA2j7d3D3Zad1/gE7uu3izdqePP4H6jq/s3xu/R0/QL0f
95vr1f3Wq/976jknL6Py/Tfq+2zU92g+n8bv9ffdqO+13v3uurI9Hlyn7Nn2
02zHl7OSH9K4+3uX256v7ei2jzdqfRl+gMK5jr+r8YS1f6UeAP9X82S2v6z4
vVfqE/S63bycxS87coe8Iwfhu+Ha5a/jiYZbL9ze8GnK++L35b/ufDj2eOfF
fqJacYTy33ce5ujp9PeyJ8Z+KBzdij9d/+o+/PbD78auaP853F3x6nV/Jk+w
7jM8g9vwxo7d037/zp/r/Df7K0937I2ys+a93l3vtfIJd5ffw3FHu7+FYxx7
quuPsYs+Wi37RHyg685VXKHrsK1cJ3YTe2DsIHXqyn/UdeS6Ls3wsFfdtrF7
uu5d5ylcvjx+7Cl6ZPMqtD7Yv64L0/EL+nnX0Wt++Oazp/feVOfZ3/V6PJf+
NI/8VfUc8MV4D/BG+eHDurLew/XVVn2Z6X/XJWhe/uvreYrvqfXYlTyiypNa
4b+3Ph9Ybs96XjzmK3UMut5B82lXXtRKHkLj2lvP77bkU/M0jZ1aeI/B3Vc9
js1uK69r9PmK83ecZfRwxxXf3woPYNXHmXhS1+NuXvuW15UfMN/Lcew647Lz
fK9/4/+b363rKk/88+baX36cuU7L6caji6/Dn1svi7961u2qD9b1XgcnXzis
Of725Xl7S94072rX3x3cWvvBy2/Jn8l/3P7U9ivzww5+sHDDjaN038EdFt58
8HvF89r8soNr7Pp0xVc8uDnxgXrO3d2/5mHYBr+8u/zsR+v5+cH5l/mPXy0/
93PVvlq43IuKXxqefXDC8MTN51w4cfzSWjh511Mv81BaPNP7H1q2jjsrdTYv
Sjt81+6T469Oe9HfcV31PfFiX/25ZX9eTXusjsOX7f7Hqr2o3tPwcBfOHt82
fP3++r+/y6vVzvGF0/f9DtV3nnyAymvQv7Pqf98Rrzfc9Fy/+m/8wUs3/vhY
xUfglM3bieu4fx0nHjN5BRV/2V/3FW+Baz7V8bKeV7YrTtY441N1/MRd/P/A
8vyjtQ7urusNnqjxvR23wWtSPExjpxR/yODHxHt6vW488z21/7eW+1fykOCW
ax09WuvoxI3qebpO8L7af6qex3UmPkQ+sbvYpcXvMvzc7NGKG4092/ZY8Wat
5H+xP+9Ybo+9xK4uHNXYNVVvaOyY4JroDaM304vpudqOW/AX0F/o6eyHm+r/
D1V7oI6n9zYeIHbB+MUrD3H8FR+o6zfeSlyAfxyuufX3T9b+X65+dX5y+c9H
D+584fJ/D16rcLkruCH6KL9T8Z1vFP5p/r97ed3Rq/t//uPi27bdfubxj//W
cnsFn1v1JNdbr/Ye7lxuj3105/L8ec6yG6YuZOGrmxe+eeDn/RZv5grOqvg0
B09zX7Xlp5/rtJ8eDqv5zQuHPX748kPO8f9keZ3N2t/Ps1n96ffRdlPzew4+
vPK05/2VH3b88cVr23VCh8+2/OjrFWfY7PsUfmn61Xgnxzdfb43vqdtp/93L
8zfru058pb7n4NA73tI8q83P0vj64luf71fjbZ63eN2bZ3WOr3m8Xs+zWeO1
+7VW/d+Wl7f2z3rTPAeNl2w+l+Z7af9B8eau5F20P6DjcBUP3Oz1per2Tls8
AhuFg1urvJbxGxRP6Kx3xT8z8oZ/vvw72/GLN0/u1NUoXG/zkK/wanfd0Mb/
Vnx34tnFY74itzve33y15DY/3Adqv/uQ4+IUH6nrdNs8PvSBT1Y/iie26+6t
8Ld33L5x1M0bf2ud/9G6/seX913xv7VfqvDhK3lRd9T/v7pNW/65ibtvw1fd
cn/kXK1brRdMXLnqR2z8+hvfb63Wk1mHW0/pOLn5XnlAjQtovpXhYyke+Jn3
/X4r36zrRvf/a/We577FB7PCG1x8Mmvtf6x44Ap+tvmq99V4Nt7Mj67zUPik
Ff7o/r/4Q8bP3/V9Prrc33kAK/zLv1TXL7zU6OUH6vr9nvSj+VS8D++9v1/l
JXYdgeFb/PU6zjwsPXa+M17Gut/Mj67v3c/zqWV/ZpxUvkPXC92o7clvbL43
z9dxAuPW++t8Q8c3Hsj3952Mv8YpfWT5vLOuHlhub7Qc/KW6btfPYMcav5Ej
gzeMHdzxpqmHTO7k1/bz2NeJKw5eUDyw6mys8HmLn1d8cfz3/P3inPz+7Pu/
v+zvit/f8XCj8Kb8B/IK+Re6jlvzsP7Ksu06cfwsXRet/eT7erv8QlMvjX+L
f0wef/ESD59y8QkPnp7/rPz440dz/fKDT1yh6y82jr3+H97j8rsPn81v13Xq
eoN7f+CN+9t47eZz4NccnPff8Vz8jPOe6r1PHGQbXoXm6fF9hq+k+BdWeDlc
z/fn52y+7MqPmHiH84yjeq/DP+357qn9Dyz7far6P7wazcPS46nzJer7zbis
PInd9X0nvlN5EqfKn3y05kXzV/T8aD6bFf7xek+76/mH56bjYTU+TvV29+Pe
5Xnj1y7ep5U6luUfXuGNMG6dxy/868v901Y+wuQ5V/7B8H53Hm7WxcEZVR7v
+Id/Zbnf/RrfM7iZylNe8S/39u3L7ZX6xMWzPXWjIy8mX4B8Ik/gYOD48xse
/eK9WMHBN46EfxkOg35JH6Vf8kd3vZOb6nzyve1G9hy9gH7RvJ3FN7nCZ0tf
7XrWndfauILt+GerDuFm+TNW/A/9f/FbjF7XfpKum1l+j8Y1Dk6i+Ueap2Kb
/NzpX+nDY5dVnc7xdzn/7mV/57nuWB63Wfr0dv3Zrh7UZj8PO67s0/Evlb++
8SjzPbseVPMtH6zzyu8/9nR9v8HNFO9I8yCPHVO8FvN/81oUPn/Fn1T8t53f
ucKbXDinGe+fWh7f/rCx59qua5xU5yeU/2Tsjtvq+Xre3r78f8Wf2Pwwzbtf
42b60/aY525/IHvlI9VPx9e4XfEvNm9OPW/z5Y4fsONUlZfRfD2zvrS91fkf
n3zj5x17ucblyndtXJn1u/lM277T8hvCVXUe0C/UtvM634p8uKX618/TeVjb
5V19rK63v7a7vuOt1X+4sPajOs+v7dsDdd2uB6aNHJ78wODNxm792eX/w9da
ceX5v3hvpm7G39/mOLjY5nv9B3Wc3/ry+MlTfN/yPlMvqHhYp7+V5zd4O3rQ
u+r+9BZ40uurX83rtau220/meH4639t32m4c04foU6Vnjf7m+11W/ej+X1/X
v76uf9myX82rMvXJKv+x8yObJ238E3CL/BJ4WrouXvG1DT5Rvi29Fu4bDhHu
EA7j48vrdH2a5olZ4XW7adn/0X9vqeconrj5H05jb7Wu/4Hl95v5UnmvnSc7
OI6ar4NT77oE+rOv5t0/Wj53148f/HqtDzPvbq7jrq1+GofmlXFmXBvP5g+/
m3nwC7Xd8zO/ue/Fdd8b6j7Nw1X5LZMnzS8XP9lKXdyq+zg/7yfvfdaVzo/+
+eX9VvIN+OluWvaj+ZPmeMfdvM31mr+w1v2uuzbz8IN1Xvsbb172ZyUPo/PV
b63nwJ/d87fy4Vfs74/VeXcst5unbCXPCP6q+ABmu+pDOX7qJ3YdscoHmjpb
lc/j/LHXnVe8Cc3TNvxsB6u/xVcy1/3kcnv4S35jeZ2j5SdZ4VeremGD3/70
st/8Ke0PGbxg1SvjBxnehcrrOlrnN9/ovOffWP4/z3HX8jpH67zBX/9W9fvX
l/1t/Pb4u7fx+0x+WvO+NV9rv79PL9vmlen3vDLe+jrNr1HvafzvhRNtnt3d
hStvvvXmxxt8Zj3P4PnL3z/8Ie5T/vH2l7cfeMVvX3758YsXP3bnE6z4Wxs/
X8dfVP724Vd+YHl/ftrxwzfu1/WbN6eeA+4ZrvlQ45LreNtHy7/ffEHjBy48
7nwneNz6PkdrHByt4+a7Vx5D++3nezd/YuGE5zzjzHWbT7riRJ3/sDK+Di2P
bz/1Spyp62AW/nv29/W14h/t/258eH2fzudYiYdU/GMlLmBe/1bdx/WLp3m+
W8mzfRVvWTlvmzoLs37X95v11DraPDwVZzxacmJ3XWf4tyrPhhxtOXOq7j/3
/fTy/vu2Wc9HjtY6O/yZnQf7qTfuT9cF3Vvx134f28nr0ZOqPuboPfJs5ZXR
8+h/HW/ueiriyOyl6+o8cezi9xn78dL6v+3zsgdW+DibZ+X62mZff7i2y78z
fhVxhqpX1niwuU75jyZ+sLHcnv8bx/Oxum7zejdvddUFW+FRab7tjj8UT+fg
tvk123/cfH/lNx2/XvG+rORNtp+w8IIruPvG9VTduPEXlt93BW+3HU7wpuX1
VvCAncfgPPZo+3XaLtVv/r6PLp97ZdwV78P83/7qxhl2XfsP1rbr3Fr3M87N
kw/UczSvk3n1kdp/dT23+3eetfnb/Frlhxq/Bx7s2JuTzwovY/1p/jL2qnWn
/IQrPGofWR4/9ip7kb3XeTrFo7zCZ8GvpI0dOuvlh+r++6p/5a/s/9svNX4w
djT7/h/V8xeOaPpV72He4811/1vrflWnaupYek/eR/vf1FuoulyTj/yxut/H
675acvG25XW7XvV2fCLtN5j3dKC+d42Hrtc1/Wm/RNen9hztZ8CX0XyIjZ9q
faXs27EHC2cw+WNdH9vz3FH9v6P6Xed1ndF571UvbeZDf9ce983vXf7T8etW
/tvc3/WrzsfU//jl5XWHX8R9ij981pPCz7V+Mv7w8psOn8je/+/zrYv2jz9U
23EF63jx+q3UHyUvKl64Eo8tPEHjECbv4uDyvN6/WXH9wcU2P1rH4TuuLi5O
Pyl+765T2nHzxqN2XsnUDYE/6Pj8dnloFXefupyFp1jJfyu9beLH9V4m7l84
3MZzrNV7nOs3zuHg8vkGl1I4i8FlFG6+62p0HZHJD+v8IXU88YJV/dHhCSv+
6t6evLnitZt8t+JDH17rytebvLnKG3Ofqe997xvv36jjZ7vuN89X9VCnvnzx
kHV+2kpeYfMMVl2VzRo3ffzMK/8bL9vgIUavazw2fbt4ysbu+WC1Xff5luV1
Rq/0Y8d9qP7f7nr+l4ezUfvptfTZm+p+763nc5w4kfgo/Vbcih1a/EizbotX
0Yc7j7r14avqOW+o89+7vM/EAYuPduxn8aWK/85+xzff1I9Xq3+xAxofv8Kz
2jyp7I4eT9vxol5Rz42H913Lfs/z8B9U/LXx9xN/itxv/OL4K973/68dPZhe
XHVIRp/dv2zpP+JerW+ebD266va0Pjb/V72e5r0bnoE7ltujx9KPWx+kJ+2r
57lpud32zcT16EsfrvN+cfm8e1sP/PA22x+q6+5djvPRv4zT8hON/dN8SY0z
oP+9p5771rrO3nrem5bjc/r/wWW/hheRnXRged8ZR4VXGHun7M75/l336O/g
Re/jh2+w/IcTlyy7qe/TPICTB1K8gR0Har9v467Hv9p+49/Y5n/+3ruXx3e9
hYlT3V3nNy9Txd063tfxvY7/ev6ukzR8js033/Ho22rbfC07quPZbdet8EA2
L1fbdW2nGafFL7LCO8LfC4+Ff778No0fn7wr67j1nVxt+dR8fc3b17hz58G7
/UK1jms+NtdrP6D/ybX2p5GHzffObvvlOn9/bTc+sXi+x6/c/uXCk674QW9f
njfH/Vzdt/2fH6zn05+ua/fB2n9LXc9z6m/V21upy9d5g/Ucc17nqTc/uev9
+vL6g9+lD3de5B3L7Y2yezfaXm6cfuPnf235f+OvV+oQblMPsnHIa2VnbtT9
O94w+n7z7N+2PG6FL6D87St8AdvxCt+0/H/GnXlDj+z4jfnZdRts0xvNU3q6
/fTv5ve/qbY7XnRzXd/5xje9fVddp3Ft/vfr+hWN3+zzer27up6z6teNvlG4
u+aBHP2m/VL8yY1XpEfzq3142Y4+1/7Zwm9NXZNPLrc7H7Xr9LYc3Fv3W/FL
9v7282b/vtJjJn7a/ttt6sHQH0a/OLjc7jo3K3Hqiifvbf3M/tITRp8vv2rL
39FD6c/03cr3bXnb+OuR2/CBGW9jP/oZt8UTPvvLTp3xd8vy+mOX/fwb92vG
6/uW/VsZt9v4kef41mM+srzu4GLVn6n1pfs985G9+q5lu4Lv9f68l3rfHRef
vLrSl6ZfpSc1Ln6+R6+rrR+1HuX70X9cx3G/WMfpT+sB2+X3yW/o/J9fWp7f
9UTGn9U8CcWn0XlczVPW/ETDU1L+ufEv8usVD9PwVxWvVdermPp+VV9i6jIc
Wp4/9QnwZ9V1N+r/8TemVfdBvUbnTT/US8jx6kV0nYmuuzh1IuxPPUV1HdVJ
nLqO6m387vJ/dRjVW7S9kVbdRsdP/7ap29j1GrtOo7oWw0vGX1t1I9bKzzt1
IfiRe3wUH9f4k++t84sXbvhumj+v8yFrfK745TuPsPIbRy/t65snxYczemf1
a6304Tm+9fTO59qu7lDxUzVfTNcfmv3NB9lxr+J3+TtxJ53HuPF3/E9/pc/y
b9MT6ZnWO+tu20t47q3nnWd0abXs1fxabo5fmt+J3Kk45+hRn6j/G59QeTAj
vysPpvN5+LlW8nx+sa5f/oPRF0u/bL2R3jP+C/iLjnvTq+in9LuuW01v7Doe
cPaF7xu97FeW5x0tv9rR0heHP3cbnPfw2sItFi6x/V+NVzzV/jXXaf9Y8ezO
/sLDwrsO7tv+rhu6TV3OxjEPr3rhXwcva3u7+pT3Le/XPBNdl7Rx2ivnwQUX
Xnb4Yhq/27jn+6q/9d7mvOKBGdx188Dc98b3m/d977K/g+stvpThWSlcvuMG
b8+vWX7SwdF2noj9xnXlG/CXGuentvEvj/+668tXnkv7l2e+/sry+MnnKTzL
Sh0i/vfCgcz1Oj/ok8v+dl2gk+1vr/pEK/0tvNjwfPDflr99/L1t195Z/e+8
R3Y0e0icoeIWnQ/WdsOs0x+u4z5Y/zdurOzMFbxLxW3Grux8x/b/Vt7yil+X
P4ec5Y/lh2SvNK6z8Yv+57eiR0Tv2Sw8xehThdtd4Wdsvaz8hit+vDvr+s0D
cGdd13XuWp7XvBmjJxbPyPCGFA/FRuEJml+1eRubP3a9juu6hNMW/gTeoXl0
h2+2+ZTZZY3PgCv57Tc+T3+HV7l4gzcKD7LR+JPGoRSeY4XH8jfree9Zbned
x/XeX8cPPsh3K97nwfNsw/u8LW+w939v9efu5XM1r/DwCxcupflUhg/57mU/
1rv/ZQ/N/+z4u5bXH3uqxvvwnf5qXdd85AdnP5jHxdO7bT1T9kXxbnQ8Y+yJ
qovb/vNteYiat7fzDLoOYdttFedY4dNxfNer6vfivTd/TMc19LtxifV+V+oZ
F2/J9Lvtzf5uzXNa+QMTLyte4ulff+/iw9loO3Gj+uP65FDjoMgh8Tfy58P1
/3vrfH614s+YeMfP1XmRo+2vnXhr5bev4Gk+WG3jJxoP03Ykv3/FB0av+eU3
3p7jqy7j3tIfR59sfD79q+Lto1+VXtf1TaYeyDb15Ol5/PkT56d/ln67Ut+j
9b3O06LXtT7Y/1dcY+zbzod3XuERJm6S/kz9xtKDR08tXFHnzc15ZWfP+2v8
Q+GYui7l3nq+0V8bt93xq2rHH5LzZl5sw183/g7xkYqDrPBbxG8z+Aa4vZ53
737j+6/4zavu6sQZ6ryV+3e+S8UNtsMPruTnVDxjJc7Q/M/WH+tO4/yan2i7
fKzmR+o8pgN1vHWz8aGN86DP86+tb9Ofjk9s1P/si5vr+I4v76vz9W8b3v3O
M5znz307T3AlXkJOdz3K5oum51SdmtETKk9xRR8ovETXRx59qvzHHWfZaLun
7R+87KWvdV2IsWsah3/H8r7TP/rjp5ft8NA3vn4bu2mlvmTlIXQdmo3Sb7er
F7PRdgh9uvHrbaf81vJ5Rp/7dF3/YD1/8SGOXl71Sjb6Pd29zf2Kd3+z9P7N
T7/x/db6e9Dzmj+/6m42//5aj9POe6WnVh2FwRVtk5/b+ZwrdS4a59S89eZz
8d/P/G4+/I9U+4k6/0PVdr7pB6ufXTeLftl8c1fVfbOOTfyffCj8Xec3dRxi
8NrvXh7XeZsr+JT2O8E5wCHTj+gLty23O99w/i9/Yett488rv17X/x4cauX9
r/D6lL6zwudz2/L4Ffx35wvqb+lHoxc2bqafr+pur+jF29WjK57hk6W3zXeg
35bfcgXnvg3P0+ThFs/89PP2uk/rv61n13du+2QF925cNh9C/b+C56780cmL
/UBt31pt46n4b/cv59H0q/Xg5pdrHP0Hl9dr/ufBux+o/f942a/pv7zjymOY
uNzGcv/M38p7bv60bfXSdy2fY6WeNzub/UuPtj7Sy5rXs/GkhWtcqQPUPA8d
ly786uhBxdO6Urej/RetzzVe9c66Pnxq9IETX8hx/yL/P7rVHj+S7c9tteMn
VN/twWzDW5C7ra/Tg/P8I+fJ764TRb/dWD7X5JHeU/e7admOv4iew5+r//RU
+kWeBx4FjmX0Jvog+Uj+VV2WjfLfjfwtvXz623ZE41RvrnFl/NBT3K/x6ewv
dknbRcZ14cnm/pkfo695H4UPGj+6cWVctj+4ea+Ng2zDF8HvwAf5LuOP7rxY
39848n3poRmfO/9kqz2i/aNluzPj/MQj6U/2n7A/4x9+ybg/8fnlfdY+v/zf
vIErGv28/epwVp7b+/Cdi9fXc8JnTZ1Edhq9jR6rTqJ5+tnahktr+6R4qkdP
rXG5Use+xyM7G+679VPbjYc3jyrPb8Zt41H5J8mtwmPQI0Yv9ZxVb3LsrruW
/Z757vtZV6M/jz5783L8wqltwql9Znm/iYuU3bZZ+L6JJ3lPkVuT58Y/xI9g
/GTe058GvxA/HD1g1rWu80S/7/zNHD/5bPxneA2Kp3X0ed+p6g/Pd8m65TsO
H2Dhp1f4MuiDFX8f/ca46DoZv7a8z+Rt/dJyvA3/u3FjXX5XPU/0mdFPiq9m
/HTvWR43z89f1Dz5LS98j5rvU0+s6k5MPVLz/Tfqer5rvtt8x5+r65Fj/GLk
NfnEn0XOdZ7Hzct+Wtfoq4OHbr6s5kkgb5pXmj7ofVmfut7Dr9V1PlrPIb5P
jnZcpfM0rq//r1j2b6XeHf9o56O0f9B3uWo53lbyrPNr/rSulzn6hO9f/Ayj
j7Vfxnvbzh/SPBOdR1R1Jme9uaX65TjX3ajz6LvmEz9Ejfvhn4+9MzhD78X6
9IFlP+Z9b1Tb48B98/06T4Z9Orw7WXfGfsp62bxPzRe0Yn+yqz70xuPHPBr+
RbyC7NmqF6efgx+EP/zEsp+dDz95yoWX0v+Ji/FndLzM9T+43GaHjx1YeKSZ
5837QM/2vawfzU9vXaB3WO+Kt3zsTnkWvj89ert6KZ+o+3Sdh6qTM+02eXdd
H2KlTovjP1r9ct3O72sei86L9Zx+XQdifXm/sXfbz22doL9at+CYyTXrHPs9
323sButM4ws87/66P7tDP6zvlVc58rLqcq6X/jv6nzqQ9LyOU7Wft3ktug4y
P651jDxwfI3TtltXeH0KtzN4DfZY4WWmLrg8CfXVHS8OUbinsfvgmFzX8exm
+i1/AbuG3SEP5tBye9ri95GXsR49uvMzpq68fA3P8zvL4+WryMOZfJbKU2GH
yfMYnJjnF/+pOqzjrxA/8Z70h37fcSLjwrimd1k/qt7SdnjDrj81vFbGOz3s
+rpf43Gybo5cKj905wUMbzp8OHwwHDRedP7u8tcOftd5VR8RD/dF4bHGmz14
Z/za+K0/szzO/lfT7ndcrvfqZ7faYw9ttc/Z/t3lfV9Nu7/4wV1vcOhp8W07
Dh+3655V/d3/z3Kfzyz7+5x+5/7H0r+zPpf+PZj/076a9mr7P7e8/kXZPpbt
Q59dvoez/lm9j8/X9T+7fE/Ov/pzy+OOfW55vP/1y/XPyvahz1Xr/7TH6jkd
99znlv32/s76TI2jvMdj3qM6lXD37OP7lv/73oPLh8Mve3p494tXmp06eRzN
N164++F3FC+C13e96FmDv8YbhG+k8kYGTyMOQ1+r+Ij5Pryq0cNGH22+nf3L
fqzgrOmnld80/n5+ej/+pY6/WrcqDjryvPCpIw8rbj3+LbjTwsU2/93odZ9c
HjdytfLdVnAT9LfWQ7q+W8eVC9ewEj8vvMPolfz/ty/vM3x/zedX+OnGGzQu
Gr5g/LvOb3x14REmX5W/svDXg7uuvMjJl63zBj/NX1e4jBkXjbf3nM7zvro+
eOFqV/i12/4gj8nt/MYeKbtx5mvl5Y8/Xrz8F5fHTTy467mKW3a9FeuHdafq
XpNL8q3UhVAv4qySM7NukxfkB3lh3SYnIjee+/1cJ+2x7L+aXPmD/K/9w5z3
cK6T7Vdd5/eW19//0LJ9teSa/pIT5Bk5OceTwyW31e2gL1yU454rud/6ztQ5
6Tyxyt/aXTiAyYeqvKvBC0SejD+DP7b5kcRNxT2zLkz+QPN9Ft/75Cubf6Uv
y7eWrz1xhfx/WLwofu+Jc2Rb3M3/JxIH4jc/LK/7oRwn/qJ9aNmu/V6O+/2c
9wfZn+2N/L8z2zv9/3CukzjQerYP9/mJ82zW9V3ncM7b+cjyujur3ZH40uEj
y/0bf5j2keVx4lG7Eq+d+GzazYeX/VrL+RuJZx1OezDni/uufWF5H/0+XPdz
/z1p1933D5f9PyyO5nmPLNvNR5bHnXDeHy7f50n3/+Ky3zv/8I2/+4l81z1p
D1fcbuxEef4ZX+zJdXGZ5lco3tf1it9N/pH5Q36wr/hb2POdj25eigvA5XZ9
s+hn9DrrzLGyP+i9F2U9o1dfnfXy6qyfV2edtS5rL3pkq33rka324bRv/aOt
9povbrXnp30q++/847R/kuMf3WpfO7rVvvxnW+3Zf77VvvPYVntD2mvsfyzt
41vtpZtb7V1pb0x7Z/5/Ku3T2X/Jv9xqz/jyVvtK2kfSnlvbd31lqz3nL7ba
x7N9T9qnc9w5aa/9Uvqd+56d/t6a53j+T9P/vI/X8n5ezns8P+3ZeX93/vMc
n/a1vL9r0r6c9uH8f3bah7P/hlznuXw38vG5fN9jkZ/kK7tpf+Th1K+KX5Ze
MnIj43b0zqz/1uMTmY/WiZPV7rR+ZP3ZzHzekXYt7Z60J9Ier23HbdR6tCvt
hvXJfXP85j/P9p9utUeObbXnbW61138p90t79F9utZd9Oedne0f+3/l4th/b
ag//ee6bdtP+tEfs//Pl+Sfy/67sP/jny/7tDR7nyNE8f9qTeZ6Dwems57nW
c/zxP0t7bHm/43XfK9LuSbv+2LKf+r3hern+yfRjI/ffmxa+4mS+896SS76P
dfwKOAvre87fmec7AYeU5zuY+x/+02U/NnPcScenPZjrHM91N6vd88d5r2l3
pV1Pe6L2r6W/9IIT5H3k2GbJvRMlD68g7/P8e82DXP/IF5f32cxx63+0nB/e
GzlM3zhMnyHPiscGvmDyg2OPi1s3/pR9MfGqytdeqWMhj18ciT8jevHozfxA
kUeHrE9pL876SK68NevcUyVX3hm58lq2r8m6e3HW43OzTl8ZeXB61u/Lrftp
T8s6f0bW/9P/cqu9Me2DaS9Ie25tv5D2kSdy3r/aah/46lb7zNe32nOe/i/t
xrXHt9pX0v7+Vrt2ydb/a49/fXn+6bneBbn+denvdZF374xcfTny562RS6/l
PbyY414gD3P+A3neS3PdA2mf8Nz5/9y/WL4n7/OFXPd75G7e97nZviHy/IZ/
kf5Fbj0WufjyFzIOYq9NPcLoNfxYK7xqiVNNHKzykeHJxl7IPKVX0xMPP7ic
JxMnym/GPXyM+Ix4mriJ62ZeWoesn0cjZw6nJTc2ap3fm/XqpHlO3pU8PFzr
pfPst74coadnXaDnHv6ny/ZEtXtib62zp3I+O+iK0v/p6WtlT6zT7/O+x96z
HlX8Z/xQiWfAE/OLjp+Z3R995oaMo8eiBz2f8fUwPTX/XxT/AT/5xA3Eu61/
9GzrGB4V/vzDy/7wHzz3e8uWn+Oi+Bn4K/Y/suz3a+kn/e9l61jm9VO2s97R
/96Z9fFq62fuY70VTx98Fr+teHrxs884x5chvsl/1X7N+L3MT3GcqRvLz6G+
Kt4bemZwGYOThlOM3cZupu+R1+sZ7/SPHWk3ow+cyHwavSZ625u/stXueyL/
/6vMn3+d+ZL2iuzfk+Oe/Ivsz/mXfWk5v+mVu/5kOW+P0yPS3x3p3xXp3w7z
P/rVQdfJfvrZ3rTH055pPYk+R29by/YVx5bvhT68zj623vELwxEGp88PNThB
/kLjn38v45k981jZM4+lfWvG72vkQOTUy5EPd6a9OHLr5citO9O+EnnyOvkS
OXZl5NSlkY9n/Ovsj9y8IHL0jKeyP/L33G9sta98Y7l9XeTxV9N+LHL58pz3
Q9l/SY5/IP8/mv9Pz/5nctzb056T/ef81VZ7adp3Zf9paZ9O+2jar+a4+761
1f5A2u9l/++nfSL9OD3PecbXttq7ntxqb8v7Io8fjr70MPs03896dHbWmZHb
Of5+bb7r/Tlvf8fn2JUZP8O3X3GykxWPgkMav3viAeQOeXck82RH5t9DmQ/7
zMuy407Gjntz5vGZf5l5nPl9Web77sz/jWzf/mTun+P35Xp7/3w5v/ZG7o/f
Lv3lXxv9Pu0e9kzm/Z60h9lrpRfMepH1Y0/pCexffrONyO3DkbfDfyneYd4n
XjH5QvBleA7EM+Of3h+/Er39ooeX89944G/gZ+JnwING3gwuWFytcTniMbFT
xBcnXiL+iA+Q/IEzeGDZb35/fn5xfHxscHKDi4KTiTwa/yk/Qq+7GRfs7xM5
7op8t70ln/gNjmT8PpTxtRE5syvj9Wi2j2YcX5XjXsp5u9Nubi7/P5rzr8o4
PpVxffKrGU9PpV9P5zmO575p96RdT3tm2hNpv/WNrfZv/yrHfWurvf7fZDvt
d7+Z+ZfjXsr9nk0/TqV/Z2Y+3p759lDaU54j2+fl+ONPLufp0bQn0p6X623m
/e3N+3sp7+f2vC/+kOP5Hif5Ocxb+gc9mh858Tx+suELhxsw7sTFMm9aXz0/
6+39kX+vxL66kP8x7SVlf54eu+x7+f+WtOy0R9K+nuNuy3nfi513beTlpZEX
p23Jj40fidz66cihCyNnvpz28W9utZ+OPPqztLelfV/aB3PcAznvwVzvxeOL
+6zdGLv3rrSvR54+nuPuynlv+atlf3467d/k/wvSxp7euDBt5PbaM7n+LWWH
fyftZ9L+zfHl9e7K+RdEvl6a9/ZK3uNpf7n8PhdmP7/zY5Gjr0bvtz4N74e4
dMW7rTt7Em86IW4mTh7cORwPP/2xrLtwR/T/seuyjvFrjR8vcmet/JiXZb7s
oj9nHp2XebnPfMz6sutr6Xfm+UNpj399q92ddlda68CJyN/rs70r7dFcd1/a
tbTk8pPpz870897M613sgDzfFZGb/JXkLbn+kHWi1psr0lp/6d172SPsWv6/
2Lfi6+QP/9ahR5bf6+XM/2vYexkvd2b7/uhtj0Vvpi/Tnx+Lfi0+QP8WP3gq
6ww78/zocXe6Xu73WI4Xtzg/7cX8cFm37s/2DTn+7PTzNn6mrF9PpD3wpeVz
8NPx47kPO5adLZ5tPpwou9C6vM7uyvfm7z4ZPfAEP36+74m0a+y5fH/+Gefz
x+/M/itynYPGXcbhjozjoxnnJ9LujXx9Ke3uyMtn0x6JXDz811vtqWey/9mt
9rP/dqs9Vu1P/LtcN+1Faf8213ko131T5O2rkdc/nPtenf93RD4fjtw+lv13
p70i538t578p55/K9sk850bNc89979eX8/7JrAu7Ms93RT4fz3s9kfe9xk/P
Dy7uHr8DvyA+XX4P8Ul+FOPyexl/L5CjkYcvZr2+MnYSf+6lWbcvKH/p6VnX
H8nxl8bOfCTy85Ute3PjPZEf7yaP0r4n8uryyMXPRE6+46+32uue3Wov/Xdb
7enf3mofSPti2rvy/7tz/Jef2Wq/mvb0XO+Hcv0fzf3e843Mx7KH31J2a47b
eCL9PS3XuTHtabn+jbn/29OfR9K/R55Lf9Kek/bcHHcg50e/WLsu71UcdX/8
dMO/Jb8rdgE5uFb4AnbWnowf6zG/pnWE33bil4W7mLxe94F3gyP/w+U4pe+z
P18iJ8jLrBf8TKcyT/Zknv3YXy/n/Ubm8/u/vdXenPYn0v5g/t/p+MzjH/6r
5by7KvOLXKTfWif5pdjVV/AXia95Lv6mXMd6el6e61n2c+b3zsht9vSO/M+P
xp8lXsze4x+EG3sn/EHk4/nRjy8nXzJfL48+duHXl+P4M/wsGf/3pf1PaflX
4qdZe/2ry/F4V+4jrn9x5NXZ2b6APyrHiZM8Y334Wubr8eW8/37m0ZfTXvpv
Mp8yf2/JvHom7S3/dqv9YrZvyvx5X653Tvr/Qu77SPrzWuTtren31ZlX9BK4
f3gXcZDJFwjekX9eXFE84KD1WVw08wbea/IG4YBjVw+uVr5G5uHOjL9TmTdP
khuROw9lnD+U8f+V57faM/9D5tF/3Gr/q7QXZ//LJ7baz6V9U857LvJ0I3J3
T+bhmyMPyWtyfS3tOnmf9vrIu9vJ/5y3M/39Sq5/debrq9n+Srb35HmOZH4/
l/bH076afu5Muzv93J35frjksfl/OHr53sxbehL8LTkKV/l89MAzMn4uiNy7
kb814/2t9M/ocfdHr4SblKf9asXz+Pvh798p7pHrkct3xQ69LvPz3MyTCzI/
vhw58v3IlSee/y/t5oMnttoX/sNW+z+l/W+29m+85YXMq3+/1V6S898WufX9
zLMfyDy7MPPs+2k/nftfl21y7IXsvyDnk98/Xe3bc79vpr9fTH+fST9v+Y9b
7SXf2Wr/l7S/9h/Sr63zNu5I/z62Nf9Hnt+SdUv8VZxpeI3ib32ucKxwttdE
D78/er48k8m3i/w8rH7P55bjaXDtkdfwAsYDfAC/Hjm+IZ4T+flkxu2zGdd3
Zz7+Qcb9ZZkHX8n8+IPn0q9/v9Xuz/z+lnme9uMvbLXfTXtW9u/KdQ5mXt7N
TxU5xm/MHoa34ScSj2EfHuHPyrpwc6733TzHwTzHc2n/NuvEc9EHvpb1Y5d1
JXJ8gx+bHyv3HVxM5vfgVBOvg8M4P/rx4+y0yM8DW3Jv4hu38Kdk/t0YPe3B
jLMLI2+f4H/K9a7J+nFx5rX456vi+7HvxP8fzvGX5Px7ss7ckn49nvuIr6Qf
G2dkPXgh8+/PMh/+JvPv6bTX1jy+LvLyI5GXVyZudEvuz37gD4bbpPedEO+P
vT/5jPiDIscGr5Nxvc7PH7tyV74bP4t1eSdcsTh49KLJj/j88nr8Lhvsyowv
cuZnMy/+t8i9w5GL13x3q/2rtDvTXvydrfahHPeXkZ8/mfaytE/lenszf/Zm
Pv5wxvHPpD/rkUcXZR5/N/v/IOP8Kzn+ZObdveRb5uPx9P/Nuc/VmbefSnsy
+5/MvD+Z4+9OuyPX2Z3r7sp9nsx7+lT6czzz/KroHeuPLt8/fVTcDL7U+Of3
O43eaB1+crn/exnfcLD8gfISJ78dPjh5Ilfn/6cyb27M/R/MvBUvPBA98t0Z
/z8VefNo5N1Pb8m/zd+M3Ply5M6vRO78n2nvitz5H9P+X9l/R9ovOC9y9a7I
1RdznxsjT/8s/bgn8/CutG/J/i+nfUfk43fSXsrOTfuePMd30r4rz/Hr6ccX
0q8fSH8fzfa/jdz8dPr37dwvduzaOfy5+S78W3DXXddX/OoxOOgcLx8PfggO
Cf5+TVxfPAiuEx4zLdwnHAP87GFx+8T7dkef2xd76w/MN3pr5MqJtGfSN9N+
PPPhssyT/5z59AuZ37+V9oR5n/XgA9m+Ksfvy/w6lHn85szznbH3TqWfcAxw
UC9lnj0rvprnOBl5t5l146Vcb2+e74psPxv9VhzreOE2due65PZVuS/cLHtD
Hv+d4t7RQ+HMb4m++2LGx+OZx2fA5ZVc+pvIl2sjb3404/1A9MMXMj9/KG3k
69r34j+6NuvJNbFz2bsXln15T/rxQOzLRyO3PxJ5/SORj+9Jy8/0SO57Sfr3
sWw/mPYH0s93pN+vpP1O9v+U9SXy85ysezdYzyLn8Zn4Dc8jXg9+HXwTeF/w
EuFty/yB5+U3OOh70n9KL9vgPxQfJ4fho6Nn3p7xcnXG1wZ9LOP6v8t4/2zk
4vsjJ38w7Xuz/+XMj1Np/2H270h7q3kUefWzsfd+Ivd7MvrhZlpynD36ccdl
nm3SI9Oeyv6zyp48lPn9qdz3UNrvRl6eyHPyM/9Mzr8+68Sbc9/vpl8/nPl3
Webdnsxj69Xh6CfyXeW7HYuceyrj5Bx+2Oh3cLHvyDx62zcW+8efQl+UNz/5
jMGVwNmJY9yTecxvGxzuxj3wP5mvT2Q+XB75c13k2E3sxcib/z5y8+tpycFf
jLz587RfTHtj2thvm5+IvHw6dtwP5D5fjlx7y79f3p/cvjLtp9N+O8ffEvn4
7fT7grQvpr1w6/jN/zX9PS39+b/TfjTy8n9I+0Dk5fdzn5/KvH8RDir68uNZ
j+C75BdNXrr808x3+fKDA8Q7p95AcBY7ozeL34nrPZn5uh75uH50Oa/JRbyl
/JUvwRFEXlyWeb6Z9rsZz2vGN/054/6qzIuXMk92RO79YObzX6f9e5n3t6Z9
Ku1/nfbm6Mvjx818vdl8yjq0KQ8FfiTrlfVtR/mV4RngnM78yvJ/8Uxx293i
pGlPsUPkUcSuwc8kL/epyEf4bfLp8cjFe+i/kUePZH5dHnnxROTIHRUnuDHj
7O2ZZx9Je3rmx+kZ53fwq/C3RM7B3z0SPe6V+I3E88/NcZek/Q6cXba/nfl/
R+Tj29Pf9+Q+9FV66U8/t2wvyXM8nv69kvPOiF/mnvSLHSAOeis7WZyKvyXz
CP+DPHLx5MnDjJzjd+CPX4OfSStuvc94yPjitzgRObkr318+1G76Wcblkehl
f5t584P0vcyPdfZX5sdjGe+fyvz4mcwD8nAz7U+yQ7+znDcfynkv5XqvRo79
WNr35n4bkWc3pz0v+9/PDsx8+7HIwx/n701LTmpPsD/TPhR5+Fzk4dfSfotc
znrxM1k/4KKuyPu6Pt/hIHwY3F/WrU15xeG74Je7NfbF2Zlnk38S+fXtjO8D
Gf+3wO+U//9i+Nr4acVD+Xf5P+BtzI8fybx4IfPi8siB92Q+fD/bj6a9Kfsf
EQ/kf8n8uCPz/IXI0QsiDx9P+6Np3xb5+JnMf37a/0Q+pj0t7YPmY457IO0z
9uf+52T+ilc+mnl+R9qPZd7ek+fhv/1MrvdDWZceSf9/PvL09PT3R+kJ6fdN
ae9LP34q1/uR3P89ue+PRv9/IevEC9FT4CLwih2PXFwjB2PfsP/Og0OIvQOv
MPkY8ivkK+NTwycSXBA8Bb5keJn1zr8WJ4RHt/6kHycy/j+VefGmzJf9mVdP
Zn6emfn9w1kvjvHPZh6fJQ6S896U+fhS5uGn0l6U6/9x/Eo7s04djJ4q/gF/
O/HjxL/g3eFfh6c4eNnJ74cLlE+Q930i81xewZninNZbuN28Z3wQ8nbhE87N
fHw6cuy+zMd3lJx6PO13Mo4eyfj9Ztq/SXtuxvPr2f79ilt8Nee/HX4veveV
GY8vZj3hl71WvlnWJXgfeXb3ZF2Bl5BPdpr4bNapW/J8wddvfD/PeS3/bPrz
RNrXsz96xax35+R+5Ca83Jsz/uV38CMcyXg8nnZfWnG04/yBOf5Jbfa/13jO
ONuT9Z89tjv79+X4H8v5pzJP35zxeGa22VM/k/Pen/H8g5kf9Mb/yK6MvPx/
0h5K+yb2aNqb//et9if/j632v03797J/Lcf9ZOTua5G3P5f7vZ9cTT9+OPLx
s5lna/Tk9BuOaXf0gifzHD9rvmfenpn2ofxvXTie838w1+UX/i57XNwn+38s
x/9x3h9/DznLb4ZXT51scpX/9bqMW3mfT2T+XZK8kdsKhwpXCrf6YOzT5Ies
XcAvJH804/Oa4FqukXcRefxA/n8g8yx5KjMffiDzU7zxLZnPF0aOiG98Ou1H
IncfibwR13w87e9HHl3OL5zj7st5t8ARWW8859eW/bxWnmu24afY6edmvr8e
e+BteW/3pL0SDjh6+AH6Bns88/7Tef778vw/UusZfR0O+EfT3+tyf/mtt8lb
zfemd8NDyAcUJ5OPgpcNrhvPDT4SeegbWd+HbwBOF4+VeBH8ePxbw2eZuOrk
P1Zdv+EnyX2OwyPiKYi+vkHv55+JHIbX+1rWr29l/lyW+bYr21fF77op7y32
g/yBe7N9En5eng28rTwWefeVBzf5/Xlv8vzl08tXxQfgPQ9/TPxLeFumvoO4
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
xG/JDwu3o94bO5mfl17Cr2QcHVGfTp4NPrvUYTkaO2fqy2f9UR/GusF/K06t
voX68VOvhf8fTsi8N07DbzbxsOBQ8S/z467neeGLrYv4Xw5Fj8TfB1/wXH0n
67Xvg3/N+j51i8yX1DfjJ5k6WYm7jx9DXnXWX3bl1DWMvDganPLgl7MeiYc8
nO+lTqX469PGfcYhnn9ySB0BPP7wmPIcziaXPDe9Gd46cod9O7gL/S89m7zC
z6yOibw6dTnhOcVv2Uf081vhqOAW4EXgL+Un5Xz4/f38o+Rx4cbVKzIexQv4
iYz7kYPGV+aPOhxw1cbx4Nu0+Y7ssvZzdZ1U+ajk5hXq4EZ+8D/x+5GT+Dl2
8vOQp+q/4cWBG8OHA9/Fnxo9FM8H3kn62tRjJ+daL8TDpe4FPxf5CRfE/0Pv
jL9tEw+eelbixfKLolfTm9XJVL9rDz5WeWOdlwjHxO+a8/mj3lz1g+DY+XkP
atV3SMu+2J3rj5+c3s0vpz7ENv+zn66yH5477x/+evSpjLPhA03Lzpd3R9+z
LtOfxM+sl+KiZ2UdHJ6ZjFf4Q99XXeTRu+OHMJ7hjvA+8xuP3y73p8/wA9Bb
nD/zhlz77PJ90JvIa/m5F4vbZR0S16QHTd4pO1beqPmddRsfMf/Oxu25nzjm
F5b9m7pke5fPt2ZeZ76oKwB/dizrFXkEd7bGr/67y/PUeTZP1Xn1fdRVhbM9
GX/l5B2Ln9Kr2fXhGeU/IH/5S8Uz+RHk11of4djJh1ORa/yq/FzwfHg1xa/w
b9BnJ+8m95V/AxfIDzL1S6M3qu8KZ0fuwQV6v/L+6JXwXvfIc4teenH0JnYb
nB6ckvpU9Eq4ZHo1efNE5BU/6hNpxZF3ZDzSF/iPkt8Lz7Xxo/Hnql+FNwpP
CR51/ubr4OKjL8Pl86PKe1CHkb/s8Tzfi3m+pyJ/yTv1zNVZwS/O300fl6dA
Hj9WfrXHMk/hsPgB4TT4a/l15UXjxxWPoR/K279c3a08x8vxo/JzbbJD8URm
PeEnxY/evHTiOvwN8OL0QnVK+EvlmbMbHceuMh/wIeLdl6ep3uXwvkZOTn0/
8z7zFy4FDg0eTB2vHVXPiL2wmXVv9Njo3eP3gQeHF1OH2rqSuKD18Ti+Deur
PLKsV6ci7/B20hvkHbDfn42cXaeniFPx01UdEbh2fq0r0m94JnFDfiJ5TeyT
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
hx2ddYidCMemjhmcPT5A+jU9CX6a30R9G3lW1jdyGe4G3wD9ip8avgwPFtw3
vUPdMjwO8Ljr/BD47eQ3ZHzIG/c+4HLwEvNDbsQeOsjvnXHADjbexemvh7PJ
eGcPq9crT/M/xx9zOO0+fHiJ0xi/8hg8j/wSflz8ks/mvoeOL/vJXwB3cLzq
WRzOe4QTH1wmP3nuc1JdE3I0/cLTjHdp+PQSX3gnHEm+/8Rlc//L0sIfmb+7
6MG5L70UfmSup54rnuvcnz2nrjJeAOs2PLr1jR8bHoz/lLyXDzL1bfiN4j/g
h+E3HB4GeSqRK3Dnw+sQ/Ytf8hC7Lc8n7uV90yvFddV1Fr9hB7HX8Tc8Bf8S
HjU8OXBp8Meeb3g4g9eWZ0l+4BuSz0WPnXz19GfiupkHgx+PXsMP9tZ8V7gI
+HP9ZF+q4ynPBQ6a/gA/+0zkN70IT4F5yb9Mv5g8Bvw97IfYC/g72KHyip4l
1+ABMo4O4OPNvMfXjIf9cPA59IDLyw+AP0c+Jvm89pHHF+9RHF28Bc/K6Afy
POXRZH1hZ4gLss/5y9VT5t+8Ousd+0+dL/xw6j3i8b9/a/xtXBg/CP+HeM3h
rFf0uAfiF7znW/nOeX/8Z3CS7BP5Fa/jtcx7Hvxe5o24P7sUD9a1idc/mnj9
Z+I/OSBfOuvF4IvhI4r341j0B/w66pSoPypPWTycfqpfZ8tTVu8444seCgfK
zoD/VTfN88tf4ddk37n/bTn+Avp35h37DR6CP8P4gK/A5wOXg/9o9Df5q9Fv
jRP4Qn5oeHN8IrEbNt4V/7E6ITu+shwn9Fr4MDgNfmB8leTX6I/RJ+GF8GFZ
J17PdeDk1/Le5A2v4+2NXoF3CK+C92z9uAEPI71QPmjk8lF1GTKv4t/c+Kn4
39gdcAlnqk+Fv5BfKvr3OzMu5AnRg/AQHs15g3cqfq6Je+V+8tT5WdiHw38Q
vQCfNz1kM/0SJ4K7EV/m/+dPGl61vAe4Wv4e8QhycKP8J/Bm9Jq18KbJU+Df
xJPLXscvJS9bXhb+Kjhm+C/2dNazkdPDi5Lz8QRYN9hv1l14IbgQcV11Xtnb
cNEbeR/upz4NfzE7jJ8Hrlrc88St6S/ch3ULn1JafHPy0GadjF8Bf/Hgy8VN
Mj5G349+wR8FdyD/DO8EPW/a+HMHdxR7gJ9KnQa8Y3gpXQ+f3tSlyfbw+31+
Od7wvcvvp1/Df9GDj2Rci+vC96iHyj8GD+O+9EHyEF4Jrpg/hD8Ivw25eSYc
hHw4/ASby37gT/Qd4BjwL/C30tf1h1+OH3Hec/RQfixxAv4R8xN+ipyRbzZ1
GNlZ6jRGz+PHWicv1B+N/SQ+Ofn4/JaZj8Ovha8t8R/rMT4XeYnw2Ox++b+H
yk8HbyUOZx7D14vXkgN4qsQn8NThCYWXo0fa5memR7E/Bj+OLzf+rOFJgPuO
H0S+LP4XdVUO4wnBK5bnn/oLWR/IxRvV09pc9n898uK8+D2s18/nfupn4nOT
N00PYv+Iyx9m12V80aPhJl+md/qeGSfsr2uyPoo34IuAzz+Fryvfz3q5P+9J
3pj1l97MLy9/cw/5k/fIDjwWP5559BK8UfRt/Cry4elrxuXw+BcP6uRF53nh
WnyP8+HV1Bnn99eGJ0q8/C7nwXPkO7B36M3wXe7zTjzbGZfiYeQRPx27kZ+d
ns0um/o4WadHbxTvY3+n/jA7RJ4y/BpeLPNSnEo/4MZfS78fTT4LHD6c0+GM
C35QvF7sWuPi9S15uvFDsVPgbtjz8Cvq1rOX4OEvlafAboYDiT9EPEo+JH2f
XkXei3uqb8i+njidOH3xmbmOdVqcBS8v/zA9Q13rzVxX/XL4GvhG8X/rFnlq
HNOL2ANwRHA9g+NVry08x+rz4b9gd/IfyufC68c/xR4Rr+f/oG8MnjXrDf5v
cnf0uYwbdjE9nv5DHsLReQ9wscYnPI91S96ocT56UNbtiVew39WRgiPE75D3
jR/D+jLrCd69jGd1Od1f3B6PAN45fmL2uvxX/m91px5mb+b94vEQx7c+Ww/4
GcQHBneApz56FTnFPoDnXy89Un4KnhX9fzbjlJ+aHHyx/OF4VPG00RvoBfxv
7ALzceLMmTfiKXhy2Zni63A8x/Ke8Rpbz8kpcgjfv7w494G/VJ/Wc9ErJt8r
fgNxMOu1utHyH+Ql7pRnih8+27dW3FR9Hbzq6vPQ0+jfeIHlieufeDB/0fBl
RA7QI42L8QNYX/E2lN5KTkw9S3H89AvOEJ8QvO86O9T4in3Ovzn15tSnxN9f
cVq8g+J68qLoa/J8x38cu2n4HXNfeTX4Eaa+Ttk/+zO+5NvIs6GnqCuK/4x/
AC8EfwA/jjxldUA3Mi7FQz2fekeT/xT5cnHsb3GfG+hfeMwzriauF/8AuQWn
Yj6KRwzvrPvlvdEfp44ivE34daYOed67uB+/m3rB8m3ZefwgfsOLE7+vcSYu
BX9PDxo7C79dxv8NWd/2Rz9k/8jPsi6Lp1vf+GcOZ90jr6d+QOK0/Ajn5zuw
e4Z3E59O9CJykT8bnoL/0newbq3dlOvg4c64oDcO/hbfUsbF1IGRJxe9Tz4N
fy17E96dnTh1RvIezB/15dkP/Cv0Dn4f+SzmCz8H+01e/Sa+UnntR5bPQb8n
x+DX8fTK+7O+jD1tPCS+zd8P/wPXqL45/ha4Frxxxqm6KRO3zLjdgU+YvZ7n
oB9N3nveK7t26knkvnsTj8b7o56HeOLYtUeXzzf+zhwvj4l/gv0l7g2/JF5k
vWT/jrznL8En96Xl8862OOFNy+ccHJD3qv/lhzzJz+I60bvwfsr7N7/VD8Rv
Ii8L3gCuEV5o5KN6bvh40pIneDTZE/iA8RENL2bGOT8I/xj80hG829En2Utw
oPR4fmZ4IXwxL2R9tL6Js4prG5/qtok7WTfYcexh9U3Un+E3ho/HM6ZugfUP
3/y6+hb0m+SLyFOEcxU3ktcsjvgYOyZ6AX8dHqrT41d/e+qE3RT7Ttx/5DD5
EN4ZPFh4Ay6NPSgeRQ6SP/RXuB04TfmjZ6ivBnec94BfAu4cXw8eCjjk14Mz
uTLb8mnpj/RzvP0PlF2q3sPzeV/wx+wuPP7yudWdeDo44KeLd1idAHm07IZr
0u/EezcegSfOe3gt4wFehh36NJ4iOMs/Xb4v9ePhtj3vvtj55CReQ3g0uG15
seeKQ+M3yvtSJ3fyLNKfS7eef/Ij1PGAq+FnODvnPxI/xFsSR0ye38Trpk5v
WvEzPJJ4B86oen3n5PnhGMSHh8cx56sv57vjo8LbE/6A4XO+Bw9Q+vkEninj
7mvL4+Uz6b88dnzN8iTg1U/Le6QnPYV/iZ2Z9wifzA6Vp+C74tOS/yIfuOtg
8FuLQ3wv7wff14PeV8bX+G3557KewwXC58vPYV+zI/n9D+OlVY+cXBaHwT+o
3llwx+Q+fhY8Bnj9XE8c8bWKt9IL8MuuR4+euk2xO8QlrNfsNPJ8B39H7Dv2
mX5NfaQcp56BOg6Tjy9+lvWYvCZf1UODVxevYG/SQ9lLUy8o8Sl1M/BUwgl6
Pnmm8IV49HfmffHzqkeqvsvYR/HHiCsdl7cZuSuOK9/F81qP4dFnfZY/Hn0S
Tvw4Xm28lvgJkn/HXw8PKe7F76LO1MRbPXfsAHo1/URekDrLE4fL+/HcUy9N
nYzWr7zX25bvH55LfFbez+C94SejVx0u+w0fzdj3eT/45eRP4Omgj8q7Ur9F
nEn9Pjw1/PTwqurem+fmxdRPhkP94+U2PiK4Sc839cTyXsfPh58Uni3Xw481
9bai94j7yKOiF7ELNspO8/2G9x6+OespfOIm+00ebeaXuDC+tOGPzPp26t7l
//Bfe+HVY/fxo0+eUdZXuFt5jPLO4Mzx+PFb0QvYsZ5r9MLE966mh6sHlO9P
H1BHiv7Izymut3lj+hf/Hj/rc/G7qU+wFj5z6xj/q7i7eCM+Q3wp/H14a8Xl
+LH5o2a8R++E8zN/xIfwyE88IteRhwLfbX1jF7J3d5bdSt7xt8l7wj+lHtHO
8rOpv6MuDjyWPHw427Eb+Tey3t7LvkuL934n+xy/xBeX++W/tH2HJxjuFi5W
Pj2cAhy2ugJT/xkfDZw1HI/6W/HnsmvlbQ8fgTxQ+Od8T3Fc6686NHDc45cl
d/+sjvtHy/GjnsPEk9UTsF5/Yfnd2dtTP4O/Hs6FX7L8KvyVcDvy0D2PeTzy
XRt/EP5M+gMef3nv/OPjFzUPMr/Md3xfp8pPfPLRZb/h5+A78V+9Wn6h8Z/L
CxAn55+OX40dFl6PwclYN6euVfxq1gnt8J3KD4y/wXoqvmVcmIfiONYT9YWt
v8bBvopjsD/E5fGQsr/FueGj+MvIS7wMwzOf88UhrPP8rvP+g9eAa34rOybv
TTwZL6R6U9YRfDBwcvoPhzj4Zzyv6hrG7sSfe3bsDvkB4vv0L3aK/AX8Krfg
m4mdI2/XOOXPk29xS/Gg8g/w++IZ5B+Br7yLHRc7+oJchz9DfQBxeDwW+GPg
G/G8Xoj/P36MS2K/4T3mb5FXgj/vgvT7kvTj9PTr8txHXjHeLXE78QN8yI/E
Djv9L5fzxTiAZ5OXB7+gvgLc9uBC5bPiOc37wAvJX3Ug2/gy4f/f+fiyNR74
y/kX2JuTvySOl3kAzzvrBT+49eIX0ybOKx6/XvNiT8nHM/HB4m2K3iU/mV6g
ri09e53eLa9BHa3cl77NjmCf8H/BwYvnPxR5S/8Xt6aH78GnEz39WXXtcv6T
7Dz6t3rU0eflweLPZE9OvmLuLz+J/ef5pq5KWjxXG6UP4PcjR+FZxPHU+cXL
4jjxO3ohfB9+evh2vKHyZNXnORUcpDi8bfJq4svRhwcPHT0Ifxb8pfjuy+UH
FAeW5+T69Ep1yvjH8MmJX03edOTxMeto5iO7wPqIJ0UcAv8jPZd/5/ljy/PJ
S/V+8L3Tv/FbykuB25L/9lzkjTpt5A+/KL5j+Xh4bPF4y+MRRxIPEt/Ef259
tT5N3Tz1MRMHZjfTc+gd9BD89fz+xhN/i/wgdiU/Eb87OQZ3BXc79e/kbUaf
kZ8gXw6e5IZs0wv4Raau583L89kp+GfgQdTHgJPHI2d88x+wy+lB8nm8J/aY
OmD8+76X+Cf9Ex+2/Bl+T+v+5J1Z5+TlRm80H6aubeEvxA3Ib3Yj+2zstdih
/C9T7yfXGzvQ80Z/FI9i57u+unRTlxnuJ3gNeXTwTHDIeEPkhY3dKy6V+9Kb
4DP4FfkJxMdmHND78QxkPXs29o444OSFy6fM9eGi5XHhc4M/njxKuFh2Dt50
+GpyRL45fjT+lbxP+Vv8d5v8Q19aXgcOe2/W+538M7H78KCTQ3uznm/muW/P
deRLqt+mv/JN4PzUc90p/kbe8vPgTef3ZH/Bkbi++KBxU3mua+wo9cTY4enX
Brme7yRuSY8ffGbGxdSBx7v3+epv+K+bd4CfFt538Kn8Tlk34WjgVa338hxc
3/OxB8mHyWf/leX8hIuAjxr8M/8wnAycatYn8kv8Tb4Ie1AeA34weSLmv+eQ
l43PnP8bj82rsU/gACeOUThEcQX8HdYp/jO4TThScgA+mhyGlxIHIU+tF9bt
wXHkvcPd3pD19fXYB/KA8XXCKcl/4a+z/sHjGG/qh8tnx18hjjF5cTmP/oEv
6K3qon1xeX15teS+euHsN3ms4r3+J5fxCeK3x2er7ig7QlwPTvrcskfwUuCX
x//0eI7DHzb1ONRvjX31eOJseMAuTVzttrSPZj+88uXJO3wfvuC0PyUfER9p
+NV+P3G407++uN/Gu3Lc5YlzP5P2lZwn//JxvHDq6qQ9kOfAP66+xiv4r+QZ
4j3Ie8IvxP6mZ4rXiVs+k+d/JefhD8cHJp9peLDy3cQ/H/V+1fcwH+TvGw/0
TPpX5ok80Wsyv/FAwXXAPcADWMfVn8ZXuCfyT73JfeQFnpn8T87LNz4TbpX/
M3LqdtfBA4R3mJxl/+Cvxx/1jWWLP3IHPknXg1+JPDuYeMju8CyeCH/jFclD
vjn7L8tx8vPxkL43x58IT/mhnPfZ3B/e+mCeDw4Kn8JV6Qc8OFz2Vfix5GPh
YYK3Uxch/8NVqeO1yf9KD7GuxW8H3yJ+yW9NrrM/Wz7yd/IDiNeoY8a/NXy4
8ePzo8l7pB9aJ+EBrW/mEf8WvIB8W/J19Nj488gfvInjF/vny+PoieSCekT8
TvCaw7uaOB65yd+ibtH4Sz78xs/FXhCfw4t2a/wz8AD7xEn35zqRB/I+X85x
7BFxSna7vETxIHaoemd4PI0H8Ub+dfz78h3gXvmxJ/4s/hZ7lz7D7oBH8X3k
neKZoGfQa4ZXIfkI9rPbyFlyXf/GHyXvlD0bXml5QnCT6mazG/CbzPvIe+R/
Vy9DXp743vCY5Xh576NX5buIX8vP4WeB6+BPgO/d7fzoiXDo3hf7nj9y6m7K
e0scj34IT2tc3J9xRy+AQ+NnwCcCx8m+VP9d3Tc4kKkz+8XlPLsh+gn/J15l
fhr8J+YF/DQ8CPtc3EXcRNyY/33qWFQr/s++GLsK/5i80PJTDp+LusPi3Jk/
cNrsnuvhKuUJxS4RH2PvHM26/2byTPxdXD7tYfG3yIWpT5H2YNpTsR9vj5x5
MnJoV9o9kU/qKTybFi/zLnzC+LHV1UhePd6Y3ekn+buJhzz3l3/vOc6DE85+
fOHqZL1EDuNBzvXZ0/hyzsOPq//0CPgJ+baRd1eoh0WO5TtMnYG04qfy5MVF
yUlxXvE4eEL5TdZlfoz53/jNvJ06n/CcWU/2xs8iboV/2zrM3iCX4HLFf+QZ
mjfq1MPp8yNaV+iB9D3+L/k+eP3gw9gNeC2tS+w5cR11VB6rFh8ku45/7VT6
J3+BfSPuwB5SV3Fwsum/fCN+yFf/6fJ9qF8oD5edJ441+Rb46CInxD/oz9bH
5+Rb8MvmvuIh/Kn4DCZv13uOfGZXT358xoHj1IXkJ+WH4++6od639woXIq8N
LvT12AmPRu95uMYLv6l6NPfkeDhH8TX1JNQpgq+EpxWXuzB2DD7f09PCB7MT
8fam/ujGubHDvhO7DE/v93L+hbFvXmEvxk5Mve+1KxPnUxdKP9Rhe1G8Ee41
dSG+eXx5/9SlWXsg5+NluS3nXwnvnOveg78124+Gn+cCz5EWbwl7Ev/yi2nh
ttWRejzPdU6e6wJ1rtIPcQL6o3xF/g/5zsYzP6r4OvnF/wl3w39EX+G/hwOA
qxBXGr0Jz4m8VPgU8Si4mqyrJ/BewO/EflHv4iX+V/nr9qfdI68iLTvzMH4t
vG14IyPPbo58/Fv2YOTbVZEv645np6lDpI2ckmcJF78j8gevm7oc8mXWol+o
c7Iz//PrDs4j+h19lv8Y76y6IJPX9v/Sdf8xm9XnfednN5FAsgWjTVagNWJm
5axAigVIsQpSEIzW3gUpkUGyJZBqmdG6XejaMtOtt9Caeh4lTmFrF2ZrbyDF
gYntFFLbMKmTQAsLU5sGErvMJHE7tKEwrb07SI7MaBMJduOFlfq8X5d0vm2f
f47u+zn3uc99zvdcPz7X5/pc/Js+8OLWQ+LseL/4kaNfop8Cb4cf7b6YG4wf
Zg4y/Ek/O548HVX6nfIy8wj1PQ8PPrtDf+yN49v9BrfK/tOdVSfHp8C7w5PQ
36q+T7dwcI6OT1/b96rz4yXc2//pk8Ihzbm7v/2fyK6Zb/l8z/H5na880hxV
ugf6Bl0nOnyPdXz8ODiheU30Hugo6c+jM8EO4DcPf05+Eh987i88svtLL868
bHn8xEHhw4Mn50fNTR5+Jvw+v6rfatal/qdwd7ob1iMeHZwfb270tuMF0XHb
WeoJ+HT6tvQ5qt/gcePfyQMHpyhO27HNTrFz+tPkwfrqR6fTfIj6UPd8uC3e
trwaX4xOVt+nvgdnoyujr1F9WXwHT5efrro/7D49K/EKvF7cNfrnrRt+YfSe
4neoe6rT4nHh9cMDZ36tPuF40XR29b/J4/DsZr6X+pu58/QO8EjoY/W98rfh
bdjS95UPZq/xJvEq8TJuzK7ql6bToN4HX9NPpi/OPJfRsddXmD+CT6ozms95
m7xKXyT/8q3t/092vJfyW/jiJ9Xr+MOOb07pC+V/59pfftnnzJeiS34yP3ou
/9jn7+n8L+z/R/td+if39P6xpc/8XHOo5HP/fHue8jB6POrB+jvwVuhCuY/q
vNNXoU924RcdWuqS5q8O7qTOF66Hz2ju8h76b/3pP9bnDJfDo4af0+vlh+3P
/uJn42uYt2CuKF0IdcFVt0d+Im/Q561+c7E5yNl39Te8jcvKi24X37b9xMIT
M/d1dLrxZfKzD/d9+q34P/Nq8TvkReoQ8Kpr4EBLnibvZG/4cTqEeIB4eeIC
9Ra4k+3o9WSv5dXwqzfy3/fRg+534N+wo3BjepO3HN9eF+c5/rnzoltIPwT+
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
wf4lbp0+D/1n8Dzr54vb8xqcB29O/Vc81no7vsR7w/9Z+k1nnkq/E38b/oLH
I57DG1L3FI+N7sU/3r52PLra6rHw2IkrzIvUP6MeTXfk6PZ30Y0S38Hj6D7N
vJn8+fRNwJkXPV0856nDyYfwdMS/8oGuKx3Oed49p1/f/v7pz+z64KHiwc7c
rHQB8JkcRx/p4FfquuKW4ni8RfrDeGbyR7rXoyf6G9v/w8vkH3BPuKF8+ay4
8BvL57Nv7ASdRZ8bu0VnBA4Kh64+rY/R/YEf05elnwAvmHlp5m61rtUxXl7q
J/ib8jr9yeZmiMfoYMov8RLgF4NPhHv4/vk/faTup3quPG34V73Gl2G3Vv1H
dsX3mQeE3++6zfOgryd/pU5FZ4u+ty3+6sS1i47g6LbRO46XAI/U9z88xrbs
pfq3dTo8NfyGrufwB+Hq7DwduPqS1OP1wZ1ecQ7+Qh9W600+PHqz7levBxe2
TssnxPPqdYNL8/Mf3F5H+nkf1ldHhz57Q+8aL4KOiz4LOoD4veIiOgfutzku
8FxzDejiqI8Ozvvby/HwSlsf6qTiucf0eSxzM1/s+/QnqJuax0bXRTxIZ3Hm
rZZv6GORT+gvvq8484m25/d5ejCuk/47c1rosdOJFH+qD9MFGn5b11E/jPV+
kbwOHzNdI/j+1G9bN+KOmb/dc4KniydkvcJv+OXho1pX1ik8iL6a+Q2fX/an
F8iOs/NwH/U0ehpHt+cpzh0cFM8XD0y8wW73fIg7PAf8iu9Tpxm+mO+Vr+PP
+r3iN/HFV7av2W39xvr24H8zdxlOR28Xf7Dfd/Todrt/+X7xzcRTru8/2P4e
eAh87OgSLwxeIl7oevKf7NzMn/3N7efZs4NwFTgMvJd/dhx2U90WzlV8As9S
Bzy61KX1d0zfMvyyLT/se4Y3bV09vt1v8h322PrU7y2OU8+Tj8CV8Lv5B35R
3OV508/q+dKf7vrpP+n+Dh/sN5b9FrtuXYij5R/zGj5snalPwEPlEeIYz8NS
h7S+1FnFj66rfMh92rPgk9PfuPbFq4+Lp8XPPR+Tn7JX4l56TvSk6yeeuZ74
AL5P3ftvb48rHp+4Bm6MVwIvlmfrR1j1kfhlft71VTfXN7HoOrFvE9f7fvF2
cQ08UB/S1J3CAfzRPZj75f7T297ZXgffP3WYVe/Z5/As1e/rj1d3GR5R561/
XX/yxGeLfhY8BK97+grCL/CJ4KIzJ0f/K3y9+y1eHr6p+QO/tv29cx37HBxi
+jeaxyruVQ+ZvJnuFr/oepbv0PcxJ2z2k89bn59ZPnf39vqLl9kN+pajxyo/
iX8AB8ajnefGulPX6Xk5tOQl+Bwzd5F+QHEYvuj017ef/ij1WfG89+n63Rvu
Zr4O/hocWnyH50g/5EX143A4faKfXvgB8GjH0Qcs3ntL/yqeaMfFr6QTeHlx
4QVtzbHRf/KKrfgTz/WJ7XmJB8WRdPzMFTNX55nluOLBmbNS/C1eHN0uuigL
z49+AL1x8yfF7XgS+KL0yelcv2yeZffzrSXef6bzwHMQd+OB0J8Q/8PpX+48
6XY5b/3hdBPV7fGJ6ZU7jv6+madQXqNe7/iTd9N3wA/Hjy8+xmuWB9GzZ4+n
jisu/Oz2eYLjjf7+Mk9leOu/vD3e6ASoe/N/6onwJX5CPVNet8TB4j72f+qr
i7+auQP8+MIbnPiBXh99Rv2xS71xZ4krxUfidHHM6Brw964Tvenqo3AVeLA4
Q549ft8WbiZekH+sfo3/Zn/1tbKz8gz2MD8wuil4co8uxxUnZD9n3pH7bC7F
V5bP/er2fMff08sJ1515bfog5FvyNvNROo+pE9IfMefi72/PT18j/he8Ub2O
3R/+bn4DT5jfpr+pn1Z+qq73kQW/ggPCFeklsj/0Up0HPtrwDfCv288cS7z3
pxc7RNfvZZ/LnukvxD+mLwM/GPvYa3gIPIKu8Nivvlf/mvOkf4UXN7hScdDo
Hvb9o4PR9Zz+U3FL102/is/h503fanHYzIv3nIk7WueDd+krqf40+prXLe/r
N5fvisPYpb+7Pc+pY8g7l3lH+CwzJ4qdwc/0vvxbnkv/B39mwZXpxqrfs8vi
wulTUn+S98Jz1c0WfcXhdbFPdMP0J+sT0meHL67+oB+uz8tn6X/hbc8ceXZZ
fu53yYPwpZa8Du4DN1j7EuVbEx9mH6efzfWRPy3zC4/Jy//R9nsnf6lPi92Z
620/vIn0QuULcCk4qjh1eA7ZI312eFWTn5Qv+f/TPY94E5OvL7wMeLR6rt8x
17H4m94Du3KR+RN0Z811Kj9T1xLfsCfmnuhnFm8PLvvF7fNs3ol5tHgPcEO6
qGOnu15wWfNP6D9/0ff9w+358WOjY/HZ5fPZy9HF6r7pkxz8Wx2i6+D+Dh+Z
/sIyv3n8YHO38Px8z+j40gno/k2/4NIHMnm8eSn6B/lXdVjxGD8tr+WP4Qfs
G5yg+v7gfp6rL2/3o7c0dlb+jWek7isO2Vm+l5/n/+GLPff4nKP7XNw7fkA8
Iy8VJ/ErdN0OL79zqVfKi4dHt9St5jr8zeX84U9LHengUp90H+CZ4tip96tz
4tktOi8zX469gmct+B8+F/1cOjL4nnhi+AbjjxY7jcc2fb3icfUhvAB4oPPE
d8BDFS/Def3ex7bb4/8JPFB+MvoeeIvwpfqM5e9jn8XB4lbzhMxpOLh9X35E
FxufzfpSf4PvzLzecJnRjei5mjlN2Z+pixbvsQ++Z/pes6vqJOotdLHFYZ47
/Q7iUzoB9Gnw1dg5dTLxHl0Qc2LFu/JPfHJ5q/kN6ruDlyz1N/Z69Ov5r4e3
+8987XDOmUu36JrP89b9FT/jzY/dx9stvqQjNPkMvm3xuvxZvUkeMOtFvYj9
hVexW3ja7r/8JT/Lbh1feRP69le79/Ht58fuwP3Y0V/dntfUv+sbn/yc/YSf
eq48F13Pwf/g9fq/1ZHwY+5dfg8ekHj3S9vjDw4oPoEXLHHT8KR/dbuf+vs8
3+YfLXwfeai8cs9iL+TJ7t/gj3Bw+P0j2+OwI6ObxR/AHdXfl77+0WW4abuu
R++N/lX+f/Af+lD9sUczd9lz+ivbz1n3ww8oT2RHPrzkg/IreS5e7czdyo7M
nGnPV/Zk5tS11Q91DT1kOlnm5uFDFJfpGzYn5kV5aa/xQ8R14l35tv6tmSfw
1e33wMvo/LN/4kZxpbibrgpdq7v+4XY/9kZeS6dl5khlP9jju35tu4Xzs6/z
/dk58bm5Ble5fw9vz5sfgS+Ib9fv4ZdG12zBL1+Gb4hT84vsMT+nTu93DW/a
+T6w3Q8v2/eqc7gfM+/QHMVlHc667brQO3M9nlx44OZ9zRxwOm/i4eJCfRfO
13Mz/Jb87sT5xYHwiZmDuLOch+vYdRmdjuzk9G2UL7jeM88k3eeZvxKuhb8z
853UpehHlk/wU/4//Ab4ITusniOP/VvLcfjJRR9trqO5jXSquw7Dt4DD8FPw
Ef7aOuw6wYvme9hx/UN4T7+wXdfqYOy4OvPMZeeX1jqV/lT47BqP4o3yQ3AD
8b3+Jv4WbstPiAs+uV1vo6v7me3vGh7V4e16EEdMXZf/oxfofjqOPGfJLwcP
k+f8yvb3DF+D3/e+39P54WGxS+LbwaflgT337JPnd3hvnmv2I/s3OoV003o+
+EF2aPhcD20/Lw6lWzf8t9YJ/hBd6sFN6Wn1veJF3zd+I78Hv+QfR0fx17fH
m34TuolLvwg7Jk7mb/DRzB+De6onOf+Ze9XvFw/QRXG9PV/81sT1dCjpzGf3
1Yvs7/qPLqf6Kl6huBxuCnfyHKTXPbrz8AxxqXXXcyp+WvXP1UfGHvccwEeH
n6OvCq7ouV51NxZeP/71zGtf9Bymn5HdgAeLM//h9nijB7Hga+pp6mHqLXgT
g9+KM39je3x8y6nXu97qH+po7EXxtnmca13I+6vOkud9cHF5DLuDf/uZ7fNs
fbF7g8/jVcBp4E7yAnyj9vcc8hfs/+RZ8CN9stbZqpv1d7brHb4588V7PuCA
4pTB/4qD8EvNq8IjHVwwXgKcdeIB9o79o+8tfut76FBNPXeZ4zV43Me3/4dH
DA/P9f7w9jq47uzi9COUb8/170++4ffP97D7rYuZl4PX8pnt7xjdM/ntois3
OOZt28+Pf6Jzwx97TtQZ1Q89B3A93yevlW8v8cX0LeCnlM8PTxHOiTck38O7
X/LemXfPTvR8z/y4pW9m8l58q6U+jUeGXza/E06w2F3xy+CV6r/Of3nu5zj/
6/a81fvHzn3+P/498u3hCbhu+mP068IZl/q514MPwjXhnPR01M3Mj1lxUf3B
+Obqal/ffl7da+bsLn3wjoc/iv83eo76eRddbnUv/TXm7tDzVldTZ9N/g084
eCv9orb6udTTTi91srPL8Q/om6Yrif+19HHhLY5OjXWIdwUPdt+8v+A0K5/X
82QdqDcMfg8f9zyam82es+PyEnaJ3c+uqUPJ29TDZt5W9hfuuvZZDF4onuv1
1Qu+cNeCF7Df4tqZT4IXH/4wdTO8HHmnPoXiPXO6xY38k/35wZnnB3ftOG/+
6va48tqpw8PFu2783pNLfUq+amuezNRX+Gv+WxzGjsDTxAf5qamnyB/hY0tf
1OD6+LH0m5bjD99+mV8lnpl+vYVXNPPMPQ9f2Z7P5GV4zI6LZyPPgTvKv+HJ
1usvbr934jN+rus4ea/6LpzXfuG4E0fx0/Dm8mzxu3VzZ/Eb/evhP3xm2Yrv
4TNLvmVe8+hYq3N03uII8RUcBY6mjoKPNny2pU44z7P4susB74F3ypfEpYM7
fHL7fW8ueaZ8a/Ii+EFxG5xI3LbiZuJieMz8bvcPbsN+0TcQ76rDWgdwaDiM
P/GT9RVeMfE8eylvunc5judFfm+944WpY5oPtcZh/L06sa1+E/5cfQ6vT3zi
ebK1v3jGfj7Pz399ex7w/PEr+gce3x7v4BL/nV7iOryb6Qvi/5zf+vt9z9e3
n6MX5PlVP8LjVy8Y3Rz2BO4Ev4HP9PxOvYC9zM8NjvaXtt838X92YOpV+COe
L88xfuj1y+f78/mx8/DOznfq7H63uF5fr7jRupfHqX/9z9vfN/Od8u/Dq4DT
9v7gpK5Lz9H4oV7P/GXPh+sLv+Q32OGVD/nLy+f5L/dTPC5OV6dSd26dinun
LqYuB2+kF6j+B+9w3fjV7uva7zG4CfyOH2z9TL0huzXrx/Vw3+WB4qvyxbH3
6hJw9gUfn3nLyxwRfa34g3AqcZU6DN68evTMjacf22tzQ/RJ2g/fm96Jvsvz
ljqCz9PPw7ukr4cPpN4Az1NXN+cEbjdzBs3jFN99bfu5+XzxHF43/I7uDHzP
eamTiQOnzgV3XPlMj2zPa+Zpq+fxc/CY4l1zFvFexYtwwqnv4Jvnd+EX6lT+
Lx7GM3Bedy04JJxU3XCug7h64W25L3DXp7+yPQ6cVJ1v6nRf2v4u8T9dEddL
3WvOa+nTcDzrGh/C3Bv6jvoFhifb583B0xf7ir5getfx2+ijTN3UPGJ64n1+
9JLpMdv2PfoY5BPyD/VQffq2o3OJH+z3L+v56j7/UOdDZ9o8kqeXdel32N9r
fTA+RydNv8Tcz69tz8Nx3Uc8F3mQuuPkecv9Hzv14HbdTj5oXRf3yefgemu9
m52wHuSRjjs8Ruufffn15Xs9l/I4cWe/Sz5251IXmblBN2230x9N5xSfGs8R
DqweFb4/8a384prtcaePZO370j9QfjLxDT8n/uF/4ZDqmnT7xHtwfTyJ/Nzx
pb41PBB9gKvu7l9dtvzr3dvjTp+qeuOSR6kTDS+Mv+46Tj3PPCe63vidrg8c
Gk8UfgGvhmvIz+svF2dN/HjP9vznusI34b7ixV9YPicflVfsbL/P9YN7Tr7x
he1x8GWH7+6+uR9Hls/Ba/HZ1WHwc/SV4tc/ut1P35A8AZ41dRB9J+J+fTr2
h5/iz8Nx4Vf6mX0PfGvRHR6cWV6hz0g+Ad/99e12+miclzxj6WsfvfZHtuev
z2iO82vbrTxmeF0dZ3Q24HHwlEW3+sByHuLY4UmJc+HGS9w7OA6cHu6CX6U/
yPVY+q2H3/nl7Wvr5vhSVx99hAe323l/4bVN/vL3t/u5btPPvNgX5+F+yf9s
Dyz3eXQS7Of41rX8d9EfHz2sRS+F7ufgW1/anu+B5T6Pjvmiu+X5hGP9B/w3
vPBF72Hui+ec3cV/cN1dX3aJn2Ev2RH1mCW/nTnU4TDqTXAiOojyWP4friqO
U4/jX+UveDn6n8ST07e5xKXiuMkPxH2+T54jzhafqPer/4vTv749Pt0heJq4
3OfvWuJi/Fx4NDwLPnXngstN3RIf4Evbz4uLBifXF9d2+IjhAVMXxR/T7w6n
wodyf/Hr9e3zN/mVwangA3AyeS3+5eKXh+8E74JvrfxbeXL+Tn1CHXFwWnMX
8BBWHZZFD2DwYHiPdS3+EF/Ev5r+mE8v+7Of8BR+tXx8+lrgq+I48QPeEju0
6BXjD03c5vs9j66f68D/w3HcP7x598t8pPAhz+/oFodTiCsn/lJPXHVh1fHd
h89u91Mvgc9OXIXHAIeydX3cf+clLoKv4EXjR8UjVl+f+5adGj52ce/ou8Fl
xL3WrzgU3oJfB4cRj3le4Ffsq7rsA9v/z/pWf1154P/b9nP8wPS1wb/gT/Bg
foBfgLfyw7+6nC/+CH+6xBfz//u252n9H1/xa9dNXKz+z4+4X+7v3dvtPC/6
6vAM8O7xHcx9CGeUX6lbzJwwPOzyKXURvGz4F/4V3u3UO/7u9vg+j0c29Zlw
tenHw7fxf3y2ZTt8Mfp1+CVwHDxZc+S/uN3KI9d6Dn8hT3ZdJi9xP+iWxxtR
Hxq/ID+Uv6mXWf/qhfyDdc3eL327Xo8+iXXPnno+6b7Yb9HjFF9Of7j1R/9K
XI6/IQ5f+tonX1l0B6Z+IL79B9vvnecL/vzw9vX0vakTrXi054e/WXie0y9U
HXzy7U9ut+y2dQr3Ew/g81mv06+aHxIvwDmeXnA7cRh8TzylH4BuJHwIPkYn
hI70Zead9H947yeW/T8SjnZZn6MXAveFk11mf3redFQ63mOdz2X0QxY9kWsW
fBk+/JD9FnwZ3gXn9nk6I/BBcwPN0Xb97lrjWvGmeR7FhXBZ92V4r0u9dXQf
xXH4CHhl+FzVMScut794/K5lXeB98bP8afZh5sfT8cOT6//DV/d5ccTfWM4T
T01c8Te23zd1DXGb5+MXtr9LPVwdafiu9JwWnUH2kT2cOjl+n34Lup54uezr
A9vnxX76Lb64xPfwec+TOer68+D7X1xwyQ8v+cfo5ZjH/rXt/vIg+Y3voYtj
vdqueQx8fuo68GM4vPyFXoTvc57w0S9vz/vqBWcdO7Pke4MX97n/gE++1iv4
389v7+/wGj+3Xa+Tj3a/8Q3meOzlPdvt9A2qp7ZuJ4+S3/6neBe/tF2X4ht2
He/i0II3jo5XOunjh8W9/G3+d/ox8Rla/6tOwfBD+l3TZ9p1ll/qN5WPTt1Q
Hu7+LHHMy0u+jhfiuVO/mr5Z60l/m7xYPKYPC97vezxvniN9Ya2/0YtVV1vq
Eeol8zx9fbtVB4EPTN+culx1lIu+ut1PHHnVUkeY6/Qr29+h31edS5+E/H14
L+oK+MvWDb+P/6zuLl4Qb9MZlEexs/Bq+LR4HH9v0Y3DA5v+bPmNvHzpo4TH
znwR/HnxlDgM3gof1Vfv/YX3gW/ic4ML44XgseCLfm27nf2X+HD0Pek+tf/o
IMFN5VsL/2xwZzwTn4PvihMXvG/0FfGLF73qta914l24Xfdv+tzUf4q7J183
T2XBidQ7Bp9b+FOTz8gP2Fe6JuJLc07laf/L9nPiGsefPnz5nTrKX9/+numL
0c/ILhY/wBf0J8q7hi/3C9vfO3nYL29//3x/dnbmUuOnyItbx+YHHX+u60wH
x/1ufZinRmcBL3LwBc+bOKf4h8758Dd+Zfv75nq67lds1wf+GP/I3oh34GCj
yw6HowNqLnhzlPY0J4muKp6yOY/76QjBxfJj8Ao4huMPf44eJL7T0h/Ljw9P
lT8Mx5o+7PycOIKelf5UedPoJveanxD/DO616LGxq9aN+HnmRbQdnhY7zI6o
d6mvLTowUxfpvOjbqyvLq2dehN9Rvjn5gud/wa3EsXg7/P7gv/mHyevSbaQX
Nn2TeIDWK5x16WuauXjZqdGfNedl0SHQnzD68+zyonM1OBjenjy878fvN08C
TirOFk+M/pTzUL9pXU6/d/596lDNWdnTlh+a+i1ceamPjt7XMheRX2JP8WPY
76mjwUXCNae/hS6VvEf/n/qP/oLsIV1SecmqO6jPdPiD7HN2kF2S1+Ix4J/C
++gA0M+/c8GvZk6mfsrWO13UK8077fNT/y4OEffRFRjdf/2fPTfWB39Eb5S+
nnhcfAzPwJea+9t6oa9Kjx8OCG/Hi5l5Sdld+fvkje03df7iKnbP9ZF3ek7h
PJ4/+K88ZnDT1tdVzUkRn4jTxctTx6f/Vp+KeAgONtdhqcOP/er1A/mDs/lF
cRwciD83J9kc0dHR9rvyI+wZXF0/Dnsif4Sf+j3m9p3t+OwpHTJxgb4efAV2
0v7wBnN5zGfmr+S55k2p98sX8KqPNH/QervyxO72mXSG7/n27v8ffbH7VH6x
73f7fT1v+gHgTQfShbrtm7tb8+ee7/jiqAfy43Skpq7E7uWXTpiH1rwIcwYv
/IM+1/03Z5fOB73AuZ7ZLf235mKJM/DBPtI6F6fgSRzrOk9/lPmDC2/x6p5n
due21t3RZf2JK+Tr5sfe2X0xN0veOngbnf7O51BxEV0COniO7zmZebLyH37s
4e36YAfMQzLPS959cddX3d7cMP7YesID5a/lDeZYmpf0WH797eYmy2fpI9LX
NQ9cPvOWOdLN05M/7219sB/68vQjmZ93Setq6hFHt7/Xc80/XNP3XcNfdZ73
tr7vTf/anKs9J1tfu/HQzsf+5b///867Tnb9skuXfqfvab2Z23dBW/7zxm9u
188l/Q7zBSf+ZA/7PeK/FTegx/1Wz7t1dtp8t29s19Mr6YnjaaonwKGv7Pm7
ONzc/Lm9rVP35432e6R5MeK0G7se1hV83Lw/cQhcwlzm4x3fXBJ+7v7sFHxe
X+Te3+3+FB+4r/yneps4iH2zTsUhe1vH8IMz3Qdxqnmr4jfzv+FEj/q9Pef8
6OjEZ6/gOnRw+QXzZdX36aTDT/HbxOXihHtbv/vp+H1ju87lw/zyia6Lv9f+
efer7z/TfVQX2WNebn5v4lzXtXUjLnmo+6V/1/Nrrvm1zfeEk5qfe0V27/7O
7/bmgb7S9T9QPLw3PxZusvPuP9x9Dj96anc/dZzr2++l3+u+lN+YX/+2uZ3N
0RSvnO3+0d0d/aQFx361+/84/5n9oEMr/4Xbqyed6fvFCeLj2/IT8oU7dq/T
zk1/0O/Pfz7aesdrmnXe9eSv3ui81Jv2d3/hOic6f/585lVYr/pL9Depu/7V
7XN0d99vLqm88NCJ3e3Brj8d6Su77vzC8WV+MXxE3WH0kfD1el6mDtZx4I4r
P08+9lbX2zzbg62nq1p/1uND2X3nIQ7gn8TBJ62T1rfn6/7W031dX33XL7Ev
8WXM1VLH3On+HskvnMyeiMPuy3/II+gqz3xD8WFxATvuvEcHHs6Crwc36XfA
ta7MH5nPpZ+cbr05Y3M9xfE99/oYzEcwN8h8xMln8Tw6n1eWeWB7ey4ubD0V
1+384u5zv+eC/P6FxR/HzFeFHxcPXqZPKDskf+Mfj7YeDvLj3Qe43eX5uQuy
j+wA+3C063rpd3tOW/fqw5d3Pc1dtr7MXTradfG86S94pvvHD+uTFw/hlZuP
bM4HHdk3W3fmmh99evsc8//wf/4D/nBjfo/uN3yeHrz6NH/tvOCAH+m5G3z6
97uf2TF+kj2knzc4WXye0ffpdz3T+mJ3z8IRu+7P9Bzfkh2ER8BNbm7/J/N/
eIbPd59vz66Jw/c8tV23049zdHu+/PHDfV4/jrzTPPVzW9f7yyPEhQ+3nh8W
f3R9n2x9HyoOhUM9YW51W3b6+u67/EI8IP7CX8DbOijODW8bnUf9SgtPVZ2I
X3mh34EXb93u63fA5d5TnnezuG3RRafzLu441vGtS79v8F98UbwjdgXvDp7e
/X6g74Vn4V/AHdlRc55v5Jd7fvAcPt19tm7o2l+RPxHXHOx9/Uunur/yWjom
x7q/4jD5nX6F0VepPjvzIbvOnmfzpulC4UXQncGHYL/w3PjVed5b73Sl1e3v
7nm6o9+BZ0j/X/zM7j/ecwBfdH7qC+fk18yNV0cRz+Nb8aPyC3obH1hwH/VC
dVhxx5G+99wXtsfTD2puhjqWOOxgdo89pVf/bHbiA+Vbh7KXt3Uf5X0nwknU
Qd5sHZqnrR8e/nl+13Vf9lydzro1d/AxfYX8iT5ddTl9X/oFwrt+2Lrlj8QJ
M0dRnGW9VeeFf+F1jI5I8ZD69uCV1VE+3fUxd+nGfv+52YtXOp83+t3wMHpm
+mevMQfqS9v1DD/UF3x5/vlUdkcfo3Us7sNP2Nd92tf9xBub+Y5t5QfywcFJ
1ZmKE+Sz5/W7T3Vced8DrQ86PvpN8YNG1yn7Jk6Gy7NT+LHw8qkb/c3tfTEH
a3hb4ryeb3Vs9x3uLr6DoxxtfzgEXpt16/Mzh4iuUMd/fff+7ny1fOay/PNt
reuDxQX8I3xBnPxDcTnd0Y5PJ0Ad4JWeC/aN/xKn4e9Yx3DvY12XA9lfccgd
5TXigXmu4qOt/EVzt9RRh79O37n6wvCofm37f/jnxOd/d7sehreZf2NX8I/g
Gp4rPEN5MT7w1Pfx1Xs9c1t6rvSnz1zu1ic9XvOHx8/Qp8J3iA8q/qObiKcL
jxodm+4rftCtHd9cEPMHTpYv8v/64c0f/mFxMHzX/Bl92PLVy4o74RSvqbd3
/p8oX3gjO2HOG91IOLLzOG+Zw2d+39vhHvStJ/75p9v1Jk6demfX7bHW/93Z
Nzwkee55+KjqWfl/+CV9t4eKFy4vXoRzqvOqE4kX8f7Y++FH6V/G5xNfW1fx
usXhJ/I3cC3Hp3txbvHqC+Gn+eGda8NXn+93D04oH6FrqT5+9/b+m4vNTqoT
wrOdr3WrP/OHrW9zF98yf7Hnip071nnjj9/ROrm19cX+0Fm7M/vvez0/F+cv
1FHVyS8T32Uf5AH4SNbZLa17829Gdzh7LV6Cl8D/p87bdcS/w3PGr8EDcb5w
RJ8/KG6v3ihPeKj1Lh+6svjxmn6vuF38Ic68GD7felanEw+yr+e0Lh7uuk8c
px+yuM06flvdN7+CL24uG57HjnpS1/ni7IR55+ZE8vvydb/X79cvNTr/xd9T
L+z5eKZ1qi4EP1z18/EX8dmtE/Oyjue/1A/ZhWva/9rWyTlt2XE4yLHyYXjs
dV3Xy1vP7MDMs8A3MoerPFfcf16/b/rIfnm7P3+Dd3xtdslcULiIPtaZe9p9
U7eTR8Iv1RfgauYxw/lu6Htu7X7CwU72fOHjvdF18lzjOZl7w5+xO3CJTzy9
vb/yTX0kb7V+XvQc4LGwE/p3eh7wicWV17Xu9ZXqv8P7xY+Ux6iHisfFo9bb
4AJLnPBK58kOiVfxiUcX0fyI7AXcg/+mR6LfiX0xF9Z6tp/4bfrs6u/kf+jh
4hvzqx/pucabNY9EHg2XNM8WfkWHmA7vvflxOL+5uNavOfD4cOc5/+63PAVv
Y/JKvIbiEXHT263HM23Zlfke/UzhYfjtcAA8cM+fui67Nn2f1bvYvXvza5cc
3x5v5hHQAcgewanETR/oesOl6WrjP81csuLm0fXST55dn/pldlB8MPoH+hnT
EZYniueGL1NedhK+Fm4jf3y1552fGN2Bnhd8I+vBddPvZi7xdfmRqT/AC+AU
9cOJm6d/ITsnT5w6L92NcJy1r2T02c0Zwqeu3iJuHP42PCb/Rf+TnWIX1TM8
V/y344jv5O/wtdP4b91PfUYzfxPfP7ugTkgH96h6VM8BfFCc737x3/R1x+/0
x27iW0xc+Pe26290ZL2vL0Le0X3AN4azqe/KU/Akh1fdn3oYHF0+DEeTD698
YnnSzB1uHcrf8RKGh0i3d9Gblxfym54f+g7iwOkL/OL2OPL84YvhXf6P2/MZ
fj6dCnWlnvcrup8H4eXFO/LAG8NfXoCDlHfIT/HTxJPqMvBu948fp+vGntGH
ha+ZYzf60fj9n9+el/xt+MX0PZY5zaNDYM4h/Kf4xvV2X/GB9DE5/vQLuD/i
1Tu3z4HPi3vhRJ6r0b8pXsXn5B/F83AyOK37jhcEX2dfzJW3rkYvRf+c/tz8
FPx1+qTxO/V52NZPQN+cvrQ+FXHz6HKyp4vui/4O63HqAPoZ+K38BT+Ixzlz
Y/r9w2fOX+PL4h/gF4pD8e7ZF/UR+dLoyns+W48Xyhe7b/A59SM65fC5/T3v
cGLX+QOdl7hknlfPXXHm1epp+hiLV+Cf/AG+tK3+NLpv8rRDPd/4S+rJ8Dj9
G58uHsKbONL/6ZM7Pt4CXpffYf6X+Mx5WH/Dw+z68teuh+s6euXq03jcS5xC
n236Rhw/v0Bfz/rGV5DXz7zxfhf+74vFR/gxZ+Vn+IDVodVL5Knuj/U7dnyZ
W25eMz4UXR51Kv0J7IH8g2795AmeTzyPnmt4CR6JfGP0fDyP4ZEzH0v/Qs/n
6HHZVlcQN8Ajhn9P/9dzz0/ps69/Bp/CPFM8yImX6QOEU+snlF8N/vFL23U0
8a/r1HmP/cVv99x1HUfnSb26dX3EXGh8VXzsRVdw9I/xHn9ju66c3/Q50bml
A8AfiJvpctB/LX4Xr+iPOIB37PzK7/QXTnyQn8EDmfViHemLq99D3kAneXSe
6X90n9QJzNOWr/OzcFh8AnGfOFLcgWcqvsH7h/uPHi89BX5x4YmKN/VVjE6u
fhbv65/Qv2cOWn1k9mN/xGXyaPin33sSz9D6NR+NHr7+9+rO04+T3oZ4bOaE
LPM9Bp+lD6Qvgw6HObfVWcSrM19cHG09Fx/CZdQd5In6PjwHp4t7xL/qJdMv
yo84Pv/pdetHH6w6kfq6+pV+N3M45Hf40Piv4gJ59viz7MIHyofx0dgR62ni
Pna36wUnGt65uQbmrHbfxR/s++jyioP0CcIPs9P6CvWR8JfsKTyXbo76lHxu
5qTRH1jtIT2Svpddx3Nj78XR6hcXF5fwd9M3zE7U/+P3/bDrC3dxneTbcLzp
m/6N7e+kgyb+4vfFPTPfUx1D/7S+/PLcmcfZa8+bOgHcjZ/2f/W5iQva4u09
Ek6A9/HD8hy4lefW98OxRi/YPIMHt7+DfRleZPyKixZe5Mx/c/9aX/o+Rx8s
u+B59Hs/og5s3bb+6Oea5+o+jc5H60i88NY/2T6vw0fsOjov93f6wsT3+hOz
p/K/jyx9hDf2vOMr6ueAf8vnRx+qfAEOZ//RPcie6xtk/2buAv3UZc7T+Af2
lY5jdnDqoHSAqiezK/g7eNRHzNfRF04vC34hLzVnnr//O9vnhN0Vb++Fl3T/
5ZXq5foe8RZOw230AWf/8GPgYPTwB+9vu863mblTcBn4Vvmc+jadfvPm4BHs
/MwtLY/TNytv1t9HR0N9DO4ijhbv4IGoc+JpHakuwl/oz1LPomcijhM/8m+D
j/XcyDv8/tEF0A/3nu1z7PPsn3hA/cw8QfEWO0+/CB8Gb9FzrL7AHrLPn+75
0jfJrs4cl/yHOqS6Dz4GOzf6AtktdYNP0GGSz6qb9746BXstfteXeV548SvZ
F3WKU53HK92XH8Ln+x79n+qRj1dPuaX39bO8Xd1H3f0DHV/d5lT/f7j6/rPh
y+rH7LB6w9t935m26pan8JbwA4tPbu39a7/TedZXdUn1ODzRm/DoOo9XqyNc
+c3tfpe3n/rRDfGT7u9zZ3q9b/FbT/R5PJjz+53Xdh7qg1f6Pe332FI/V6d+
tf33dZ5vuL7dd3ETXO9U33emzz3b/vp3py81XSfzwvGh8Y3wNqc/lu6Nukrr
Xh3J+hdXqseaN6G/A09DnZ6f4+/p4snT4Zsz11RfKnueXTwmHws/ei2+yPX6
YOHnHW/iSXzHcBo8evzHR/Ul4hN0/OvjvzwQj3p/2zt7/8KO95L+x46j3nJz
/I0PxVO+otdXVFc++4e726fjAd/Y8c86r/p2jrf/kye2x3mz/ffUx7q/73mg
1xd+e3vc/d/e/p7Xfnf7/4Md9zb9sb3/wu9tr9drbZ+Mv4jv/GT7fb/zuK3z
wCM62nU50vcc6/dMP2GvX+r3PhoPbk/fs9P5ntv7L3Wcc/FkOi86IfpMXuvz
b3bcA21faP9j+l467sle73S+x9u+9ML2e85aR60/PGn45sHO40bro/XJz+5R
N6dPgG8tv9MHIa/H+6ZXo/5Q/guXVmc5po4SnooXJ87Sdy4uGB338IiZU2L+
SPZbXRqfTpyNf4xX8Tp/0Gv2Ey/1cO9fm328vO11+kviC19e/9vz2Uf9o7d3
nDt2+6h2vrrLj9r5YDypZ+uvuqBtfdo7T+zyLneer1/uZ/5od3tdfMy72++G
/v9E/a0f/Fe729tf2t3+xd0+u51b235PH2zbn217X/t//l/vbh/pOD/R5647
tf2ez3YeJ/ST1v92zr/o/+2/b/e897yRHzyze512frrff6rrd0fvH+766KO7
o8/pG762+3Nf1/Wm7s/b/F3XHQ/kuu6XfIJ+gvX2kPplfkf/Jhxn5mHT1aF7
XPzNbziO+PhQzwt9n3Wu3czXKJ/Zy28UD6ojzZz4nrMXshdX9FrcLp6nN0CH
fvQR9KsW7+tPxKMZHRnzCZyPOhy8sPM7rc7T74Nfi8fVP+F75p4O/wj/p+cZ
fgdvPdnvu9Hn6IB9Zfv9l2bXxr7nH+kz4FnBs8yZg4vyp/whu8q/7em4J/Oj
+kVOZ4eP54fY69/KT9yo74efyv5/Pz/64/Wd7Wn7kj60f9F+p3a37/83Hfff
7m7P+/7u9m+3/Z1/1/073Xp8pev+6u72d3v/n7T9ZO9f1XGP/evO/1/ubu/M
v+l7ONLvemfnd0/nd3Wvny4+uL7tF/lJ8QF+lr6p72yvy4G+R//N/q7rzb0W
txzPr+70+YN9D/7pa33PUXxj/Di6VdZvekoz1y18ZOb80F2mt0WHD97f507q
S8A//ub2edP3Pbpa9OU6v6mLhpvgB888qOLYmR+WXYLnmUMw/OP87MyhphuX
3oc+cDiVfhR8eHrj6swz16O6yujJLry9sVNwKX0Y8NXspr4eecV15QXnZ//f
yJ/9WPb/7vzDE/nVM/mB13t9qu0b+c2bOh59g+fzA+e3fb3/P56febDvub/t
V/Ojfy3/ti9/eMviN0/1+qf7/8+2/en85tv5zVvb//GO+2rbH3y37+04h/+4
/dremv98qvN6vO19xQOf7zg3FQ/8cX218iy8U/wu+swfyP/pS5VfP4RPln89
3PV6Av5Z/eahJd8XZ+FJ0W2S58PT8efoUFy12NOzdPN6TsWZ+koO9PpQ+x3J
XlwoHu59/SD0WNS7b8xf3tz2KFxM3QnfkO6V+he+yZe37+ML4ckMPihO1r+A
F/Bb2/f1scn/ph4Nj1OXqs8DD5wuDr4QHAavTx+a+zh6AeXPoyNPf5Eeafgi
vA6/4Br8abgAXqK6FXwoXt/oJxa/jz4onK/j4+Hf6Lq5D+xm76vHDr+hOIAO
4f62e/WRW1fyyPzW3vzZpfLX/NSRP2qbn700v3jge7vb9+Rf/0Kv35uf/Xtt
r+n9j/T6E/nnL+Rn/4u2xzvuF1/e3f78S7vbN/O37+37/yR/SlfppDw3f3iu
/FK+x1/2e1/q/QP/bLv/sfwmnEC9TJ/uhT0/ezve3r73Un5YXun5W/gjdBz0
l8H/Zj5yOo3mdr642BN6Cviv098enkSPf/iExd2Df4ZXel6tv+FPhPOoJ6rf
/5DuTM/LDT0/5+nThY/KB9sPP/qHC87Kn9KppwePH4vHir+uXsMvyw/4VfUF
uPnMGTJ3sdf07p/pusJzb9cXv4tDyrd2nsp//Gl+6CfyU7fnd+5ue39+7av5
s2+134n8zpf7/NttP9r2F9uez4/m5+72+Y77vpd3t/e9+u+3x/+b051X73+5
/c6Rn7a9pPdvyt9+sP3fbvuD/Og7Ou+vntqex4OL376v/PTh8Fr57Am4aHZU
XxGcHO905tfRUxD34C/EB6LTxS/goTjOzGm1Dujo649XL5AP9Tyq8+DRikv3
9Nxekd+DO+Lvvtnnb84uyHPu1NfV67NLvycdBvxFvJCZv1K8rO6JNyEu0e9E
1+MG/SrhJrd0H04t/R7P6CvVZ+R+qCeoF+iz9hyqHxzfPud3w7XDEeA9T7QV
N+qbUkemi+X1i60HfT0XFRfRY/K7xUnD44lXqT9Tf9jMN6Gj2HqhlwJP1n/H
vu+B18Jv8wvwVbil/PRNeG9b9v5JODP/0nF/Pr90NL/1QHnj0X+1u70nv3ZF
78svnysflX/+YX7z/f/X7vZ/+j93t7flR388P/rf9vpv5oc/0P7Xt/2Q99v/
aN/3xT/e3X6l8/h+5/W5zvuu8tfP5W/P7ffDTd9sy+/Ryziav9vb83Vpzwd9
p6vks+HJL3U9T7cf/PV0cQuc4iT8vvupT2md/8J/wXXUCekJ4J3Pc9frx+Cg
6onmR8RTGD2J/vS9TDyH90CXOp1qugF0/PVD6MecuYXZsZl33POq/ui88RLk
u/yv55buxBvyFH5YP1LP4/BH+p3yHfaDvRCP6NfCQ32dfcgOXNKWztqp3Trg
zu3505/JL30vf/JHvf6x/Oi7ey1f/KP81uH81Tte2d3+oO2JXX+4s6/ts/9m
d/vEy5vXx39u118e/8/+7e722fznp9r/cP7vF/veT3nd9/9M23PaPtv/77df
5/3H5eHqf/oLn2Ufs6PXdH3v6PXh7pM8Aj6BH4YfRReaLhaerzoBnTz6sPoQ
6HTSE6T/RJePfxMXP9nzeH3P55vZw0/2/Kt/XZWdu6vtj+B47X9P73+u/GGn
fIJOzsv0ctrCB+GLp/E26SGqo5Tn0AfFv8V7MF8FTv2Yftj8IF2tfergXf/7
6A2Fk9xQHfsc9ezinTt6fW2vTxU3viPc4fKTm/f3PN526h9t93k/fOZV/69e
/bDv7bweUTfxub6fP9ZnLe7F75Af4JPgH/OXeInqqtbNkezspep88ipxjfUC
l2y9HOg+H+++Hml7Ve+/c9l+qPXxufzN0fzQufmnT+afbuz9i8oDX2j7XO/z
qzttr/9X288dOLXd7+Md92z7/Si/93LncWn78ZM/VV6613Hb7/39vnP1F4sj
ev3+nouj8OL+fw/cvOeSvtvMaSuvwROC09PPo8t2cuH78zfDQ8Rv0TegH5B+
Qn6S7qK6z/RV9VzhZY4u+KLbhOdIJx/fE6/c52fOZfG6fjp4GD+tP3DmhcoD
4gvhYdLHoDt1L56N/t78ur4FeNA18Sbo8dFdpB+G7/lYz9WLeBb9H9/I9+jz
1Yf8eHb/vl08dudn1THxXLIzZ9re2nP/Rtvbw3k/Wx6qvnl/dubnev2x/Ocf
5Y8ez/99tO27yvOezx9+Nn/4l/ODl+dPP7i7Pf5U//9/+v+J/v92/vKp/O1N
bb/d93w2/3iq7c/1/o+1/Xbv85fXVreEx9J91WeN56g+KC88Ti9Z3N72HnGo
+Lz3L82OHdFH1vNCl0xdZQ/eAd28nut39vze4/226iv82bHi5AeyG99p+5L6
VP/n796T3bsZvpU9+vHszYXZmS/0/59k93p9JPt5oTqR+g/9TvzyeKv6n/X3
3pTfu73r/wheVX7lnMX/Fc/tua79Llm21R12nlrw9wd7fWXb68I9/rx4ax8c
ovXxeu//oO272t4dLvEXe/1422fbquP/TPud6bn4cuvtG20f6ft/0Pq7oOeR
3u0nihfUt+Drg8fLI/FB1Dtbd+p64qcL8V66T/vzAzf2/0fxgPiRtvLI97dO
jvE3rav3t14+3np5ue2jbd+bv3p/2/29f7rPqWd+sXXGj/4UfylPbXuydfdc
2w+v67v1eLLn6Wz5m/4Tzy+9v+kXzc/hzaov0Bc8ol7Zuj4LH1InVJegE6tP
x1yU4kM6nvjBeAv8pPxv+DA9L2v+Nfze8Ad9MvzqzEmF55vbG49BPxC+Gf9/
4ZL3XtX/32ydXS9OyM6ZE+H/B9k5eD89enYTTzu+8oe/vP3d6qQzbzu+NX4q
/jr+p74ROLO+0dFL7PunT7nrJD5Xt5V38tP6oO6nQ509wof50+zIl9u+Xn75
5ezNN3ruf7BrT47fwd+V//2V/Nr9+bUH82v8G7/2dnjrf93+3+v9M73/asf9
x/3/p/v/qf7///X//7Lv/Xyv72770d7/5/+u/dv+9O77O692PpfkP2/KTv5c
fl599YLd37vn7a4TnQV6jSeXOt4BcT4eW/7sdHboa4s/u6fne09b/IZD2aWj
vT6YXfhKr/9S9uDsH2xfv7PPXbrkgff0/if/aLv/V9p+t/cv6vjXf3f7/l38
b3byrs73ybYX9f5LfR9+xcy70J9mvlH2ga7LxcV/+Fuvy/dad/vaPtL6exgv
rPv3IPw9P/ezcPe2t/T/n+m+39J+z3ef+bdvtP8H+/8brYv39Tnx35n+/+72
f6LXd/T/+9teIj503F6L657q9eV9v3jzqfzog9UFLik/xR/XX4zHcUjdObt2
Z/HZA627k93nc1tH388vfTz/xb89l9863uvPhWc+2vad7c8vXt/rr/R6T59/
ueNf0fvf6fM/Gf56XtvvhMs+/W+2r1+qXvly2522x/v/Pe1/oe/ve9/b94oT
39+6VH+Fp5rDA+dUt8PLpsdMH+ZVeFP5xKnyiOKbnRuykx8rD7kyHOGG8Is7
+v+VrWP5yk30Q6snTN9Uuqz4rHg9eAXH+Vl8l/h7+EX0iOkC041+oLwYjo8v
Pvph4ab438NbNqcHz7o4DI/svfAoOFbr7fvZjeeyI3t7f6fXf9L2vXCv1i2e
8WvZkevl/8V76s/0OvjhmVdJX0K/Hnw5PJt+CN6V/hX8XDwDc+d36Fx0/ekJ
0r1QTxr9xtaP+eLqNXDfC4qHH2n9HG5dfLnn/3z2K/twQfbnfflVduaG7AYe
z2f73Jm28NVX2/9j+dGvdpzP4vt0nIeL45/qPO5o+9O9/9G272v7RHbqnOqx
J7Lbn2r7Y/2ub5cPvB0Op642da/yJv3a9ND0fel/OIof0Hr7Ss/3e7IzV2Un
DrW9+pXt63fiL1bX+c97fVf25JPZj/fn1w7yb21Ptn1P9gVO9p7s6lWt9w+3
/VHn95P9/8nW+5s9Bwfb78/aDw/ja+1/tPc/2Xan7QPig/Ic+viXfnv7nMjb
d/Bu63PRj3Rtcd/t3cdr5Xeth1fbPtU6uqX461PFV+9u+98Vd72v7f9e3HZr
6+2+Pv/Ewu/ml9+9xImXt+VnT7We4TAf7f1rW7/fantL20v6/1O+76XtOn+j
dX243/2Otn+t9fru7PP5+ptan0+Xz6gX3CzP6D58p/sKd9jfetrT+rxRPbL1
+N+3/l77t9v1+bnW7U/m39Qxfzm/+beX/T/T+0c67k/2+bN97uOvbj//Qtu/
0PbH258/l7++0Pl/f8lT39k6PN76fW9b9Qw6taPXhC8Q7qkfQn/YOflJ8R77
83br8U/1E7Re/rj1cY44q/t6Q3YJf/J8/I3Wg3jw9v7/YLxFuCEezl3dZ7z4
0TevLx4v9+XiBXNBZi4B3a3y0b3qRvpf8J9aP/qH9Cm90HN7VX73Iv1KXefP
ZSdu6z6dKy5r+1Ottz/p/+KknbaXWo8d56fUoduyMy9kZ063vu/svuIvHmWX
6Wypd4irxBfZcX3yeLzjn8Uf9Cvk1frT9KeW98Pb+ekPly/ju5hzpi9ev595
Uuo/jxTPNfdwZ192gB+Fs340u8Ie3tL6ebb9n28rbn8qf/j5Xv8pv64e2//f
13q/JP94a3HjmaWueSt8MHukn/MW/OPO/6bs1q29j8eiroW3/Ag/3HFuh4vj
a+WXxaX0L+EU+EL4Q/RWD5qz1bp5uvX1NPvR65tPbf//xezKuYu/VF/60YLz
fkb/Ah5J8eFr9OD/2fK8mUvTc4ePBCcy3wY+9GhxxnMd/8+y63+Cv2leH14T
/hOehb7BrsexXsOd6F3i3ZvXQveaPvHdv9d6wZtr3ajnv7v1+BOtz0dar3cv
uC+e2p/zj9nPH7T/tQsOwt8+lf394Knt94k72d0L2l89Qt3jU21vUqdoP/i0
OPfH/I5+1zt6Tj6I59e6fqN1rI9ZvzC9Lzo77BL8T/+jevrXWmcvt76+m597
KXt5Rf7w4/nHq9p+JT+6v9c353/Ptr247YH+//72P9nx3tnrp3t9Ydsj+ek/
W+z0Rb3/wNJP86Pef63z/lDPi/6dq/XDqIeaI2ZeKN6cun55D17M4dZf9hGe
PzwT9/GNtp/nV1s/z3a/r2udPbhsrZPHW5fXyVMcr/Vwbd/3+dZBcyB2TujL
yH6rN6qzfrH6KH0ZfCE4KT20wcPpZ8HP9Z3hJ/b86qe6WdzTdf/QEgeJ+67q
vumH+nD37T3uX9sveJ1fvqvPyzN+ip20brOvH289H8z+4UfeqU7eVv6Oj7KX
TmDrgE6Z+rg69OigHWqbHoU5C/ASfOHRK6dvQzcsnjQ//Yny48N0Aoq77sje
6Yu5oft+bdvH28LJfq518q3Wj3qs1/KOW9te0vp6VpzY8f50wbdPZO9ebz/8
32/j77Z9u/jx/Pwqv6zupb/obnySXpu7di1+V/7+lrbqgvwx3QTzasw7ojtP
34PerutM9+bYMqfugDkucNn8EZ6K+tuh1pO+dzzBmTevLoRXUd3JPBrzvp/k
Z+k/mlNPp1r9hA4dfTzzZ+icOO6ik6Lfzhw8+mVwZryv0f1MVxqfg66RuZH4
/3i67tvl+qPzQ9cWRz2hP7h82nzRHyv+OwMfUR9t+zF9U/qPi8NuMQ8yPPxn
9Gt3nJv6/Km+R/91fc47b/T62T/Yno/PwXX2tf1e21db559qe6b9r2z7cMfX
N31O1+N1de3WL/0qvDDxN/1q6wTPRT8S/tz1rTt9n/LrO9sea0u/YU9559le
f4adzg/+fHZ5b/bzp9ruV2/Nvn4mezvxanb4aHb5+8UH4tE9cJ2O9x32H66Z
fdbPcoS+g3k39AXi19LNxPNRP3yxOPwGffz6Clsff976wGP52e7Tg/IMvAB9
f21PtP+p1sn3/nC7v/Wr/oJ/8Gyv39H6TQdgz4mei7v1MbQ+1Bnl17e3PvSJ
mEenDkznFr/8RrzJ1sPxF7fbe7q+F3W9f6v7918Vh90Z3ndzvO8DvT5ZPPVk
/vl/aP9/WRz3Uvt9us+91Pb/7f297fdn+e+nWydPw31aJ2+2Hk52fjvWReuT
Hgm9Fbwcel/yK30TM7ej52d0OvMH9CLpStHBxTemu3hO9wFP5YQ8MPvzbH7o
iee323SCdn4C/9g6wwthV/T39H96Evgq72q7r23+dOdd8uS232qdwY9vwCNt
PbE3b7eexBN0ME5kn296cfs7Pl28q/+JjofrZe6Q+ejmyui/nPmK+dGj5Y97
ln7Pl8oPrzDvtdfjF/FAy1eu0PfS/qN7T+crfW06fzO3Uv8GvYXOa3QN6Jfg
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
H1n/JxIn7B68I7wB9UL78Vq/xzfVnw63wd/G6856mh/bvilzifR/4mvAC/Hr
zbGLHzyUVzodL+WVn1Hffz55gPyGPX0jfp/OF90sehD6mMR/9FXFcfw5Pt2G
9YDzpa+VHumdiSf0C7ya/SefuTV+Hu9A/nMZHWE/m0uAj6ovPM/jGbzHfO7R
5DX0gIrbvv/ca+cghR9Yvkf0JfA+9cvj9x1NfCMevCTf+4x1OLWuT/PuPIej
8StvJI46GT7Ntv+S581uPrqed3OGtwauj8eFTyYPgdfSBdme/agfVn3A/tc3
pW/O/Bx1ff2+5uzqq9SXi/+t/xtPtnrLsa/6kORp5vHob6afos7Wun90OtUV
zXvvHMnMueB/Nt997v/1s8OP2C+6a9fl3Ogbmvj6/3NA555L7DudNf5A/kaf
xJyH6tq4b/rh4gZ15TzXPfRXsq7lB+dVPqTO5Dxu4EM8tn4/XX/1LXaQbqI8
F87LL97AT6or5XVf1hl/VJ/4fnX1vO7GM83rjXk9mFe4JL21nfk8upxP2E/5
2VzFV+A88n7zTwf/Gm8Sn/UGfgUPDE8SP1D+a94G/dw8nwN4jPSJ5NX6xJzP
2MXySLLvzBu1v/Dx8U2vyOv5sYN7Y++ejZ37VvIK+u+n+ONRN5WX0IvFX8EL
qY5rrgNf4cXYs5OJA89k32/dce5VvNc4z5z32Hv4Hx5d63s5rwdj3+gvPAnP
oq+Rn9W3zs/1HcpzoiP/cu7zYXX0Ma/gkOepbvbH6/P1fXTm6ayJg+j98juX
yRP1RaS+fX3i9PZdJy43n8HcmvOC3x4Onvu24L36X7835ja9KzyOL4W38Xr4
HJ/P683mLI55i3ebW21u+v9aX8M/Ko59R/wmntO+2Ad2mm6RPtmTeTW3+Y3g
byeTB5p7tMf5pS8vTo/9o9etPiMeoL9wKPb4ylwfHWI6M/QYnqFTRv8/8e22
4Brqm+rUJ9QZ4ldmv8Zueqb6vuHI9Cfw3vQ36QsWB+qDSLyjf11diG7za2M/
3Z08/6nsq5+gm591oj+nHwi+Ky6k+0NHyLmFC3kO+p3oUNLdhEvSLWg/Gv7I
g+srPu/Wr+e504XK9Vw38GdzmPnLrlPsB9xrR+wv3fJt4n95mn2VfbYzOIK+
anO+3g9XzjqJJ/Y8u+5LdUbxh/5oOChe+aa8gY4pvDV17I3guXSui6/JUxI3
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
uoS+WXOry1eJPdTnxZ/itfX36kbqcMGh6MPjhbVuBN+7a70v9hzP6Y2sl3lt
+j7UI9QLfqT/NOeHjgx9XedN3Hs3vRT8WXoUg4f9ePqmbks8/cd5/SU6Lomr
6QvTu6Yvc/Nz66t+T/O69g6+N/0W8zL8nh6jPp1LEx+K//V9XZhX/G883Rfy
qq6mnnaY7mHwpGuCCz0FV6Lrke/VR3hNnturec548J0HTv8g55n93aS/n3N/
MK/td/nm+nf67MwZwct/A46U/Eid/eacP/1O9+uTw2unCwTn8rynXqM+qoFz
0Zl+0xw0+vN4Ifl/dfPr9LMN3taro15mP1yadbg5uJN+4EdXnGDjm3n9l+zD
17Nu31cXzTqxR3Djk4mz1bXoLVQfBC+PnkLsv/h5H56eOHr0yZTPql7ALsG5
w19U/9yWujz+tfqA+izdBHxG+DA7ggegHi9OoxenL+qVMedDfoivt9OcZTrE
eaUbiddbPRXzFti9/DubfFA9TZ+nuThXyxfMC8CHSH6hHqd/pX3oA4/BD9ZP
Y34mfpx1orss/sITwGvW50x/Ah+z803DE3A95uXhjeu31IepD0O8izd1U/5f
HqX+WP8G3+eX4v/hcvrU3jr06/z/afuVbop4Dk8D31z9nJ9Shwk/zBxqPHh1
U/tQP4C5bUeDU1d3Nettnpw+IXkKXrv8QJ+GuV6eI3+mn8P8U3w89djZx/SM
+rw5lvg37A6/me8xl/GSr67r13mNuX44QOtH+L6ei3kGv5LXu9bf41nohzPn
pflX4jV6ELVL6o9Zr9YNxUP4rbFr+IDwDvNd8aPVh7Zdm8+j+0CXOvZHn6Lv
N4+YzqO8Hk9SnQ5v7y71iNj/84d/MNfprqybfA5+ch38JK/Vp8/78CLocThf
7Ez5wvQPzVF7eDyH7GdxJN5j6/n48nAYvH+/x58xt12+medaHrr5uvQU1fH4
EXNohg7aDeO878nv4XTymo1hB+QN1VPSv6hf5fPrvuy+y32Zo8cO0GlUT9VH
QycLH5HuT+d2q1M5r/obci71pcgD4YX0lvBFb8o+umL0xdsX7bPQfwtnyPer
s+Hx64s8m/ugP6mvEr7Fzuur0t9Gd02+RQcUzqufBH+Rnt92vAv+d8xx2Bh4
Ez0e+DrdUTj0nvjta/Oqv8rnm6u0L6/yRfpK8lc4FH0H8wjwQ8wP9/cbdJAG
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
qHvzH3AFuoH6R+ATB5zHrCdcH/4jz9w5cJztwx9szvr84+t1Nr+HU/MXA9/A
2xBXwE3waPCZ8GH8HT4me3Ni4DL8aHW4n1rvZ+oiw/vKuxl9++Vn6k/KeYMj
qjtXjy5+QzzROpt9hqerrnDrut/KL6I/oF7hevlb121f8NdwRf1V/Il5lHk+
8CX4D14xe6UOuDVwuH6v+iL/Qc9g7B/+o/MZsh/hWupPO+BXcDp/P/HB0X9t
X+svtJ8257nTx5B1qA4wvoi+utSJ2I/2A2ys69I8HQ/6yHru9Ql6vnDU9o2r
N/nnOvGa4Vn04Nh7/XThVVQvgX8cfs8cTvGOfgdxE7xHvQWfAU+p+zR1Uzp9
5aHFb/F/xcXCN2o9C6/xd9ZX+efTA7coT9c63rOui74tOnBwBn0XdNga79jH
+Vz1/Kljjads35df6BUOiefnc/WvpN7On7VPjJ3kl+Nn+Dvf235R85SnnzJP
zny38JTVb9Qp1aeKS7Oz2fflmeGdJs7F/3L9tVfxn/Ig803k1d1vo98Fjwbf
5CU6RcHjXvUzPaa8H0/cfpVPqwNPHUZ5WO144if8Hv116npwC3mGui7c687B
a4OniLucc/tI/VQ9x7xB/a3wxM65TX5G5+O4vC3+iv4PPwnHvxYPgU5IftY/
Xp5A9qn4TL+4/auO5HM7d/Uv1+s3P4Mfqj4lv6HekOtQR2pfEP6OeIf9HPqV
eLL9vvgJvB14DTzHfrE/2BP2Bv9J/a91afzurOshfaXZx/AYPMLa6/hR8ead
2d/yTDzRM/Fj4mU8CH2fL+a66HU4386jPFXcCS9hv+QP+iTgqfBK9kDcVb8r
DhAv+LysK149vqe+lQP6s8w7kRfIZ1JfMS+wfez0qeWv4sV8vzzb83ee1Qfk
V+aK4Kuqp9Se5fva9xf71bg55xSuhAeijiReEl/BAW4aPAE8Q7g+ewg3rP6o
+RXp97w0+DN7Jx8Xt8Cz9PWZYwTntk/pNehroIugXxcvH9+VHjk80T6Fl3Uu
h/pj4rrOI8p6NJ7Q70GXhO6MuH30e+Nd7oXjB9dtH9KYWyve0z+EB9h6PRxG
XvDJ9bzLz/hJOLf8np6veQfqTHAe8RE82VxJOkPn6/fAX4g9wlv0fNRlPCf2
RxzGj7W/m54A/4Knoe81OCn9W3xf/Bt/J87Fx6Z3q/5B7099Qn4F36CL+5Vv
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
r7TdvMDYPToJL8TO3xw7TY9SfWZX9vEReWTuz/wOcXfzArqd2b/texD/x17V
jiT+gHuWj5R9aQ7itfKhnLtn9YVmXx/Jup00R0m+m7gVPkAXQbxNp8f5Kh/U
+dd/nXhIPZAuHl0mvCJ+Eb6m7oh/hffIP6jLmj8iX4FDw+va3ykPDz6D7/xo
4uby6+lu4NVfvX4Of67vBt+ZXVT3Pus5xn9cDefEg9O/bt/jJSYelH+rY7B7
J3Ju6ey/nOv4fvIXfc5nU288mD4s9pqeIL1NeSP/SBfHdelPgDviJcCryu86
sX5O4/3Eq/re3NeePJ+D5h5kfTtvWx/NV9frZx/pwzrv7F7tTK4b3kC/Fe8M
vi+e2PrGes6c62PwUfs6/pSdxMPGU8QTodOB54Gfr963lc/ZIZ7Ct5W/ZF/D
w8U35ixsjjgIvtG8hj4AfkHWla4f3QZ+lB3Fi4AHic+ey3Xic6j/wjXphVTP
OvsVD8O64JPYT80X83ninhtij+Cg5svcKl+NfzUX1f3p3+Gf5Onshn678hhi
DzrPSN6KP2LdE6fjrbePJ/tLXWnbqMPO/gN16M4T+/B63tW98anUS/f/Xc5n
XuFI6pPX/I/1uTwSv7UrdoCuh32mjqKv+fy8lmcjPuHXUx+5YswNLr8Fz2DM
OVJvkae5b3GffrfzzfPI58sf9ZeZj7Ivdk98gfcEt3G+dstXE8fgh+GRnZf8
zLxkuF7rdtm/+qDmPFF1a5+rzs8e6B+WPzs/8E32Q78xXiLehP7sDbyz/Ezn
4oW/Pff6WtYdf6B2LPeBr38BfCiv5i7xB3iXrRt9/v+/H+EhdFTUWemT7lHP
DN+Mf7ws/kl8pS5b/kHsm/oGfun3kw9fljno+trkB2fkNeHx3591/UriWXmO
/Jq94z/xeTonJOvwUu6PvpG6nvhHPwl+iPoMHJVuuH7G6i0nDlXXxhc/Zo4W
Hao8B/VMeuUvjb7Ki0f+CX8RH9LJl7+dl+cofpH3bXfOcx5vynnCw/I9/h8v
jX+l66Q+r88Ovxyvyblhl9Uh6TXze9WtCm5RXbZ8DtwT3qdPb18+X/7T+r46
WuJg8R88tro2+hny+9v+at33nY+T/Qpfv1nfnud0+focxD/yGfsQn9NzMIfE
ucJrrK6fOnPsrbl76il4NPLV9vfE79hfdLPpo5R3mHxb/xt7bj/B49QTy2ui
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
8bqq90l3VjwfvyfuMW/a+Tqd/Mt+FHfZh+rdrpduz1ber1+H7q5933oGe5i8
ubwz+yjrWt2pd63n3flpfdL5zfPSF6ae4j7MJbCO9qn7Lk6Uda/OPL541km+
fJN8JutbHszga2yMOFj/kzpb6z/wltg9eqLqY+wc+24+gDro/thr+guel3Vr
P32uzzw487bZB/EfXq++9p10i/QT5Xyz552voa/BnFi8oOBE/O9d8av4DnR2
95if9uS6no/HX5ujwq/v+qs8/z9b9zUdjRcHTmE/lzcaHlf1ueMv5CnyYvxD
OLrnCLeAq3lfeb6pG4gP8bnwKbcG3sTvqWvD4fGjzKud+j7wUXEee+f8yDfE
EfaHPmB9ufTfGz/Ab3M+3Zf4UbyovvfisOfqdPU/6mLiBrgRnSzz47JP6PTR
KdiTfb7z5Lo/zNFgJ9VFq2M++v3kw+y5OFqdDu4mnm6fq/tIHE0HQZ6h3qI+
wh/Jp3y+OjI7AX8rzqYOpq8v62WfdT5F8BR+mT23jtVpynMW3+Ez8EPqpvBb
dlx9s/0w2U/irNZXUq+d+mFwIvU0vJPWqcyvU4fyXBJHyY/hKb1uuvvxg+YC
6ZOyX8zPeHv0YsTp1ofe++ngUXjydK7Nb5N3dH6muoG6beJH9VDxe/O9PJfW
/dXzEp91zk3wLjxv8Uv5h9Yh66WuhH8gLuN33Y/+PLxyeFj7vPAW1TnowdAF
gE/Lw1KXaF4ZP1Yetn6i1J3E++yHufZwM/lk67NDj684UOpLcAt1PfEu/FB/
An3DB5LH7KYXiodFf82+Ek/jSeiLTt1VXyweJfyULgR/Kq7HS5J/ii+Kh8Sf
2o/yIPZMvwCcdad6RJ6H6yhemriIXojzNHn05e9mv/Drm+YYBZeG9+OtwU30
5Xku1Ru8e70v50KcYJ1bj/J81XPgVc6BfYf3Yf/jc8ANzTPZWK/DOfX56pXd
V3Qq4RLwYf2qOVfwFv5AvLEVu8XvmQ+F9yueoE+lf8p+gC+xn+2rY3djL+j1
8//msjSeHPpF6tPl5+AJxS7Jb+XTnkvnxuV99ln7qHPO8Ro7j/Xe9furSzjm
m/NvrSPuXV/tr9l3xF+IS+y34iR4BPquzCnTJxveTOO94AFwabi6+KQ6c84N
Pxr7iCegbt66f/a7uP/48BPicHYKXib+EidVRzD+WbxGZwJOYX+Wv67fkf3O
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
Q/j86N+HE1cvml9OXM9+VE8EH0D8hl8SO82v4V21H5T+kX3/yfXvqwua75PP
wQ35MedOPVv+I34Vl7bvAQ/TPIfkj+yG+MD+kD9V7y88T3mYPKs6gvSX9OHq
4z+Q52YfZ/06v0K/Flw499f5rnS56LrmufAf9r98TbwF56BPLK/0/eyquU3V
v9IXk/sSL4i3zPWVX4svxBvsOj6w+AF+5bnWj8Lt8Dvlmf5lv4jX7KvOoR7z
QZwbuI7n1nhz8Jd9X3HE4d+KN797PR/2YfsZ4ldrp+Jvyp/XJ/fx9f7piXTO
DVxEvUx+mudAv5nOrL+3f6vrmDxBXmW99K1ZR3WmzjnBe2Sn967nyOfgadav
4NnH3+EF4oe3TyD7he4sfEycDTcyj4u+PZ3x6jzyO/le+Do7ze93/sZn1++B
azp34knPBf/CfsALU+/3/GtHEv/DnfGQ3Uf/hT9yduCLdKfVwTxn+Tl/rE/B
9crz5Tm+j10pvimey/kvb+OxdX2aH+iXhVfjQ9IDjL3zfniy58qPtf9enfDy
9bm3r/XmdT+pR+PHsXszDiy+kr+vrnb2V+dsmuPHP9++Xje9086rzTmGH4gj
7E98Zv68PFb8cjiX/GPvel3mHXtO/Inz0b6rMUfv7Iib8a48F3YeHgPPlAd0
fq/4VZyhnkwHB79h2HV26uDgIzmPzhl/4nPl5Y07Evexg3jR3m+/Wyf36TmI
053X6qbStzIP55b1/KvnqQvAD6ofMvYRnTS8W/UnvBA6jvJ5dqP+wXPLfeJj
dZ+Iu7POnReobuE50y+Vl+5ez3F1xmIH6Bt1voy6rvg2+0Cc0Hm8w+7hyVW3
6L+u+8b9Vic68Y48vLjLwLPFH/LWOS+T/YLfV59EXqA+KZ4Z8z3wjMSH6svi
VfaEveTH1X/Ls9T37BzTXYUXpA6DD9G+PnFsnge7z497f3kX+CKfXF+L04r3
1af1W+KX0XWWf7luOlpwa3W7B9fP83fyIc+ZHxJnzbmG1e9n3/R76Vcxty95
TnV3zA80h4CfzPnFf1bfoIdTOyIfVeekR4sXH/xaPwI+V3X7/T38Rhzz4Pq9
8rPmV4kf1RXwz/XJVLfIHIXYIXxRfaPV1dd/BzegP2N+i3pH7qN8NLizfM76
ZX3g3Hgw6hKdQyXvYvd+a/1/z6Fzoeh70V19bHyuutzoty7e/cR6PfXbfo9v
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
a6w7WU9hl7L+O5/yzu5cx/qpdnJ1MMLXX/j+0bM3Trc6KvfmcdZf4okcZ/2R
PHmug1jvJJ+B9+26h3UI64nrs92WV38L6/L4k+gf8dPPcl37g/4Cn0g8nrxu
1lnUFzzh5eyDT34667nEA+7lP2OdnH4/Dn9MfOW9ef5B8ZDooxwXz93Tu6E/
eT8vZks9Xkp93k+7wDPAe+CbHWXLefDS+J7entdp3xcXZd1FPF30go1PQ8+Q
9QrfPesy8Jb8vI51ETzz6pCeTXs2vFa8FfyXfN3w5RhvokMjX51xH/4l4xTn
gwP9dB7v+sZ4N/DgxHvaT+Xl/VvqDe8y6w71pWgXzxv+H3Z+eAmuH+GHk9+a
8Zl1UdcVx/M8ef7nZrm2n3oSdwauiL7Lz+d53o916ruzft6HeTi8VnXUsv5V
N6U6rVdTXvKvOb9yn+Pc72rqHR6ux7kO3gZ8ldg38m+Z57FDKJ92EPfZ/H3w
g0/N90Nd2OLPvCfgvszj9BP8VHRm0PEF3/5pyqsuS+JPF52E5K9U74f3i3k7
+nTej/IYJ6vbElxJPDW638Vhxa/q5wMXZTw/O893/I/fVNw587bxXdFFcJ4G
R2T+Dh+iPAT1SjqP7ekt3Ez7Pk476Bf6+XquK5+BctPvj2sn3Us5zM+tT3TJ
xYubhwy7LP4CceLmz6G+H8/yeb7aS/AZ4D18lnYUJ6Z8/NzguQ9Tb+wr7DXs
LnRp4A+Qh+jBbE/jO21P+Cr494+DF/u8+j5+mnJjx9oPwbXVB4ndat4R+vH+
vP9h8PjD2supp+8D/qgbOV4+Dc+L75HvO/i79Xs4y9fOjP6I19euqz8oOilu
L+W66sxjn27jqfoajLfw8Rinss7S/muehuqiEReBP/w/5//MA+po7OixWb9f
pP2vznbUX289T87zrA/2Z+Yz182dH8EzwQFu57zgXns4pPgTOErijo6C84qD
Jd7QuKfoBj8KrihuBV4ZfWbjo8BvwhMVvwHvSTybcV7BRcGBxDfR+yb+i3oE
9zoR3Aj9afju8Igbj0g71GunH76a5Twq3gYuyfNAjxse/bcpLziS8Y7VEwcP
LG85+JV4Y84XtwV3Cw6JX6P4srhh/EBu7zy7/r638edon2L/bu+feG78MNp3
we85z7hL8DJwoR0dXfUugpt13ed6M3ac+BL+M+xW1gucz3i3rY9cD7DeeH22
zzz28CqqA8J6L3wT23c8618/oeMg6xPGqaz7bE/GMeuduGh1cIjjoz/BDeOP
qV/U9Qbrviuz/qfCV6nODfdt3l6fD+u1y7lfdGXEabkfcXFvz3q4Lo0f1HmA
9S/vYXWlWV/wfFlfs55hnZR5z+dI+6Mr7fvz81n+ohsUfrnzefLBan+8k//R
R8BOrr3y5ixXfAn+Y3XvyhdM3uvyncX1bqcerHeix1Y9EvMdlT8J/+BOyrue
9kTvpbzq8k2Oez3rh9jTB8FbyyOVP/PJvJ/9UL23toPrP5rHD2tfl38Evlw+
KfZk86pems9l0Z/j/WBdjD1FfEDel/I3jtuPt2f9XTdWL471U/Q7j1vPvo+8
18nfI6/l3qyP30nycFmv6pVX9/Gd+b/rmcYPXE39rqTdzV/7UdrJ86jOMngv
14U/ZP9Qz+Pch/VMeE4LH6/PkfepfOI9nhrrFca112e9fF48F9Y7v8oWXCfv
tThM8xL/ZNbL96g84l+kfs3v9rvUg/k06xd/nI/OWeYxz9/WLeBSro/wt4Vn
7LoJPlHyQIqvNo49PNHi6cYXs97JvC4/6Y25rz+0fkj4JpdT/vs5/uHcfxJ/
ZPNmNE678Xbakddm+eaR+mTW23aCU56f9TlRO5k4u/ghsF/Mk3Rv3udJeC3a
Kdhd8TM/iX9YXnDjoosvVx8SXUjsw+D72k3g/ayLw9f1OcTPrZ7nv8/zT8Ve
exKedOPafR/DxzOOsOuBtLv2mHlHg4fLIwnurX5I4zxZ/0aPRd2+vF/NV9M8
VcZV3sv9WAdmXes67ZPZnua5OpF1u/miwi+y3qzjWG+Gb6IuSfR26kdp3Kzr
3fCDuv7i+fR89VbuzvP6vpsnNvw+xwP6J7wk6t38S6fCA+T79Trevx29JHkY
wWmMO6juf94/zpdPwvcePlPzuZbX1vFWPxfzCuNA/KWuW/Aj/ib/41cFJ0z+
Cdep27jBOKK/pfqNP5738TzmTewF7E9wRvStfznra32wi8Aju676t516Zj3v
OhFeb/R75S/ynHi+xC0zX+Mn5XnAf4weiPhJ8jr43N6a2yeZr+UHYx/8ftbD
cb3jP+Pm+fm/ep3vzffyRL+b6KqJQ8E/A6+6N88T5wRHYnwM3ikudz/XhXco
HtvxOOfLTwwfWB2x6DD5XSWuybyLtCv1fxJ8q+NTx9fqqIjvlZdMfdsv9Bvt
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
T/2+l1NfttFLbh7mxqE7f4K38X41Tqk4DfZJ4m48rzhr5mPxm+YbuZz6XEs5
zWN9I/e9kvsV36p+fnCkpf+xP5nvsRv6HJvHm/pSf3C4D2Y9bUfit/z+gk8v
uHXj6Ngep75vZosdc262t3oIjf85jt/zIP7+g+Ku0cXwO2Kf48FDD4Izeh7j
Vu2Y3r9xjI0XvJb7Fce9Oe/ve4P9gx3D+Jv5UHug/8cuc/7f0dHw/OCvB7Ub
E3foeXdSbuZ/x/97s13VY2nc3+IH+GgeL87tceqFnRGduOp6PM48pz1xb+5r
V4RX0njL1kOcvfot2Ee1e4OzH7bcjkesxxjPwqtxPqiu/Y4O93G/h/Zv/Vc3
Ul714Bl3EtfrOqF6hV33vT/LX/qD49dnO90nzpl1GPNm8niou9d4QdbNr2Z7
evab4z3z12H2z6S82iXVkyzPKnlqnY9P5fjr+f/MvG7xNzJf9nnF7nCcrq5N
/KHVMaydZnuv5j6dN25ky/NgPuE5np71XM4Hv+j6n+tey/3BH/A/gOugE4b+
AX5r+hs8ijiN4KnGg7BFvw5+QeLNjKM7N+8rHlpeAP4CcD7wy8TvPAl/Qdwz
erTyGagfOF9wb/0K4JPBM+VnRq9jwTUTTyV+HN36U8E/xc1vzvvJR/14ts/y
im+Wd/pByg9vddEPCQ7vc7iW/5MfXpyW9pZHw/tQ3Yzg5cY7nsv1ibusbvri
j+O9Znx8PdvyTqsDxf8dj/gewenw6xGvhW5f+CUe/3n+/1Ou+8+0K3mN+BU/
Ns40/Cy/25/P8owzi3/T7xX9GMYdxuHqpDZfNzgm88uZHGecKn76h5z/i5RT
nVbWgawTLuX4u/O+2uOM6533y0dkW/u580F4wIv9VP5wdeiqixBe6GHwEPm0
4EDkPyHvHPzR8Ek5z3x4m97dS9uW/Hvk6zP/3na9eVaS3898eV/MeoMTkQ8Q
XT7zGYLv0J7o9skDfjD34cVWd0/+7xcpZ+uH59uutJu8g/CE6Qf09I7TH/CE
Ke+f9MdfZ/nyiHf6uf1PvkjyRz7mOOV+tx3fto+37Utb3siXvpv1YYu+ofvJ
T3mYfjAv5TezftT3+b/MelnP7fzn0x7yMdIu2mF56Rf3814fp398n3luvA9/
nu0xn2b43f7Pc+r/ybfI+/B82kV/HOb9Mr8Q3++f53l+P/DWkx/zMN857TTv
Jf8Xv/1y1t/+SLnqbgYPLm58GLz+OPi2OO3nuX/yl+ovyDq1eUX1GwRHFh+/
8+z7iycUl886kXHauIrg3sZBxJ9xkHq6/uY+iXc4Lu796Ty/8Rrer36m4ADH
wSv0B92b9Xvc+7EeDv7s/Nf1Ke9F1tMHWQe5fi1fjfUd6736PfkffK75ujhe
Hm3zCgTvXvBN7lf/ba7Xjngn9T83y3XdeG3Wszik5dbv/rtsaWfXddhTP0u9
sUvhA2NXbXarfJZf5Pwz2ef+0Qm03tSr/uGXU154w0ucRvXw6z8ObuL9us6+
nPIvzf99/45TzqlZf68Hx/og5VRn7uKsh3Zd7cHmbytOtKN/3H3jtPh+i1di
P+7hx9FbEx8LDnwcvFMcszpkOX/BDeO/FkcrXzv4cHHVg+KM1fsqrpt8wvbD
rVm+8wXjGvWtv/le2l98+KN5nv75e2nPTh73w8w7ltvx5P1cV38m1/E86x+K
f8T1SXXJeJ+rw1b8i+/qvVnPjteNg1zyc7BlHm5ejvpNqBfPjX4Kvup+9eOo
T/kowT8XvJZ+uzTr6XhWfyLjYv1LWYd6Xsb5xb9Y3ba2rzgs5dWfdbzT/j/m
vFMp743cZ5sv5EGDH8BXBo/Y4t6MfwK32clT4j5xZNXHAm8qbzN5CKur+yQ4
mnxXcMYr83zjz+ER353Xi/PBN44+ibod1e+AZwyv95N5nrou0UlRbyVx7tYP
PejkTbMc7l89EnS34BujB1CeNPUM3xk9AnU4wuNedJSjY60+C8eji0M71K14
MLfqGjxIuxrvv9Me4/p7v+opRD9LHbDoH/gc87zlW0evRH3xL1NP+pn+Sh47
n1euRw8C/ZbyzdXP3s6vXof88AfPPh9+OzosXle9mB2dE3jx8uWTN7E8+kXX
nHJzf3V1Hs7/1UGnntsWXRB1Vrbr0DWhXx5+k/+369Cl8f7U96vZHvM4fjH/
R9dDPRzqyfPl/YmuovEID2a7aRfvgeMMz59+S//6PHl+fB+8f8QjfDnrbz9H
z2PJvxj9IfNrUq/oXlWn40TeK3VUPp3XHaXevsefzXLbj+a9jf6f49HduW18
ytNuq490d9bTcSF6J82TqP5hxtH6ffQnhddvXkTiOMiPG31P9b4SD8B5tvPu
3K+frP1mXMmHqU/iCpZ4Y/xP+O8ax5A4o8YP2C9sP8h5t+bxxa9X/1jjI7iu
cdaNxz+a7Vzi9M/O+1aHsOcZx/DG3NePy7q+8cuNK2adj72H3cv6HXuP9Xv5
Xaz/wR3AXbKO1//e67Hry5fCPr84z3f9w3oz64fyrl0Xsm4L73rRjS5/tDzt
u7M8cbDqsrDeS14k8+g03xTnVZ+F/eiclJdcPFh9kPCA9RuVL1x/ymez/Jaj
3kp1YL6Y9a8OTPMyPc7xw/hpPI8t6/ryvlhnh5/vOq9xy+VhsQ2fyHVm8cjy
aIpPcV51t8Mj9T6sUzmvOFb9o3yvxZ/ezHnnUg+u4zvt+vStXF8/beNpGofT
dSL4Y/Nkxn9ufBTrR8oBf0QvpXFH0UOtv7p6p8b9/XaeZ35e4n9/Ps9fdF/r
dyfPJboWjM/waPDn47/f05dmPD87r1vig08/ux22r/q0ya9hnHLjzao3y3M7
mX3wYJ4v80ifO+XwvE6lnFezz/bNZ//v+/Fi2pHnW515+zt62eYljV5I9emJ
0zMPTPVl2L4x+9l6Red3j7ciHwteBf3443me93t9lr/0T3henhd9W+PdwWew
F/Ar8Bx57tVtq9+Eep989nOT//LGLL/v4/KdNb8lP94/2t14Qe6zh2MxHvI+
bu+f41x55ozjyfcrvhl+s/NOeKDaIdgrjT/Z0elofkD9ovGbHsf+OIj9cRz7
w/m2fIrO7/iV6yeOf9fr2Cf/YPze8D/ko5S3gR88fJU9Hov+c3gK3+b+D+f1
lLvnX6ed8BfMA8l98aM/nPXXTqu/m/bTX4ln0j8cXbeD2D3aX83TEt55dVP0
E32a8+/P/fK4H+c8/U7152CXfzTrod5J/D7lUy3+Duy32ltcz334Xt/P8cRd
6QeKTqI8/PJ+Y4+5X39k7bjo3ni/vTjfxsdW75J1W/0T0WnvfGleLcb15N1a
8oNH71PdreZDLt5wOdexjk1eN/H1HHd9fPHZ95EHzH2vze2ig3Zl1nvJF72H
EwRvEAdAVyH5DuoXEMcOTixejF4DOAJ5LsMTli+cPAfVt1DfHNwouJM689yX
didfi3k4wOmCZzX/4aPg2uoig7M9SLngdcGF1f0Fl4zOtXrP4K3RueY4+s8/
oL8cPebv8/8P2/a5v87yKee57569fWHbnty26Hpf+C73/W7+/0Lux/1brwup
zw9pL1v0r9Wp/maeL66L3wA/AzhxcGi2D+MHeBS/S+sB3s3zOkr5+l2iZ2N9
glc3n4B5XuLPUjfn87lVPyjtLd5NfZ/u+A94D9Et5714mPfx+7xf6pd/M89/
Ic9Jnfeel/f8+/R39zn/HymH9wB/iXrhX892nogfov3zqN8p7w39Xv1+nhvj
UMaLnme8BMeTh+JJxj/Ht+g5mecgOPuCwzNuRzeneX4WHaSb8/xFF4t5LflN
PM59mCfBjRNH4fzI/Nf8VtyX66rvGZ3VZf6LHpHr29gLbn87yzF+ADyB37Ye
dN0MnsF6ebMzXMf9dJYvfsF6kfUl6zrsm/C1XG9u29o52kfVAa6uCrhD141s
WTeeznXcl/iNxodwv+qmvJb6Nj66cd+NP6vdWJy9ePub8zzxyrM5P3HlC79k
L87+Sso9P9shrt+4/+oUVP+zfLp35vHjXrfH84nuoOvw6BguOql97o034bmU
z8lx+id4sMcb93eUdpbvGnyi/CDb2fu/P68Tz62OQHlaxbdTv11dH7Z8Z9HT
X/Kjsn9mttNtdWPfmfdd9PzLH7uSdl7K8fLrso5rvyy8uvRr14U+/7OpX/nA
lMd9ui7u+f2eeU9O5X6Nl92eh+P+Ng6LBzL+smU8BV8Fn9vwPMa/xpm5zovO
9JOsHzsfuR68MMupzpt4aHF07t/5l+vZMu+zHrudLeuwxGW6fyP79RPjV2Ye
x36ojuWteVz7IOtx642d8H7qcW1e17zs+qeTN23RDW3cLvtnnr09leds3OGp
lBucofi38Y6/mdct+fLAhTv//zrl/TLbX+f6F/N/eIzeD39B9ML7vqnrVz3y
rV+al5bvxvv/x6zf4odK3CblV08Wu8f6Nx8h9hQ/7BNwJuwbfntxs4mXcDxv
voX6E6sbxHMsP5V5YY+fGv+k8xHzNnm3L+V+L892ePxs6n069Wj8aeNQXsn1
76Y+5VdUP6F2YNtVu7B8iurq1J/xdspv3uY/pn60s37iMymv83btjuhBqMdR
nRy20ePQH38n/9few16Mbrp8f677IPvVm74662e55ZdQfuNEwLWje6UeOzh4
+QSNV3knW55/3z+eY/Oa8B3y3v4k//Me8Xw3v592AD/iyROnrp8QPzXx9qzv
6o/PeOb41Xyiv811v5nl6s9lfmI8Tp6T5mOtDqzjdvjoxc0d/6vfGt0B+WDM
z9gft+Z5ztPJryluHJ6dfL/gt8775BUvjgyugN0AjsH+9ZyfvLhP0i71Ja7M
cj2/+Vnoj+Amix2WfDb2H+Uc5/yrs93VGbZd13baE3uwfoDqVWuvcvzDeb3v
0bncj/6PjrbHsYOS/0f85s1Zrnru4U3aDvrvxjz+pM+j/xdP4rz6XZoP551Z
3yXv8rV5njhSdZWLU9GvF+bxU4nzWPRers1y7Ne0z/qGF+r7xLY4XfJP8x0u
eahvze+6+XTLV24+3iWPYfIA6leKzndxyr5nvuf4x7q+ot/CV2k+5iVuJ+/n
k5YT/RDXH4yjXS+mXl7/7rOvX/IdRf/7Sdprfuq2++K8j/cvD/f8LK/rn+oZ
OZ+wLjqT83pd7PquS7TzO18z70bPxXUO52HPYkdgt1dPu/wa1g3ct3mOsD+K
g1JudbCanzFxwgsvmOPFs5pvKHnmxH+KF1afpf7/6qrCBy5vB15w4vOrB1gd
Q/MdRr+gugeH4V2o65j7N0639zeutbq35dOGJ6ROQfI3Nu/iQXgt8G7gxRzm
uvKQq2Nhfkb0MaLfAb8Hvg/6H99E70QdDvbRTfnrPM7/6LWgm8L+Mdf9be73
OnRMnv9u1udxtpyPbk71Wx6nnOP8/022z2/1+ud3s578f/j37fz/3u6//f/4
r/P+1Y057n2+m+0/Tv+236sL81Kv23sef5n14zj6KOjIoLuiTg/8MHhf4XnJ
93rw7G31NRdefvRH1CvhO4Q/xfox8eON55dvxbr4w51t/SHVHWzcRfQpHQ/P
Z1u94egqL/z46CovfoHzO+e9li3lgyudyv9vp13gD+BPrFuZv17OPr8fZb/r
4ubp3PMXMm/u5V94JdcXD9tZj4tvxg4wrwe/zsPN41fcnl/sgOa/qE6e63Ts
vNhproe3epbXpV1VHL/6jVyHvVa8PPHZ2sld/74/y2/+7OL7je9a7h8dSOtz
89nlue5IXhzXG3t8tuRNWvDl6iSCI4Nn8HxYXxUPOZv7oo/I84ydqh/gv+b+
wntPfZb125Xc5+3U7/V5nf5/8G/8BegN8v32+3k1//MdxB/Ab7GjG08TPR7H
T8bFszm/ft/i1pxfv2LzokQfYtGhBUcMblkeb3WenY+iR9K8FYudWb54dAgf
53zj2qrPHfu2eR3KT1aPJXrdnp84vOK7zaNofGD1qZqXMvkQxJXLN+G9aL6b
8IOX+EW2zWPQ94tyq590Lv8z/3U+fm2n3tWzil99idN6Jdv6Q/je6keifnxX
5SfXz/TmrN8SJ5T8VUvc0VYP47bij170XDP/FRd2XPjJLFe/JrrGRzvb5OUy
Luh/zH1xvozH9fM2v7Z+b/KGNa9Y9XG5X+fJ8K0dpzuOBy/0fHC/4suX5nY5
Hr93/e0L7r3hXMbdw+vbyW/YfIbqJkT3Q15geIzVE5EP+vmz/y+PEh0O+Jbl
UZ4Mv7O8Z/i8nFf9C/io8EDl836Zejyc7aF8eKtH4XGiy6C+R/QzqrNRfi18
V+rNvvze6GOoH0H5D+fx8mDlrUbPA36rvOjwnx+l3/Z0Q3p/9VS+mPvqX2Rf
fQq25cFTTni08GDlzYbX6vvN+eE5G4fAfvi38r/h2/LdVP8heg5swZfVpwju
rD7F3blve6Jn8Sj3N54icRXVN+d7N/4geV69b+5j/ATHqzPy8TzeeI7ymJ+2
fdXj+Cj1S/xF9TDw5znefTrv4/U893s79ct11qt6LJSXrbrwrG/y/NXN4vie
n6FxOByvX615gyk//OXu7/kVzQ/LvMj65cLclk+04OXYNfCZsSt+ky3x4vB3
myeh6+nEj2sPYcdgn/CLfof2TOPhi5uk/kvexvI09nTWOd48j6/m/LPZlkeC
3Vp7r3rsbF/K9bTrKOdhNwdvan6uhTfBfvhB4ktHO+2hX6uXSn/wPH6W9rY/
Xs992We90Lww4a36PMoL6XN+J+VT/8b19/lRTvG24mTVl8j6adE3bL4tzg+v
9aDb6MQueCL9WH7TuzvnX8h++DbLuru6weWVN78X67vy2Mtzjw7JwoOKv8l1
ceJo1a1hXRx9U3VF8SslP5Y4AbgBeEB1vxPXXf0a9/s/8dDEVVeHJnox6uEk
fvxxcfqd+x23PtS3eRG4T/V1Uk6Pi/fHP7foBt2d13mc5wX+Ur3e6mvHn3iQ
98D45+TXWvAO8KLq/yZ/xeL3rN5pdVWbH3FHR+c441nzXy5x1tWX3fNLZPxe
6t+8ks3L3HmJ8XPDAaqPYdwTOEHimfwlHsn1f/z7i34L8VbwfMJLaFyWfIIN
T629oB+huOeP0g/VA2O74ZjaH5xfnQ3mOeZr+jF85CXfTs/nvp2nqv/B9c3n
2Pxe59O+87me/c7nzS/DcX59b4rbNd6D9tBvtKN85T6X5v+qLu8fc9/TadfP
5tbnGJ2evf/dBzcrLhidGe3hX+X+/Nq/jS+pnRK7duG5/wudmurlLe9r4vf8
XhOvsPBdGwfDeuPcvM7v8l98p64bwC9p51a/8lXly+a52f8vpr18R+EPWX/G
h/KD+R3O8tXxqT5U1wfo6vN9dHzpe0x5zUPwk+x3/XE62+oRlvdPfXnvfpHz
W27f226PZ3v9rimn/H/qXz92v+MzqS/+YvSu+OX/vs89T70n3p8/pn7RLbNc
4nvBl/Hjld/X4/0u3pjvsfNj+HJLfA7tjk6W623GuV/P+3X93jhlcXRw+PB+
Fz5g/ZiNa3sv3314kcX1vW95zuURJ7+dfGzwk/dzvPXfiRt7Up4o/gn8EFv5
4lzxey/89+YP/CDnH8/naX9zv+A/5YcvOjXhfy488PdnOdaz8fXlt9+a7S5v
3Oua//DmfA7WM/zh4mrGDYZPsOgB49+I7oE4X/ToxVurI8z50WcAvxZPDh6t
Hnn0nfWfsM/14JfRp38aPLw62fo1wOeDo+uPiO62ePvXc/tC/CfVAakeBuXX
74KfQR3v+DnwX3Bf/Bjo0eCvwC+jnk38JvhT6kd6Gv8J5VfvZMkHQH0fzv/V
X0l7H6X++I/UKY9uylH8Ueqy4D/j+VY3iPP4n/ez+t55r4528PJe5xbcO++1
/gD8LezXP8F3CJ6fffWYKD/xPOqORG9Ef8ydnfPLM0r8cXF14wJyXv02jkMZ
/5Z8somncXwMj8vxnfMY127nuvC1lvifnfjwhee1E2/0JPNr7W/Xz+D78ABY
J2QdVn3Wxj04nydOujqg2jvVX+VXXZLqjxxmHzsxca7VSZDPEjzU/4vPFAdN
fKP8o+Z3a15rymucZXUrKP/j2Y4lD1HrGf2+6nqLt/Z+Pb/5XhMnYP2Km4V/
VF1E+b3J87fk+6ueIrhs+Fjip+CczaOYvIziqdXTph6fzPIXftj9Wa44aXBd
8yImX6I6oZ/N+y75EhO/IE8suKn1hU8d/Lr6ku6Dq4YftuQtzvpR3LL5noKH
is9El2XBayiv67rGuRcHein727rI8Sx6xo43v5z75fm4fSvnNa6rehHbdUs+
p+oUVzeiPFV0Df4r9es2uKn+XK57PfULn3WJVzuf+iSey3knPKzytpx/Mv+e
ynpj4R0nDs91QddlbMNjaLxi1yn60xsX2fVP4xcTD3kiW+2re/O68kOol+sS
7LnmgQo/ojptJ7peyf6j2GVdJ6nLeW9eRzvkXyR+86j20830U/Q5Fz54dGG6
nqu95vNq3pHw53w/qvO2E1/rFvuF75nvLrrytVv4iSNhf4AjwkcAPyueB07T
eMP64xsXyLb6F6/nOPZI/c/N0xp7QbsBf2n8Z9o7zD+35v/6W/GbNj6n+YQ5
n/8/mVvmMe0Lrus8x37sAvWbOe/T3Ae7IXbIohsdPemD2BuLjnh0q+Wfk3+z
8YPxo3r/5N+Uz77DQ2++aO0l2ps4y8PsP46dZT3uznb4fLGHsCfY3p7nHcQO
kd8evfe+b9onyWuqjnzzlSQewPe5+U4+nu2t7ojxBLzfN3O8/PLq78X+d/2x
oztX/kd16LSrd3TAm3fF+7MeSRyF948euH7m6LIsut+Uy3H81uFfeF70zxdd
l+tpT/Vx6teu/hB2I+Nt/c6bfbjoeSaupvpajv/oJYAzg+dv9tSCE8B3LC4c
vQLW//IiwQ3hJzKv1y4A5wGnaR7E4JLgTeYP/DzX5XrxqOhVi38mX6O835Qn
TgnuFdyyOObT3Fe+Mbhmt81rmPuLj3I8PPDipk+Dw5mvrfvgaPfncfP6lb8c
nd4lfyXbezkv+J26vs0DmudxlOd1lPNO9Dnu5Rlse4OHFx/3vQ1ep30b/K76
60e1h6sP8vG8jvO1Oxv/WF4tdmL9NtX/ia6h+svlA38wt+J+9fdUD/nKPK/r
PnVd6ldDH4ZxaFu/6dfHTsUfmPwyzetUnUv949ipzWvzYvZZjyfOVj9leQz8
4r+sH937JA+O5zPO/2Fe17xHzVulff6veErgCttPvhM4AzqI5SuBX0Yv2nV+
46JYf5DPmXgi8NPgyYtuaOahRbeL9Q/rnerHoAeW98H2vjj/936Ue3a2T54W
8c/Bn6sHZTm8l3+a9XS9VZ0Wnh+/xKMvupj/Oa+rrqa8ivI09nhZfV/LD6K8
5pPrffZ4H41XrN4gdhzrwPLQwddYD4b3rV2VeMzqITTuU7uS8mpnBufWbk6+
muoQam+Gh6n9nXWm69P87/3LA60+RHWx35nt0Z7FPr08/68Oou2Jnb/kp28/
7uD5x30O1fPpNnb44m8Irn/c51HeddZTC/+76yvKCa91sePxH9DfZ9If1c24
8Ox6yufO+vC471Pafbj3Xnw0y22eMv0vrEPvZpv1rO2NHsmST6nrrK7n8p5b
n/CExW+qixIcx3Juz/bYT8nTZn9xXdbRrrtv7LS3+lKJA3D8KM+r41TjvdlW
r7Xj5av5v7hb8kP5w9+4bZd8weVf4r9kvgp/svkjnWebH2GP9/arHGd+wr5q
PHh5fxxn3iyPkOua76H5j/f40I2rP7tzXv22Z/J/83nV3izf+bW04zDtbjwT
40vwDOez8PcXPLZxVhmfnU/4TuqXrS5C9+t3Ztvxf/veH/f77DhQf3PHz7Y/
+QOq62D9eL58f/G31z73/SjPu3F5/Mpb5r3ju+w6pfpJP8n51GdHx0Dece1L
ygl/0nUJdjG6hKw3sGOx77N+W3R28d9V/5D1ReIjq/+r/lD4FI4v/OgHvrM+
j46X5enW/4B+Ru1Fxu3ofWtH8H1hf1aHq3hl+RnVL2S//GLmkeNcXz7IG7P+
zl/lV8TuWvRuYlcv8UGNW2xc3+XU/2jW1++Ldu7pj/DdNY/9r/I/z5X3onG3
6OWHH6TudfPzUo/EGyzjQfW2orPZ/ATLd18eQHACf1nnL/zp5FVY8v3mZ/kn
5/267pc38KfUN/Ea1U2Rv1tdVviy5eEWT8q6XlwBPym4VvNS7ulAx7+rP7Y6
YNFH0I9cXRPwsMa/wx+AL9Z8EdXVYlxNnmnHQeLGGIcbX/LLeZ34UHTpfH4/
nscdf3mfeP/5XsBJdvKSW1/Gd+JbwoNT17067tHBW/JuvJV+5XnzfpUXnven
PMTqxsnTCM9DP31w2IUP2S28xuJd5WeU37iTl+ZJ3lNx6PI3khdP/BlexP15
3tPi+NHlkU9RHL86FuEd67eJjg58a/jZ8oqj4yLvOjxneNjyucPDvpByl/yO
3zz7//KhKZ9y0evhPPMuRsdH/Z/wwE+mXK6v7o33I38oPPLmK03eU49v/z9M
vduO59J/36cfXkh/HaU/n4aHf6L7nBce+9P4wdTNeTDP0/9W/w/v2Wc5Hr+d
ukfx97HVb/dZjn86tyfq/+p30fy3ya/rPn6k+6nf/VmecR97ejPo9zD/7PC4
5Q91PGTcqc4/41/ibRbd+PDKFh0X/i+vrvk3r8/zFn/STt6B8tz433mD+YT5
g3VI8jY1L5nxY8yz5Sm+k/I6P72d896d5WrvcL/ky7Sc5KHqdomDrb+qvCz+
b75J7G3s+q7fWf8nD7u4dfHs6jOyrS4lPJzPnr2FV/w4PGP4x+g7HISXzD46
EPCiDzdd6OqKH6IrHd1xdMm/QZ88utMcP9626k5Tv9wPfXOuQ8/6+Nt5H/5H
H5ytuuf5/5Drv53tOU77Wl/O/2fu6/63875cp842/1O/6Lej2+3/D+f+cdqh
nnva8Tj14jjt+2fP/3q2l3r2uR5+9ez3iudX3Xp49PLeqz+S4/L2w0MrP00+
W3n48Nui76EeDDy14t3FvTkeXVnX+c2LWZwDHGAnHr55nBb8Jvxtx/c9uzl5
frR3Wd/BKwpf1/XftezXvm98Uq9rXFL4us6nze9Muc2zFD7Eknfovexzn/ZH
eViX59b1NPMU/Q7fIvk2lzyGzJfw5lnnZf5sPHXzdxXnW/RLohchjretQxec
L/6Hltt4B9+70/N9NW6h6+rgGUu/kDcG+wi7JM93iY87znm8h7zX23tXvcXy
0+HndD3Y93jR74PXHx69epP3ZvmPwpOSl5d4yvKcjBNvfqLy4Xn/6N++Z+Gn
9/kuejK1f8D7qmuXvIjaRfxfXbX6n6uXhH2EH6T88I7X1beOnhN2U8d188RE
z0t/54fZ7t03/tzyiI0/+zjtq35Z9dDAcZtHuf4Ujh/vbIt3V4+7+lHV0Wae
qj5V9IEWfTaed+MU3573aZ50ztd/zLxa/1Sea/MIydPPvG1eoLuzXOf55Mus
3lvj3rQfPpnHe512Q3kQ0anTv7ajI4a9sdgpN3N9+C8LL715OOt35Hng32jc
SHlCzb/OOJFxYVlfVT+r+Uiaf6R8KPwF9eviL2fe2sa98reW+Dn42uDorC/h
1TUvWnh1T2J/LfF7iftz3m1eiuSbWNa55cG9k+tPp11vzetd95/ONroq9lvy
T6vvjl7VL+f/+jN/m/YnL6j70Wuv/ov/R8+mOIZ+jMRVNq+G/dLnn33xldrV
xWdiLxhPFzuguiHywmMHgA97/f15nfgW5cRuqN479Wn83WL3fJD2Fme6Me+j
PfTR3HLfBWe7s3N+4h0WnRh42jvxfcWpeE/U3en32rg+3ut8T75/vGfVVyjP
OnnI5fvCty7PpLxOxtOOr+E1OR+UJ3g51+FnL9+L8Rr+xnHqUV3A5Ms+7rq2
2+ruHuf/6gSnHbb/d7Mdzi+nsu18gF+t+mPF82jvNl/0uS32bnlM1SljvjuX
+5dPy3Phep4f9lB0Oj2PfiDP+g4/aI//aX/v8HYtp/Zg9B60kxIfepzn7PHy
FWr/Rc940SuuDnB5qOGR2v5L8/wlrqx8yvIZux6IHrB8rfCYixcturJZ33i8
PFPsx+a/u/bsrXZ0v8cd/ehFdwG7Pc990c/eK/94Xr/wlhl/0v/2b/nAHefK
D856sTxm7erUm/58XL5u4k6XPEuNp028beOMLb/rzY/ndc0fqq4J8bps785y
2D/MulT8n/O43846uesW39vG8yZv1XH8DV6f/qk+9uO2I3HT4rqJfzZeufHa
ae+SpwvdlsaHp78ab+x3mPh169N12MdzW56469DgE0u+rsY7B//wfnefff+D
3iflLfl0+R76fkcPxvxowdvxKx2mHw/y3Pdw9aVeWecu69qbz95WT37hx3ec
yLjSeI3jPKdlvgye47hVu2YvLxnnYRdgPyTOYeHlsX7mVz5s83XGn6D/lS1x
XKzX4D2he8169PzOfuKltJ93eFnqaCaOa/Hvlo9Wv/lOvGPzZZ6qv+Bq9rHz
WVfAP2r+zPhD6rfQr/DerO8uD431MnzIxBXu4SULfzD+AX8/mtfpZ6reNrhJ
dUb4HzuZ95Xry9ffyzv3cs7DXuYXv1d1k5uPXf/DT3M+9vkfcv/60+DzlYdK
HCr6uWfn/YxXBEen36vT++az7+P3Fp16fy+mPjy/8l75cbz7ae+Sz7O6zT+b
9/E6ntfe+uoP8/olr87rsx2LjvLPcv++d8132LiQX6QdbQ/9QT0YT6Pbbfms
NxmPG4dZffh+N9u6z/mE+Sh87K7bqrfvtvg46/b353kLvss8dJz6sK0eW+M5
WH9Tz3fTTsYN+qH8ctYZXZ83rqY4SOOH+h1Uv/ww1zUum23zT/Q4OCbzI35V
5rPowPHb88/LD/7TvI/vf/y76s9F51teM3hVcS3mQcap5JEsv2zhgZcnEF3S
JQ/ZjXlcPAzcDlwPP/yGzy34X3TBzLPGfnTN5OFGr0KeLfho9CaqP2Gev+jZ
8r/6tehvRPeiPMJH8fuaT5DjyS/o+bmv7bj37Pt73+DG1rd8yeTvVDcOnLjt
/2S2E76n9YnunHkU7852VQdbv3b1aFpudErkoX4696sf0n6Xb/og7Ye3Cm82
ujPqzHAcXZfwkNl/tMevht9Mvk14wfCF4RvDo+b4tkUP+nv4xtv53+d6/ud6
+Mk9TjnwkalPeczs/2PjPV/I/R5u///QeuT+8J/Z/yH1Z3uS+2zbF7btP/62
nfff2/7f5/05/4fvZn1PbuU+t13/8O/zfrTnhe7/Ze6XB8758sBp97fzOtpz
cqf/aN/35Ytn+3CvP8OTpx7w2nk/0T3nPeT9LI/c/K/oJO18L+olNV9r8ria
7zf8l+qJMz+Ud30Uf9Wj+H3MX0o58Hx2+M1dL1a3pDoq6umw/sSejw6qdvyf
5v2q/+U6jfjL5uP5t3m+dgHrbeb7rq+zfiiPy3XC9vP/5pXhh/2EHYddCI6L
ndb47ubDwb7GPvxR7ld7+pXUo3lqkg9pWa/+KPXBPq/frHkV6w/azte+xt9S
vmb178CVa5fTb6/N4/Jf6t+gP6qv2bjq1Kc64OKT1bGILp+4OOuE6ntw3Y1s
g9eLj5a/FJ3o6i6KG0Y3WzwXnnpwRHHk6nOCL+7lEfwk5xVnjo6meQrhIcNT
Dg4vnhwesvx6tg/mvrri8LXRAS8f//N5X/XC0276Tz1QcO8dXHvB04tvxt+1
6OdEj9H3r/EJ1+f57kcH3vVn8xZeTb32dOR3+GjVTTjI97foJnSd3Hjr4rvl
78Uvteh37vDndvOgVr8o3+fCi6teEvh2/b7Nwxo/qfhFeWfUFxyAceqtlL+X
V/LdnN9xMDwHxr/FL9x4fcbJPR2R5lEsvl7eWnVaqldRftsrqX/mIfv5esq5
OOuzvL/FubptHH/jkF5O+7ttvuTXdtoJ3vKLXE//VKeD+b74T/ur+hHVlWle
wcRXLzhQ4qx38+69OssT1yFumuuKg76ScrefeBDx3bzP0d8uz8HvjPGhelrR
pZI/XF1sxkfmufhxl/E/+/pBmZ/uz33mOeK+jDP689yaB5j8FWyJ0/p67hNf
dJDjxBkRr3WQ848Tf0R8F3FI32xxUQdb3NPz2/4/v9uOb9vn//Z/ti9t2+Pt
vMMcP2a7/f/P/P/P7brnt+MvZcv9H/9llv9P9v8694nrOkw7Donj2onnatxc
4+qIP/N5Eb9Gv381rzfOLfFlPuev5nH+Z+v9eG94bnlfsHsOEgfWfNbaizlO
+cv5zTONvRR/+ePYl9qVd3aOhz9wGB5B9eUbh9l84OahIU4Oe/Kz2T76y++Q
8/P9mCeG5/HnfE+8Fzw3vuev5v18Lg/m86GfzYvT83guyfftlv/DI9C+Lz+D
fm9cBXyX2LXavR+lnPJawp9w3CXehPUN4++1ub/olL8/r29enMVuuzT/P66f
pX6eq/kfexW7qP7O7uN/wO/GfI7+b/VZyz8/mvviKvjN4+8WT8E/n7iuhb8L
L/nW3JfXjF8g+PiJ4MpPg7frFyAvH7g2uC94dPIsil8Fj1Z/ILobi+44/wcv
Vr8hOhjqU0S3vPidOg/NR/jlrMeil1BcHX9G8gju/a9eQ/no5aXv6ToEDzyK
v0CcP3z45iXU/7GjF16/gXF54aPrT+rxHR3xR9n3vukP/SK8j/Fv6WdJHKB5
iHb8I40PUM+c7Sez/KO2l3Z+Nsunv3jP93T6zSuZ/KDNl9n3E9y634F5N/Md
PBe8G1wb3Zfq2qDjrw7NV3Of+qnbH30V9FvUxQnOzf38P7r/JzquBBev/28Z
T+KP9PnluTX/5YKfE9/RfFjVr2/eR/By4iCSx0xeVPTF1PMgD3LyeakPnvgm
8XF+4bGJg2fdJS5eXhrrN/g6we3F6zccXv88uH51yNEjafxy+HLVJTHfZcrx
fOZP4kSi06g/IPni7L+U6zp0W88a58Z6NHwh+X3Jn2l8SuLAFj0C1r/g7vwP
7lDeDeeDh2CPlB/yVs4rPlR+WfQNF74I1+/FH5/J9WxP5/rtfrvxCdWzbH6e
4ufgccmrs5Rf3LE6kI2rCI5aHEFcMPrKix5l9Gerv77oX1Q/PTzj4hSLjnr5
t/UjnM95iWtZcMvik41TaJ7U4Ik+p+K1xXWpB+9Xz+c464w9HW/WFzvrFv0n
O3EIrg+D47C+aj4x1pXmH+v6C78D60fWe1mXuy6Mnkv3XZ8+mMfFb75M+ZQb
vMn1bnGBB7M9B/XvJM7b9WDi+hc/A+/7lRyvH7B5wXjPWJ8V/268XfHYPd3V
HR0Y/4dv+bOUEx6o4/7vd657Mf+Hh1ueGr/qk8hnxa/MOnO7T+OJbSf+8uis
Wk75nc1zQbvp9/IS6deTue5Mtl03l+cc/Hfh4dPexqO/lfv8brabflhw4sQn
+v7Uv1Hc/kyu5//q/hZvb3xl8/GGl+px7l8//u9S/9gt7c/yK8q7lA/P+8l7
hQ5v4tEX3kXzgfP8yg+mf9pf9EvjcsFj6J+d+WqJc038bceb+iuXuLniSWw/
nufVn9C8zo8zHxk3BJ+guvHVJWH+Zr6+mHZnPF3mz+pL1I/H8b7nPI/qQOR7
rq65OkboEaKHE16ufFziw1kXZN1jXAvrqvKSiCNhP/xd41eiY+h6IHwl4w5O
zfsv+Z1Pz3YYt8B6Bv1gvhe+U8YxxmH6lf4mfpnvv3rr+LeaF4Ft86fkfTUO
tjqIvI/Vd2n+kuC8tae0C+InaD54eRzJM38YO0x9uej9GDeXeE/tkD0dnL04
+PKD6qfl+TQfBs81/lDn4eiXVzeKn/oovK98D/nf9zx6buK7N+e+esjbFh2I
7i/58q7M/+W95/7y6KlvdUgbR/XGbH/zrmhHVRcFnYcX59byk4+h9pX2D/Yb
8xX+8j1/e/JNVAfH8RQ74+fzftp9Wd83v1v1Zxb9C/iUyd/mcyFuIM9P/Ih9
dGOvzvNOZZ84BHXmo+fd/OTir+Gl6gcAn0s+U3Hu4qM9v/zY8Grl62crzhr8
u/nZ6w8xj2XzqUfPpXrr1bmrrvHCr+V7TXzjovtenf4+92spJ7hk9e9938gj
EZ1ev7fwP6qDX90P4/N+Pa9b4oqwJ4NLltfb/A2uu5oXON+J48v/mPVZ8hC8
MbfVZXScaVxvxzX0k5LvUt4zdsTZnftjh0S/aemXrf+sJ8+D8aU4YvLwOB5h
h7ya84o/Mr6V51V+LfjQZs83j4vrFubX+J2rDyfO1uPgfMWHqn8Svb4FJww+
tpRTvY/iFNVzabnXcn3y5GiPsN4pv++tnfrQ711nv5Ft8RLsFuyZzn8/yZb3
qOvul3Ofo9Sjed66fTnlFk84uXN/3h/ev5eyX94keog8r/LAk3fI9V/0/hY9
nti/6kmUVxE9Du3l2MXytqO3rP37+bP3d3ne4UVX9xkeifyW6EmXBwPf5TB8
F69LOfKZ2II3Ftf8cu6rcx5ddHltuY88qS/nvrrqtOOz2R70scE35Y+HZ3OQ
/+ETyRPneUVXRV4T66HqsET3xfNSXvOtHgQHcNyKTuiiD3Y95zXuIHlKjzsu
Nn4heTT/f+tvJE5FXKd85drXv8j/2Ok/yXnVdQhOWz5r8wXpZwQXK07GcfIv
EL8bv++SV+6NeZ12PXjC2/M++oOjx6G9nzw/i044ccPV88s6Tzs3eaTUL4/O
c/PzyNMgn8dHsz6UY/nJO2Uc2q20ozrqsbfVLeR87Nxrzy7/ROonrwO/Ptel
/+znrHfUu74929f1Av35NPWo/vTTXM96Xf3H27Pd1FteTtZZXX95v4+efZ+j
PNeu9+yP6MTbbzdn+epJVg+T94J1EP3L+wrv4Xy2zZN+KfcvH+Nmjl9Jecnf
5jqI7/y/5v+MP813Ly5eHRZ+1ccg/g/7Gzsn+b6197o9n/OqQ8j8UJ04tnvz
BuN6eJaNO6tOd3W1tIui99fjS77w3u/qvN9x/NvFIw/ij2++6SXvee30nfi+
3bijHV5A8zEvvNTLuV/jwaK3tcQBbuUf1o9wPeXQjsQLth+WvOuNd6re+NW5
v+Tl5L3MumbRCezz6LqM/tqxdxY9RtY3x6kv+9VV3YkbLe9j4QFj37DuqV53
9Z2wU/jOX8vx6txUz+V07kf5rMMYX8Bh2C9eif0E7vJyrq8fsXh215XlQZ/e
uS71XfI2Fm+ovYfd9m+5ruvD6tQU/+D6rfwlH9X2E8/B7tvT08ZvBZ6zzU+n
aoeAu1b/LHihcfnRfV70U6orAs6JngY8UvjMX87j5h9M/run4U2je/Hc//V/
tt9v2wubbgQ6EQ+7RV8hOhzV+ZCnut3XfIXRa+B6+aZb+9B3+B79CnQj4Ll+
N8sjLyA8Wniwj8JLBW+mXx+FFw6/Vd5r+LnqkKCf8dfUI8fVr9h0NdDzgH/b
/Ibyxnf0dfTrwNOO/gz4t+/h5bx3ycdZe/Zp7MTmIVr0zmvns17iO2l+otj7
6s/wfO7P+/v+x971eynuH/0d/w8Pe4lH4L2IHpE67VkHVSep+Reb/1Q7vPrz
iTtwCz96ey/haVNf84F+PevLe+4232HzXKrns/M/PPTy05tvc9FH+WLe33gL
nkPbzXPbiTd5VP9Q4yvK96/eVcdTyuc43xP1+WLeh/rS/486Lj/I+Yln8DrG
58Z5wE9PPET9XNWZ4volHuRuyuW8z+b5rhvJ65Q4ifrpjEPhe/9w3tfxIuu1
xZ+V9aPHg1t0XWn5Wbd6v+SnavlLXuRb2U8cldvwVJZ8UNgZ2DfYd+Dz2EHl
L4KXv5kt60lwtD2ebvi5zaMnD6T669VLwA5m/QFuemeepx4J5WAvcl/i/Xb0
muXBgrdG31pcGRwcXB289tJsjzwTzoueY+NSxV2rk/3ZbJ/5D8Fvib8Eb/5k
tlddcvi4X+b+d2c5xsnemu0p39b/Ew8rPye6Iz73HX0Q12Gv5zzWi81rxX3w
p1yY9Wh+Jt+Pm7k++us+j/gRDuI3wC9hHDLvF88pcbXql0fnpXHH+lPwwyRO
2Tjk8J2qP2Mcb/0Tjevn/eV63pP4U2wn/o3yqVJO9QLUAeC+8MXjVzrOd9j/
vU90ddgaF984/O/m/+gKPJ88segFsCVO33ysf57tI+6aPKvms+W88t2bf7d5
d+mftFu/HXz48NH0F1aninG9PNjiFswH0clqPmPH58u5vjzh8m3Lb6v+2F4e
wuIE4AflhYKHVD8YPKb+Hc57PfetDk71TOofupDj5G+pP7981/K24xeuH95+
BN9gfq6/vfN4carzaT/lg3Ml74bjOLge2/IgGz/EuF19heazix7DQcsHZ8x8
7bzVPAo7+R7Ema+nHcVdb892PE65zWPQdhX/PAhvdYmfuvXs/40jYrzPfPE4
9oLzTvmu0TFTp4E4HsZbxqGvn711vI4eCPv45b/JeKgeDPsZHx03yTddnQvG
zeipWX/mga3c53vf6Js4/2Uc1u/P/ILdV32S8ofv53ze5+qI8JzCc5Z/8GD+
3+euPch7Efza9y16E44/tbPqB6meRfNTMe5XR7DxhVdnOQt/JfGRy7jH+Bu9
Ss+/OO+z6MA1/pRxEF5789NGx652XPOQ2s/pr+rnLf6Fq/N69Wr+ha6T40D4
9Y6fzHuvzfOs5/mcR3817qXxlMyLwbf1H27/i1vjtyT/JfENO/kTjLMOL9T1
cvL66ae9NO/TvOXyFapLgn+9/NjwVFmfm485eQuPdvAE61G/8qUcD99WPPLq
vG7JR3p11kP+Ae24Mf8/VT/Ardmu4qPFAcvbL64jDhN+hjhocF35H9w3foej
4sDxR4hXRjdcPAz8CFwLXA6c8Yt5vvoP1fcOTn8heD14of6E7Trwf/SluU5/
Av6FDX9/IfrX4vbb/y9s/o4f/nvun9zw+pPoaG/+kYfd/7+3dmz7J9n/X3Mf
v8r3/3Pe78JWD/wt6HdTP/XEv8s+1/1tlk99T/59/k/9LuDvob1bfR5u///j
f87rv08/oQ/+3Pb/D6nHw7/N/R/+9ux6/ZB2cd73O+Vx3++/m+3yvO9mvb7/
2yz/+/Zj9NSrB49fSn8O72n9W9FhObGD27N9Lv4utrzHfb/VTf921vNh/G5c
j+4LeDV4855+ubh8vq+T9U89nOXSvm45r7pMz6X/8NfhR1APqnpPtCO4vOeD
u0fXZy8vr/NFdV6Iu2B8Z9u8yMl/XH0W+U3ogMHvTx6jJR48fu3GkctDenGW
J/7ceEzifeEzHs196m2c0dV5XvlZ5uNOvt8l//Zbs/2LTgo6LL/N+dt9ytOs
vWOcxu9ne5c839t9jLNrXvLo6xjPBS/gzVlvead/muXpD3jj2ddTn8bbeB7P
i+cLXlC+xSvZLz+leArXVxc3cdKum5Nvz/VN+ULR1/B8dAWb37HrIuzprC+W
fLTRWW+eWPGP8tWuzfOPs55yW10R1g/NC9V40sbpNr4d3Zvoo2j/n5/XL/mo
r892LXlvaW914ZN3t36aBTdh/ZXnIg7D+c2ndS3l7uk3fjjbY3tvzvqp2xKc
/TA4kOfVf0U9+5z39ER4LuVh8RwbB9U84M0/1ny65aft8S6LBzcfGLgj80Jx
0eqcNK719bSPfdbrjQOqfkrzjb2Z+/H7Q8pvvDT/Fyel/Objq9405TAONx6A
+9FvwTV8DsVlk4dUHJnxoO89z5vnRT++nP3y+JonsPrd9G/j6cJvtB68R7ez
X12A6mfFz3jQ9zW4lfNB9TX28uhdmtfz3h8GR65fuHoC+tnin3UbHSZxw+gV
sd//i/d2/On51v/OvA5/9UH8uepKJc+FcUjBgY+Dvx4GR1W3O3gv+tLqdqNf
jR8OP9tfnr1F51u/XOK+uG91p9HLrj42+tvf/GX+T73R38bfh/42+uPW4y/z
PuiDozOOLjj1936cF73v49SXcg+/2dniR+U5Jf5N3W38h/E/V4/LuDzwZ/Bx
cPbEp1Wf6zB+5Mf1Z4K/f5Vygufj93RbvP6LWe6ST+VB2o1/IfF/1RU7znvf
vNfqWrPfeb/xdYwvt+Z+8+uIL4OHMz5FF1C7ofET9RuVpxG7+LD+guLf1Kf5
hBg/mY/eyX7zQJQfHp0zceTO39WTfDfl7MQF7+WbZf0iL4p13LbeNW9m4t44
z+OJ+3H9tpOvy3VT8l2bZ5N1Pnhx806D64L/8n/i2srfBGflvOK55m0E14Vf
F71idWjvp/zoCzcfp3rc8As/TT2ibwsOrR5z+ac7vNSj4MS0h3LEVRq3Rz/e
2DnOtvoYwdXVxQCnYb3O+h2cH92M4Pnl48vTB+e/Mu/vc781620cXXiIJ/Ie
mI+V/fBPFxy+/R686kTOO5HnIY+1fOgc9324N7c+17RDXib9uX0H+jHyvdR/
UF1l+eDRLapfhO9U3I73gedXXRX2o28jfgVudTTb5TgF/gS+tOFTy/iGXy26
KYu+WXSQLTf6IeJH4Dzbb9E5Do605E/mvHeyff3Z91XfZRvnO06rm/LvKf/0
rId4ZOKrbc9P5/2Mn0y+Z3GxxmFWf415o3gm43/9nN1v3CfzUnm8b83/q8+j
Tl31sIgDT55Mdb8zL6oLBr7KexgdOfFg9MR43+j/H8/jze9eXNl93r/4kXf1
N7f/vf7Hc+v3cpj7U8/mHd+LTytecDL1YV3P+hp7qPgGOGjjaLv+DV5WHom8
z+g4lH910PV04jLL3xCPKl8j+0se+upPJk7U+zXfXO3O4hnhgy9xntVfLs4V
3Yna1xx/fOf/+z7iDv0fO7p8ZvjW4e+o/1E+VvMbcV7WP6xzDrMOd53UdRzb
rv/CM/d+5ZmHdyvvt/l/+J9yy2Omf1lXZR1SHra6zl2PNI9j9RTPZoufoTro
xdmynlnyUzbudidud9ER3tOf3dY31WUsr9Xxq7rN0S1bdAPh4zDvlR/6+k69
tvou+oWMk+CgjLPVLzzMfnWp8f+hQ5J52Pm6+Qu23zKeU+/mAY7ekt/zxZyf
deaiz8S2/LGL8z7F7Zc8Tmdzv7wHiz548XSeE8+V54MdmHlZvcqsa/XH4pdE
L7b5MJonqjpxp1I+6+Ojnf/Zj91bHTp5X9ENlEfF/9jlyS+16I7urZ/Dn3I9
Vf3R6iiG/2U8WfRp1GFpnp5787o9flXzB6kb0zgx1qfN34Jd1+fWfCY899qz
+OGrG0jekOgbGY/ePObxM+/qL/OexO+sXd/8LrU3t5/rnDdS77bvndlfxs0f
z+O+l5T31iznSfpZe773o33lOaY+HPf7jV5T1yvVg3K8xX7OOm7hbTJ/MP6E
R7Do4VV3kfGNcYzzmVfxRzJPVrcw/pnFDxadPOfh+hPfyv8XUi/q3zyt1dVo
vCPjNPMrdvzZ3Le6G1zP+P2rlFMdyvrh6N9TaWftluYbOJ/r6288l/sWV62d
UR1Pfj/J9cV5Y1f5nFvPvj+135LHR/vtXI43/wP1OZ3yTs12Fh9wPsIuAW/4
bY6XVxO9NPHe6r2/M6/f07WWz8W8FBxKHC84afPIiXcxH0Wfq3pcxX/VM/hk
/q+OQ/TUjorjge99kvvD4w3Pl/IWHYjEczsv/qu8a9VRaJx69ZmjswC+bf62
6D4bT598csahwwNMHsfyG+U/blt0FeAZNg+e+SfDQ7Ze0QWwXckXKV4Pjzr5
Cemfp3me1dluPkn5jvz/6TzefHq0x7x65a0+nOWeyPP0/+jPNE+nPHD2qW95
nckvCE/0hY0fCk8Ufiv8b/i46M/A0+U8+KTqW4RvDu+ULc8dfirXw7N9Ifcv
v5Z8h9T3+/BbuX+3D3Pftvdk6kc92C9vePlutuf0j5xv3tTkRV301qMjdJSt
73/ypKpr0e/zfrZ5n59mvPC9jv9Lv0Psevf5bj5NOXfm/+q9ZLxVR+f+LM/v
kXHxwbzuab5r6lV/ouNv5gv9JFlHVcfiSfxDJ+4+e/8ofpgnWX89iV908YdW
VzH+FfV8qp/Z/6vbyDb8aOZp52/s/Kx3i3NU70u7i/+xX7CTqrPG/+eyjR3U
PHYHxWmLY4Kr7cSlij/DV4XfEH0E9TI4v7hfeEnlSTW/uvns8n/5VOpucB34
6qfzPPPFEY9Znevmv2sevOCc3EcdEMovPgpP5f48fpDrjOMHdwVPrf4H/dny
Pp/3Ochx+T3REThM+4oT225wZXhW4XkRxyvPJnG/8pW2+78EHys6C+z/M//D
F3ucLToM8Kvgi1HONzv7L4XvhY4D/8O72uNnHade1EPeGnw19CW2LbwvdSTg
hTU+OnHW8JjgT1XPXF4VfKnwu3y/v5zHjXPO9+B3Un3x5lPqdxf/k7zp8vDL
P4qOpuNQdFhdnzcvWHUiqk/Etn48cI+ua4u/smX83taP9cODlyy4ClvwcHAA
1p9buc0Hol+geAzr1cTTLHzk4P/F24zzST4P16nMa/id4bEEh11wXPbBh8G5
WC+fn+UufvDX5/3qpzY+lnXz9ZRb/g18EXBk/OOd9xtnhX0TvWvsh9pJj7oO
Dv6r/RadPvFh7LryuD7M9sZsl3ZO+F5tT3XHxMvTP+LItaPCd6ouvLgmPITi
qHv8ueD+e3ltmndrl5+SeDJ5LfFH+T3zaz4gxpnibOU58j/jUPyOx/E3iyc2
TuNqzj+b+7Nt3EXzXO7pvxSH63jaeIHGae3FZ5zJ/4xDjQM5lS31J06O59n4
sd4P/PPN1LP5ccALaSd4M/2K3Vzdh8bNlE+beDT91clLoZ2N/Vy+RPNpxO5u
HkHjnaLztszT2JXRx1JHBb9+7TzsVvjj8LdjV6g/1bwo4X1rl+Q4fHv1ZJof
JXaZ9mb44+i6sMWuNA4Bnnn48t4v+VXUYcPujp0ubyHrm/JpGgfG8zMv5Z1c
Fz3C49pH4QVpF1VPvvms2YbH4He+E1940POrL9/4mvInaq/xfb41z1vsK+qF
PYQd1bi3X+U49lH5DthXv5jnO3/Ej7j4+fAjkv/w8txvfPWyZd7Dj/qnXIe9
8uasj/ZT9b1fz3Xw8v4z9a+//cKsP/bTohOOv7z2QXjH6pQ0n0r90s3rGb+8
eUywi7CjipOFhyzPu/qy4F34Aap3HDxaXerohHj/4NWPik9HF7j4HPbc0b/A
FYsfnoj/4dEejg3eGRwZXFf8N/rg1UGufwG8l3KLd3P+98WF0YMAZ/7L3Aef
rt5CtyeDT3OfRV+6Ogvxr+jfyHtQ/FW/Vt4rcdXqF/Nc4z9Zyk38hH4w/BTU
m/cg5+sniZ/N+kRHWt4I7eW8+H+e5n32ePTM5f1nXWL7q8cTfkv9e8aphNd/
IuumvfVWeT2nwtsxfxL/M041D090k08l3kP8vu0Lbv40z/tEtvohE+8irp5t
+7G61c3L0DxMR+3vG7N9zc/quN98vJfnvut+1n/Nr8w8Fz+4+UvJx/7reVy+
GustcA14LI0P7/qmeqF7em/sY/dXr4L1U+2Q8FkWvkjzyoHLV1+teejOz3o1
35z2E+uC2n3N53kj265jrs3/teOSj6m6dPJ0sFM5zrqH9U5wPvG95pmsPyG6
mMcpt/ap/XEj7Wge1ttpX/nfiYdsnqMlD+HN2S5xzOSF3dUFKe+YdWX1XJOP
1fcFezn5tpY4gqyHq9N4nHqpg3pz1nupf3RT7L9LuW/WI9Vr7/u9fKf9XhsX
Gj6Z/dV+2tN7bFwquAXjQvla1TdivCgOi92e/DzyKjPeifPCmzzKFh0j8FXW
C9jzZ+Z93EfXiXjV+ik53jxA5Y3GLyrfKHlVnFfhLbF+AGd9b7Zr0X+kv+if
4NmN/xFvp/9Z34Hb8T/Pb4+/zXvUOBPe26ybHW94v6tTE72bXb3ixIvUX2J+
tIynS/nZVn/HcbZ+3sbhMO42brx6L3s6rfRr+YPVp2HL93Uq1+E/aR4wftgH
xO1hdwRHblzbEufGe8773/hb3lf0vfJdu/9utnx/5QOGx2u+xsYvNP80/Uh/
Mc5seLj2Su2Z8nLLg8S+eW+WX/029cVo7xup944O3F4cn9fxa1wM9addzGsX
crx652/N99H5jvnrytw/6PddvDj/a1903k65Hmd82LGX+O60H2r3NB9Jvld5
GcGdtbOiFyw/oXYYfl5w2vp/w0dg/zDHxU3hIVSfe8f/LB+ieUqybV4Icezw
NYyDo9zwQ4qLqzvC/XfiLA86DvP87uW86kFXR55xOHk4mwfT9zRxZYsuNnFj
zRvAOFsdvdpF5/J/7dD6zf9fO+r/AXFcJ+Q=
      "], 44100]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730643025853662`*^9, 3.673064328036333*^9}, {
  3.673219708292069*^9, 3.673219721861199*^9}}],

Cell[BoxData[
 RowBox[{"EmitSound", "[", "test", "]"}]], "Input",
 CellChangeTimes->{{3.673219728601252*^9, 3.673219730456119*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"EmitSound", "[", 
     RowBox[{"Sound", "[", 
      RowBox[{"SoundNote", "[", 
       RowBox[{"n", ",", "3"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"-", "60"}], ",", "48", ",", "1"}], "}"}]}], "]"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.672451170769856*^9, 3.6724511707839193`*^9}, {
  3.6731019070258207`*^9, 3.673101942657611*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"note", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "30"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EmitSound", "[", 
      RowBox[{"Sound", "[", 
       RowBox[{"SoundNote", "[", 
        RowBox[{"note", ",", "3"}], "]"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"note", "=", 
      RowBox[{"note", "+", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "8"}], ",", "8"}], "}"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Pause", "[", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", ".4"}], "}"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.673101974258362*^9, 3.6731020552095537`*^9}, {
  3.673102269989359*^9, 3.67310229476768*^9}, {3.6731023494811296`*^9, 
  3.67310236018303*^9}, {3.673102419709296*^9, 3.673102515695692*^9}}],

Cell[BoxData[
 RowBox[{"SemanticInterpretation", "[", "\"\<what is today's date?\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.672878263322866*^9, 3.672878284322645*^9}}],

Cell[BoxData[
 RowBox[{"Predict", "[", 
  RowBox[{"\"\<NameAge\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Daniel\>\"", ",", " ", "\"\<Dan\>\"", ",", " ", "\"\<Katie\>\"", ",",
      " ", "\"\<Katherine\>\"", ",", " ", "\"\<Ella\>\"", ",", " ", 
     "\"\<Theodore\>\"", ",", " ", "\"\<Teddy\>\"", ",", "\"\<Claire\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673096596793742*^9, 3.6730966265853567`*^9}}],

Cell[BoxData[
 RowBox[{"distribution", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
   "\"\<NameAge\>\"", ",", " ", "\"\<Katie\>\"", ",", " ", 
    "\"\<Distribution\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673101533127009*^9, 3.673101534751459*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"distribution", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673101574179245*^9, 3.673101646890562*^9}}],

Cell[BoxData[
 RowBox[{"response", "=", 
  RowBox[{
  "SemanticInterpretation", "[", "\"\<actors in the matrix\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.673101728211638*^9, 3.673101736443841*^9}, {
  3.673101774354597*^9, 3.673101777432947*^9}, {3.6731029429551992`*^9, 
  3.67310302098658*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"ForEach", ",", "HoldAll"}], "]"}], ";"}], 
  "                            ", 
  RowBox[{"(*", 
   RowBox[{"ForEach", "[", 
    RowBox[{"pattern", ",", "list", ",", "body"}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ForEach", "[", 
     RowBox[{"pat_", ",", "lst_", ",", "bod_"}], "]"}], ":=", 
    RowBox[{"ReleaseHold", "[", "          ", 
     RowBox[{"(*", 
      RowBox[{
      "converts", " ", "pattern", " ", "to", " ", "body", " ", "for"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Hold", "[", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Evaluate", "@", "lst"}], ",", 
         RowBox[{"pat", "\[RuleDelayed]", "bod"}]}], "]"}], ";"}], "]"}], 
     "]"}]}], ";"}], "      ", 
  RowBox[{"(*", 
   RowBox[{"each", " ", "element", " ", "of", " ", 
    RowBox[{"list", "."}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ForEach", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i_", ",", "j_"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "30"}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"i", "*", "j"}], "]"}]}], "\n", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.67310374432098*^9, 3.6731038159904222`*^9}, {
  3.6731068521113577`*^9, 3.6731068527980633`*^9}}],

Cell[BoxData[
 RowBox[{"ForEach", "[", 
  RowBox[{"i_", ",", "response", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", " ", "/.", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x_", "\[Rule]", "y_"}], ")"}], "\[RuleDelayed]", " ", 
      RowBox[{"Print", "[", 
       RowBox[{"x", ",", "\"\< is associated with \>\"", ",", "y"}], 
       "]"}]}]}], ";"}]}], "  ", "\n", "]"}]], "Input",
 CellChangeTimes->{{3.673104022830484*^9, 3.673104056642933*^9}, {
  3.6731043268935003`*^9, 3.673104399599352*^9}, {3.673104470975256*^9, 
  3.6731045027378473`*^9}, {3.673104546057618*^9, 3.673104549632415*^9}, {
  3.673105248371758*^9, 3.6731053328045273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "to", " ", "see", " ", "if", " ", "this", " ", "Element", 
    " ", "is", " ", "a", " ", "stock", " ", "by", " ", "looking", " ", "at", 
    " ", "the", " ", "available", " ", "Pod", " ", 
    RowBox[{"IDs", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pids", "=", 
    RowBox[{"WolframAlpha", "[", 
     RowBox[{"company", ",", "\"\<PodIDs\>\""}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pids", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[NotEqual]", 
       "\"\<FundamentalsAndFinancials\>\""}], ",", 
      RowBox[{
      "Print", "[", 
       "\"\<Error.  Company name not interpreted as a stock.\>\"", "]"}]}], 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"WolframAlpha", "[", 
    RowBox[{"company", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Input\>\"", ",", "1"}], "}"}], ",", 
       "\"\<ComputableData\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"WolframAlpha", "[", 
    RowBox[{"company", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Quote\>\"", ",", "1"}], "}"}], ",", 
       "\"\<ComputableData\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"WolframAlpha", "[", 
    RowBox[{"company", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<RecentReturns\>\"", ",", "1"}], "}"}], ",", 
       "\"\<ComputableData\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"WolframAlpha", "[", 
    RowBox[{"company", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<CorrelationMatrix\>\"", ",", "1"}], "}"}], ",", 
       "\"\<ComputableData\>\""}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"This", " ", "gets", " ", "all", " ", "the", " ", 
      RowBox[{"data", ":", " ", 
       RowBox[{"WolframAlpha", "[", 
        RowBox[{"company", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", 
           RowBox[{"{", "\"\<ComputableData\>\"", "}"}]}], "}"}]}], "]"}]}]}],
      ";"}], " ", "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6727976279993277`*^9, 3.6727976410572*^9}, {
  3.673061090927849*^9, 3.673061100151602*^9}, {3.673064573166821*^9, 
  3.673064573599072*^9}, {3.6731069532046633`*^9, 3.67310697263102*^9}, {
  3.673107006554523*^9, 3.6731070564029093`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ins", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"podContents", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"ins", "=", 
    RowBox[{"ins", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "10"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"ins", " ", "/.", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i_", ",", "j_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"Print", "[", 
       RowBox[{"i", ",", "\"\<: \>\"", ",", "j"}], "]"}]}]}], ";"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Grid", "[", 
    RowBox[{"ins", ",", 
     RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6730644032574387`*^9, 3.673064453201378*^9}, {
  3.673065172121148*^9, 3.6730652357939167`*^9}, {3.673065572134996*^9, 
  3.6730656067903757`*^9}}],

Cell[BoxData[
 RowBox[{"TradingChart", "[", 
  RowBox[{"\"\<googl\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Volume\>\"", ",", "\"\<SimpleMovingAverage\>\"", ",", 
     "\"\<BollingerBands\>\""}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.673120868681354*^9, 3.673120875576694*^9}, {
  3.67321953606172*^9, 3.673219558485868*^9}}],

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.673193557200046*^9, 3.6731935572988234`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.69055476558092*^9, 3.6905547681880407`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fred", "=", 
  RowBox[{
  "ServiceConnect", "[", "\"\<FederalReserveEconomicData\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.690554769919373*^9, 3.690554770997007*^9}, 
   3.6905548499613533`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            TagBox["\<\"FederalReserveEconomicData\"\>",
             "SummaryItem"]},
           {
            TagBox[
             DynamicBox[ToBoxes[
               If[
                TrueQ[
                 ServiceConnections`Private`authenticatedServiceQ[
                 "connection-6ba1aba09c95e9698641c7c1d47e515d"]], "Connected",
                 "Not Connected"], StandardForm],
              ImageSizeCache->{52., {1., 8.}}],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            TagBox["\<\"FederalReserveEconomicData\"\>",
             "SummaryItem"]},
           {
            TagBox[
             DynamicBox[ToBoxes[
               If[
                TrueQ[
                 ServiceConnections`Private`authenticatedServiceQ[
                 "connection-6ba1aba09c95e9698641c7c1d47e515d"]], "Connected",
                 "Not Connected"], StandardForm]],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "FederalReserveEconomicData", "ID" -> 
   "connection-6ba1aba09c95e9698641c7c1d47e515d"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.690554901273868*^9, 3.690820178471882*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"fred", "[", 
   RowBox[{"\"\<SeriesSearch\>\"", ",", 
    RowBox[{"\"\<Query\>\"", "\[Rule]", "\"\<US unemployment rate\>\""}], ",", 
    RowBox[{"\"\<Frequency\>\"", "\[Rule]", "\"\<Monthly\>\""}], ",", 
    RowBox[{"\"\<SortBy\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<SeriesID\>\"", ",", "\"\<Descending\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.690554911458159*^9, 3.69055491145988*^9}, {
   3.690554943790938*^9, 3.690554945940786*^9}, {3.690820371313748*^9, 
   3.690820441814272*^9}, 3.6908204947668056`*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 1000, "InitialType" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ID", "Title", "Frequency", "Units", "SeasonalAdjustment", 
            "StartDate", "EndDate", "LastUpdated", "Notes"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Monthly"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Billions of Dollars", "Index Jan 2007=100", 
              "Index Jul 1992=100", "Percent", "Thousands of Persons", 
              "Weeks"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Not Seasonally Adjusted", "Seasonally Adjusted", 
              "Seasonally Adjusted Annual Rate", 
              "Smoothed Seasonally Adjusted"]], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[String]}], 1000], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "ID"} -> 1, {All, "Title"} -> 
           1, {All, "Frequency"} -> 1, {All, "Units"} -> 
           1, {All, "SeasonalAdjustment"} -> 1, {All, "StartDate"} -> 
           1, {All, "EndDate"} -> 1, {All, "LastUpdated"} -> 
           1, {All, "Notes"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "ID" -> TypeSystem`PackageScope`AtomShape[96.00000000000001], 
              "Title" -> TypeSystem`PackageScope`AtomShape[576.0000000000001],
               "Frequency" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], "Units" -> 
              TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
              "SeasonalAdjustment" -> 
              TypeSystem`PackageScope`AtomShape[297.6], "StartDate" -> 
              TypeSystem`PackageScope`AtomShape[75], "EndDate" -> 
              TypeSystem`PackageScope`AtomShape[75], "LastUpdated" -> 
              TypeSystem`PackageScope`AtomShape[75], "Notes" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[875162351], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ID", "Title", "Frequency", "Units", "SeasonalAdjustment", 
            "StartDate", "EndDate", "LastUpdated", "Notes"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Monthly"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Billions of Dollars", "Index Jan 2007=100", 
              "Index Jul 1992=100", "Percent", "Thousands of Persons", 
              "Weeks"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Not Seasonally Adjusted", "Seasonally Adjusted", 
              "Seasonally Adjusted Annual Rate", 
              "Smoothed Seasonally Adjusted"]], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[String]}], 1000], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[875162351]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ID\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ID\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][{
                    All, "ID"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[All, "ID"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][{
                    All, "Title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[All, "Title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][{
                    All, "Frequency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[All, "Frequency"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Units\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Units\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][{
                    All, "Units"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[All, "Units"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][{
                    All, "SeasonalAdjustment"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[All, "SeasonalAdjustment"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StartDate\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StartDate\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][{
                    All, "StartDate"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[All, "StartDate"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"EndDate\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EndDate\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][{
                    All, "EndDate"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[All, "EndDate"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LastUpdated\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LastUpdated\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][{
                    All, "LastUpdated"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[All, "LastUpdated"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Notes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Notes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][{
                    All, "Notes"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[All, "Notes"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}]}, {
               Pane[
                Annotation["YUMA704URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[1, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yuma, AZ (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[1, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[1, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[1, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[1, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[1, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[1, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:16:41\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[1, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[1, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YUMA704UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[2, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yuma, AZ (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[2, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[2, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[2, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Smoothed Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[2, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[2, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[2, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:19:40\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[2, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[2, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YUBA706URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[3, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yuba City, CA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[3, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[3, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[3, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[3, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[3, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[3, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:16:41\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[3, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[3, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YUBA706UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[4, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yuba City, CA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[4, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[4, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[4, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Smoothed Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[4, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[4, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[4, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:19:40\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[4, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[4, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YOUN639URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[5, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "Unemployment Rate in Youngstown-Warren-Boardman, OH-PA \
(MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[5, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[5, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[5, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[5, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[5, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[5, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:16:41\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[5, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[5, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YOUN639UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[6, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "Unemployment Rate in Youngstown-Warren-Boardman, OH-PA \
(MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[6, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[6, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[6, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Smoothed Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[6, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[6, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[6, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:19:41\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[6, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[6, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YORK642URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[7, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in York-Hanover, PA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[7, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[7, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[7, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[7, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[7, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[7, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:16:41\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[7, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[7, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YORK642UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[8, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in York-Hanover, PA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[8, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[8, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[8, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Smoothed Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[8, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[8, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[8, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:19:41\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[8, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[8, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YAKI453URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[9, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yakima, WA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[9, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[9, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[9, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[9, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[9, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[9, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:16:42\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[9, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[9, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YAKI453UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[10, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yakima, WA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[10, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[10, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[10, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Smoothed Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[10, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[10, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[10, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:19:42\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[10, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[10, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYWEST5URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[11, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Weston County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[11, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[11, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[11, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[11, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[11, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[11, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:01:02\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[11, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[11, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYWASH3URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[12, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Washakie County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[12, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[12, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[12, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[12, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[12, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[12, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:01:03\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[12, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[12, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYURN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[13, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Wyoming", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[13, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[13, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[13, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[13, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1976\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[13, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[13, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"21 Nov 2016 09:01:33\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[13, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[13, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYUR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[14, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Wyoming", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[14, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[14, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[14, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[14, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1976\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[14, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[14, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"18 Nov 2016 15:41:02\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[14, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[14, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYUINT1URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[15, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Uinta County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[15, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[15, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[15, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[15, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[15, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[15, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:01:03\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[15, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[15, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYTETO9URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[16, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Teton County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[16, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[16, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[16, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[16, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[16, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[16, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:01:04\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[16, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[16, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYSWEE7URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[17, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Sweetwater County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[17, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[17, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[17, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[17, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[17, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[17, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:01:04\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[17, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[17, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYSUBL5URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[18, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Sublette County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[18, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[18, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[18, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[18, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[18, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[18, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:01:05\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[18, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[18, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYSLIND", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[19, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Leading Index for Wyoming", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[19, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[19, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[19, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[19, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1982\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[19, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[19, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"28 Nov 2016 12:21:46\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[19, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "The leading index for each state predicts the six-month \
growth rate of the state \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[19, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYSHER3URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[20, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Sheridan County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[20, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{576.0000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[20, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[20, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[20, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{297.6, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[20, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[20, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:01:05\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[20, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
                 
                  GeneralUtilities`Slice[20, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1000 (-20), {1, 1000 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 1000 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1000, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}, 
                    BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 1000 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1000 20, {1, 1000 - 20 + 1}])}]]}}, 
                  Alignment -> {Center, Bottom}]], Background -> 
                GrayLevel[0.98], Alignment -> {Center, 
                  Scaled[1]}], SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209][
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 792937209]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[792937209][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
        ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
        ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.690554916905608*^9, 3.690554949061082*^9, 
  3.6908201837184963`*^9, 3.690820445046179*^9, 3.690820499536972*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "result", "]"}]], "Input",
 CellChangeTimes->{{3.690820710708168*^9, 3.690820717872304*^9}}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{3.6908207185119047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"result", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#Units", "\[Equal]", "\"\<Percent\>\""}], "&"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690820518369997*^9, 3.6908205516298122`*^9}, {
  3.6908206543287992`*^9, 3.690820703432231*^9}}],

Cell[BoxData["974"], "Output",
 CellChangeTimes->{
  3.6908205604598303`*^9, {3.690820688043488*^9, 3.690820703845282*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"result", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
     "#SeasonalAdjustment", "\[Equal]", 
      "\"\<Smoothed Seasonally Adjusted\>\""}], "&"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690820735803973*^9, 3.690820746212653*^9}}],

Cell[BoxData["62"], "Output",
 CellChangeTimes->{3.6908207543919773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counts", "[", 
  RowBox[{"result", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", "\"\<SeasonalAdjustment\>\"", "}"}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.690820886464581*^9, 3.690820936792738*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Struct[{"SeasonalAdjustment"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Not Seasonally Adjusted", "Seasonally Adjusted", 
              "Seasonally Adjusted Annual Rate", 
              "Smoothed Seasonally Adjusted"]]}], 
          TypeSystem`Atom[Integer], 4], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`HeaderShape[
             Association[{Keys, "SeasonalAdjustment"} -> 1], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "SeasonalAdjustment" -> 
               TypeSystem`PackageScope`AtomShape[297.6]]]], 
            TypeSystem`PackageScope`AtomShape[34]]], 4, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1167475330], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Struct[{"SeasonalAdjustment"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Not Seasonally Adjusted", "Seasonally Adjusted", 
              "Seasonally Adjusted Annual Rate", 
              "Smoothed Seasonally Adjusted"]]}], 
          TypeSystem`Atom[Integer], 4], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[1167475330]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1897449859][{Keys, "SeasonalAdjustment"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1897449859][
                    GeneralUtilities`Slice[Keys, "SeasonalAdjustment"]], 
                   "Mouse"], Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Center}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["880"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897449859][
                  GeneralUtilities`Slice[
                   Key[
                    Association[
                    "SeasonalAdjustment" -> "Not Seasonally Adjusted"]]]], 
                 "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation["Not Seasonally Adjusted", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1897449859][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "SeasonalAdjustment" -> "Not Seasonally Adjusted"]], 
                    Key["SeasonalAdjustment"]]], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               SpanFromAbove}, {
               Item[
                Pane[
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1897449859][{Keys, "SeasonalAdjustment"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1897449859][
                    GeneralUtilities`Slice[Keys, "SeasonalAdjustment"]], 
                   "Mouse"], Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Center}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["62"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897449859][
                  GeneralUtilities`Slice[
                   Key[
                    Association[
                    "SeasonalAdjustment" -> 
                    "Smoothed Seasonally Adjusted"]]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation["Smoothed Seasonally Adjusted", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1897449859][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "SeasonalAdjustment" -> "Smoothed Seasonally Adjusted"]], 
                    
                    Key["SeasonalAdjustment"]]], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               SpanFromAbove}, {
               Item[
                Pane[
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1897449859][{Keys, "SeasonalAdjustment"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1897449859][
                    GeneralUtilities`Slice[Keys, "SeasonalAdjustment"]], 
                   "Mouse"], Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Center}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897449859][
                  GeneralUtilities`Slice[
                   Key[
                    Association[
                    "SeasonalAdjustment" -> "Seasonally Adjusted"]]]], 
                 "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation["Seasonally Adjusted", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1897449859][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "SeasonalAdjustment" -> "Seasonally Adjusted"]], 
                    Key["SeasonalAdjustment"]]], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               SpanFromAbove}, {
               Item[
                Pane[
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1897449859][{Keys, "SeasonalAdjustment"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1897449859][
                    GeneralUtilities`Slice[Keys, "SeasonalAdjustment"]], 
                   "Mouse"], Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Center}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897449859][
                  GeneralUtilities`Slice[
                   Key[
                    Association[
                    "SeasonalAdjustment" -> 
                    "Seasonally Adjusted Annual Rate"]]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation["Seasonally Adjusted Annual Rate", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1897449859][
                    GeneralUtilities`Slice[
                    Key[
                    Association[
                    "SeasonalAdjustment" -> 
                    "Seasonally Adjusted Annual Rate"]], 
                    Key["SeasonalAdjustment"]]], "Mouse"], 
                  ImageSize -> {{297.6, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               SpanFromAbove}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1897449859][
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1897449859]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897449859][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897449859][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
        ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
        ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.690820899982999*^9, 3.690820937312509*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"id", "=", 
  RowBox[{"result", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6905549569588118`*^9, 3.690554963564028*^9}, {
  3.690554993837367*^9, 3.690554994428607*^9}, {3.6908202087097692`*^9, 
  3.690820241714602*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 1000, "InitialType" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"ID", "Title"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 1000], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "ID"} -> 1, {All, "Title"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "ID" -> TypeSystem`PackageScope`AtomShape[96.00000000000001], 
              "Title" -> TypeSystem`PackageScope`AtomShape[
               1699.2000000000003`]]]], 20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[549294302], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"ID", "Title"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 1000], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[549294302]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ID\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ID\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 741793287][{
                    All, "ID"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[All, "ID"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 741793287][{
                    All, "Title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[All, "Title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}]}, {
               Pane[
                Annotation["YUMA704URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[1, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yuma, AZ (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[1, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YUMA704UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[2, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yuma, AZ (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[2, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YUBA706URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[3, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yuba City, CA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[3, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YUBA706UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[4, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yuba City, CA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[4, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YOUN639URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[5, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "Unemployment Rate in Youngstown-Warren-Boardman, OH-PA \
(MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[5, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YOUN639UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[6, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "Unemployment Rate in Youngstown-Warren-Boardman, OH-PA \
(MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[6, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YORK642URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[7, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in York-Hanover, PA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[7, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YORK642UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[8, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in York-Hanover, PA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[8, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YAKI453URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[9, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yakima, WA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[9, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["YAKI453UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[10, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Yakima, WA (MSA)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[10, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYWEST5URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[11, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Weston County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[11, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYWASH3URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[12, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Washakie County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[12, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYURN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[13, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Wyoming", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[13, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYUR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[14, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Wyoming", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[14, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYUINT1URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[15, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Uinta County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[15, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYTETO9URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[16, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Teton County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[16, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYSWEE7URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[17, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Sweetwater County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[17, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYSUBL5URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[18, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Sublette County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[18, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYSLIND", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[19, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Leading Index for Wyoming", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[19, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["WYSHER3URN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[20, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Sheridan County, WY", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
                 
                  GeneralUtilities`Slice[20, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{1699.2000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Grid[{{
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1000 (-20), {1, 1000 - -20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 1000 - -20 + 1}])}]], 
                    Spacer[{5, 1}], 
                    Style[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1000, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 741793287}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 741793287}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 741793287}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 741793287}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 741793287}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}, 
                    BaselinePosition -> Baseline], 
                    Spacer[{5, 1}], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 1000 - 20 + 1}])}]], 
                    Item[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1000 20, {1, 1000 - 20 + 1}])}]]}}, 
                  Alignment -> {Center, Bottom}]], Background -> 
                GrayLevel[0.98], Alignment -> {Center, 
                  Scaled[1]}], SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 741793287][
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 741793287]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[741793287][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
        ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
        ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.690554964148238*^9, 3.6905549955135517`*^9, {3.6908201866336603`*^9, 
   3.6908202423252277`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ts", "=", 
  RowBox[{"fred", "[", 
   RowBox[{"\"\<SeriesData\>\"", ",", 
    RowBox[{"\"\<ID\>\"", "\[Rule]", 
     RowBox[{"{", "id", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.690554986559684*^9, 3.690555005484537*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
             Opacity[1.], LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAB9XJgSMp5UEAzJTrzcwrQLv1gaFi
Q+VB2piVz45EOEAL6l/u1l/lQaul18JP9S1ALltfg2h65UGA0ew3aag4QL0Q
16x0lOVBSMlLWocmNUDnmXQDtrDlQfuaUNqqQTtA5Z8zohTL5UE22e2dOAU9
QH55GG6o5+VBcKYaLG2LNkCDl3XOtgPmQfG+oJExeUBAXDL0duId5kFiLQy3
8Js0QNCgmExDOuZBPhWH8wnsQ0AYjF5qwVTmQabLk85KxjhAy7ucHLpu5kGI
k14hAxhBQBq/APzniuZBfm5WNuHnN0A8P4YjM6XmQYAj5PKC1UBA+pIxeLPB
5kFKx3eykpo+QCMrVWGu3eZBXFlRAp82O0AgQJqSxvfmQQLYJCu+lD9AuSgF
8RMU50HzBfVB5gk0QCWOkZd+LudBWe4W3H6iQkAtx0NrHkvnQdb+LJnx+jRA
oERu0zhn50GL4LcLnM1DQOc+uoNwgedBj8/EV58SKkDJDCxh3Z3nQS5BFicU
cjVAf1e/hme450GhBeeLwlgnQKHmykBs0udBmaN0UxwhM0BeSfwnpu7nQZZB
O6LRyy5A7yhPV/0I6EFjxRJ/9gwrQBvcx7OJJehBqK4VLE3NM0Cz07ikkEHo
QagyYGnM1ydAHkjL3bRb6EHmzGRRou81QCWQA0QOeOhBtFpigka9JEAAVV3y
hJLoQbDTzFkJGzZARl4vNXas6EFVh0PjVpUnQCc7J6WcyOhBnDNkybJ0M0Dc
lEBd4OLoQTXXgrsuoixALcJ/Qln/6EEws53nHaoyQFFs4G/vGelBD5hP/J8b
LEDhWrkxADTpQQdyhon8byRADB24IEZQ6UFNGUvvHPswQAtc2FepaulBB3rr
rcWeJEClbh68QYfpQRDYYcFF4jlAq8XctFSj6UHxRNFkv04wQIWZvPWEvelB
sQWzrADrOkD6QMJj6tnpQYORY6wiPTVAQ2XpGW306UHgEv/dZcQ6QPfNiGRq
DupBJ0j5HkPXOEBHCk7cnCrqQbBwRM8GjDlAa8M0nOxE6kF7FPryySo5QCpQ
QYlxYepBKfnq4fqONUBUIcYKcX3qQRyRR+UdaDlAUm9s1I2X6kHpabaSAlg2
QOyQOMvfs+pBV19MFyPgO0BZLyYKT87qQQskXnq7azZAYqE5dvPq6kHQ/zRf
XuE5QNZXxXYSB+tBLuNCSeBaM0Aei3K/TiHrQbRWBEks8TZAAZJFNcA960FJ
1y8Dz7AyQLgVOvNOWOtBGAPcQ4xCNED5KjZeL3PrQQJGT/FmZjNAxi7FuQ==

              "]]}}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{2.8401408*^9, 10.218723580991549`},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{2840140800, 3684268800}, {10.218723580991549`, 
            39.8440536889634}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Jan 1990\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Oct 2016\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["322",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
             Opacity[1.], LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAB9XJgSMp5UEAzJTrzcwrQLv1gaFi
Q+VB2piVz45EOEAL6l/u1l/lQaul18JP9S1ALltfg2h65UGA0ew3aag4QL0Q
16x0lOVBSMlLWocmNUDnmXQDtrDlQfuaUNqqQTtA5Z8zohTL5UE22e2dOAU9
QH55GG6o5+VBcKYaLG2LNkCDl3XOtgPmQfG+oJExeUBAXDL0duId5kFiLQy3
8Js0QNCgmExDOuZBPhWH8wnsQ0AYjF5qwVTmQabLk85KxjhAy7ucHLpu5kGI
k14hAxhBQBq/APzniuZBfm5WNuHnN0A8P4YjM6XmQYAj5PKC1UBA+pIxeLPB
5kFKx3eykpo+QCMrVWGu3eZBXFlRAp82O0AgQJqSxvfmQQLYJCu+lD9AuSgF
8RMU50HzBfVB5gk0QCWOkZd+LudBWe4W3H6iQkAtx0NrHkvnQdb+LJnx+jRA
oERu0zhn50GL4LcLnM1DQOc+uoNwgedBj8/EV58SKkDJDCxh3Z3nQS5BFicU
cjVAf1e/hme450GhBeeLwlgnQKHmykBs0udBmaN0UxwhM0BeSfwnpu7nQZZB
O6LRyy5A7yhPV/0I6EFjxRJ/9gwrQBvcx7OJJehBqK4VLE3NM0Cz07ikkEHo
QagyYGnM1ydAHkjL3bRb6EHmzGRRou81QCWQA0QOeOhBtFpigka9JEAAVV3y
hJLoQbDTzFkJGzZARl4vNXas6EFVh0PjVpUnQCc7J6WcyOhBnDNkybJ0M0Dc
lEBd4OLoQTXXgrsuoixALcJ/Qln/6EEws53nHaoyQFFs4G/vGelBD5hP/J8b
LEDhWrkxADTpQQdyhon8byRADB24IEZQ6UFNGUvvHPswQAtc2FepaulBB3rr
rcWeJEClbh68QYfpQRDYYcFF4jlAq8XctFSj6UHxRNFkv04wQIWZvPWEvelB
sQWzrADrOkD6QMJj6tnpQYORY6wiPTVAQ2XpGW306UHgEv/dZcQ6QPfNiGRq
DupBJ0j5HkPXOEBHCk7cnCrqQbBwRM8GjDlAa8M0nOxE6kF7FPryySo5QCpQ
QYlxYepBKfnq4fqONUBUIcYKcX3qQRyRR+UdaDlAUm9s1I2X6kHpabaSAlg2
QOyQOMvfs+pBV19MFyPgO0BZLyYKT87qQQskXnq7azZAYqE5dvPq6kHQ/zRf
XuE5QNZXxXYSB+tBLuNCSeBaM0Aei3K/TiHrQbRWBEks8TZAAZJFNcA960FJ
1y8Dz7AyQLgVOvNOWOtBGAPcQ4xCNED5KjZeL3PrQQJGT/FmZjNAxi7FuQ==

              "]]}}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{2.8401408*^9, 10.218723580991549`},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{2840140800, 3684268800}, {10.218723580991549`, 
            39.8440536889634}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Jan 1990\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Oct 2016\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["322",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["True",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"1", ",", "\<\"Month\"\>"}], "}"}],
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJxlVstxE0EQXTiTgI/GrGyQZEualXZX35HEUSduXKnCVw4k4ABIQKShBAhA
BEACSoAEkPU+61m2yu6amZ7Xb1739Oj6y7dPX19nWfbq/Lc5//t9fP66Mbt8
D/Hn/vnrR8wHzle0Jddn8fHyLWBPVQyXr+D8sIXT4/4e/fq0A8w/VfC/qjmu
ibvgeEq8CfcFxhkBf8d4V0P6F4w3474VxjFiX2dN/Ai8w9LnAF7Jsc4zId6Y
6+IhfiuMv0eurzleOz74zakH9TqMbbGvaMUhfka8sCHeluf5SLwNxr90ngVt
5Xg6j/II3kv4/Y3kJ13I+/MmjX/GBV5tXcCnJN9A2/AHjnSQLlvu38LvzYbn
Wznv2D8jT8Up6EfdgupQdkl+kbw3GP9g3k9TztfGg3/huoIO0mlufVQvqB/p
svU8cObGB5zqpkzj7YL5Xub/NLpLF+xXfpV/8gm8j08j+ue0N/TP6cf7kKmO
dc7S/HBe5us4oN97rne4/5Y25zly3zv4B+dF50W9lK4TjAdR/Ub4Kd8b2pw4
feOKJ3RS/bLujoqr8963znHH+Q7nb4mn/jM2jvimVroNWryIsxfuO58LY/kH
65T0k3OfUt8CzgPX1S/vWvi58TF/T94j4gWfA3qrvoe00qVvXaS3+Cu/mO+a
d8qzaOVlaN6wH4yLuKrLa66/5Vj6CXdAvOB+iHyrbnrmDZymfsRfOiV5OozN
G3iq+6nHqgP4B/PRvVB+VAfpO6B+UrXeR/V7xnmsW/dCdTt230nrTX1E79jU
7w7i691iX/M7WZlfUg+hsMW+yjrAX/1x7v4LvnXa1w6NXoluxpV+peMk1v26
0UX4en8VR/nRvQHfiXlJX/FPdZ9Zv+Q9eREH/Cf/3RvglKlOe/VN6SycKuW3
b+67+n3SB07DND8v9oNP7byATyufu9C6N6pL9YNu2hcy5Uf4itf8LhDffxqZ
oIQ=
    "], {
     TemporalData`DateSpecification[{1990, 1, 1, 0, 0, 0.}, {
      2016, 10, 1, 0, 0, 0.}, {1, "Month"}]}, 1, {"Continuous", 1}, {
    "Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.690554988045541*^9, 3.690555007313553*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "ts", "]"}]], "Input",
 CellChangeTimes->{{3.690555008985416*^9, 3.690555014524634*^9}, {
  3.6905550543229847`*^9, 3.690555056082086*^9}, {3.6905551104224157`*^9, 
  3.690555111726782*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
vy/FwJ/4FWbFkZ/gu7wV+oh5YmHb//X9HxQh7Ts=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.8401408*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
       
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
         Automatic]& , {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{2.8401408*^9, 
        FormBox["\"1990\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox["\"2000\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox["\"2010\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.7868256*^9, 
        FormBox["\"2020\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8401408*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9032128*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9663712*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0294432*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0926016*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.218832*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.281904*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3450624*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4081344*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5343648*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5975232*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 
        0.}}}, {{2.8401408*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.7868256*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8401408*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9032128*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9663712*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0294432*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0926016*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.218832*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.281904*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3450624*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4081344*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5343648*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5975232*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{2.8401408*^9, 3.6842688*^9}, {0, 40.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.6905550096006317`*^9, 3.690555014904735*^9}, 
   3.69055505680847*^9, 3.690555112736929*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fred", "[", 
  RowBox[{"\"\<SeriesSearch\>\"", ",", 
   RowBox[{"\"\<Query\>\"", "\[Rule]", "\"\<US unemployment rate\>\""}], ",", 
   
   RowBox[{"\"\<Frequency\>\"", "\[Rule]", "\"\<Monthly\>\""}], ",", 
   RowBox[{"MaxItems", "\[Rule]", "5"}], ",", 
   RowBox[{"\"\<StartIndex\>\"", "\[Rule]", "100"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.69055492365908*^9, 3.690554923660268*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 5, "Length" -> 5, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ID", "Title", "Frequency", "Units", "SeasonalAdjustment", 
            "StartDate", "EndDate", "LastUpdated", "Notes"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Monthly"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Percent"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Not Seasonally Adjusted", "Seasonally Adjusted", 
              "Smoothed Seasonally Adjusted"]], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[String]}], 5], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "ID"} -> 1, {All, "Title"} -> 
           1, {All, "Frequency"} -> 1, {All, "Units"} -> 
           1, {All, "SeasonalAdjustment"} -> 1, {All, "StartDate"} -> 
           1, {All, "EndDate"} -> 1, {All, "LastUpdated"} -> 
           1, {All, "Notes"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "ID" -> TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
              "Title" -> TypeSystem`PackageScope`AtomShape[556.8000000000001],
               "Frequency" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], "Units" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], 
              "SeasonalAdjustment" -> 
              TypeSystem`PackageScope`AtomShape[268.80000000000007`], 
              "StartDate" -> TypeSystem`PackageScope`AtomShape[75], "EndDate" -> 
              TypeSystem`PackageScope`AtomShape[75], "LastUpdated" -> 
              TypeSystem`PackageScope`AtomShape[75], "Notes" -> 
              TypeSystem`PackageScope`AtomShape[1920.0000000000002`]]]], 
           5, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1578429153], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ID", "Title", "Frequency", "Units", "SeasonalAdjustment", 
            "StartDate", "EndDate", "LastUpdated", "Notes"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Monthly"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Percent"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Not Seasonally Adjusted", "Seasonally Adjusted", 
              "Smoothed Seasonally Adjusted"]], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[String]}], 5], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1578429153]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ID\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ID\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1604683467][{All, "ID"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[All, "ID"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1604683467][{All, "Title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[All, "Title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Frequency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1604683467][{All, "Frequency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[All, "Frequency"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Units\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Units\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1604683467][{All, "Units"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[All, "Units"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SeasonalAdjustment\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1604683467][{All, "SeasonalAdjustment"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[All, "SeasonalAdjustment"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StartDate\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StartDate\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1604683467][{All, "StartDate"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[All, "StartDate"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"EndDate\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EndDate\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1604683467][{All, "EndDate"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[All, "EndDate"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LastUpdated\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LastUpdated\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1604683467][{All, "LastUpdated"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[All, "LastUpdated"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Center}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Notes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Notes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1604683467][{All, "Notes"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[All, "Notes"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Center}]}, {
               Pane[
                Annotation["MDUR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[1, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Maryland", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[1, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{556.8000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[1, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[1, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[1, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1976\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[1, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[1, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"18 Nov 2016 15:41:14\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[1, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[1, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["MAURN", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[2, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Massachusetts", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[2, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{556.8000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[2, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[2, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[2, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1976\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[2, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[2, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"21 Nov 2016 09:01:18\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[2, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[2, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["DALL148UR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[3, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "Unemployment Rate in Dallas-Fort Worth-Arlington, TX (MSA)", 
                 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[3, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{556.8000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[3, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[3, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Smoothed Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[3, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1990\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[3, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[3, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30 Nov 2016 15:20:38\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[3, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[3, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["KYUR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[4, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate in Kentucky", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[4, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{556.8000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[4, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[4, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[4, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1976\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[4, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Oct 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[4, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"18 Nov 2016 15:41:16\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[4, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[4, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LNU04000002", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[5, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unemployment Rate: Women", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[5, 
                   Key["Title"]]], "Mouse"], 
                ImageSize -> {{556.8000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Monthly", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[5, 
                   Key["Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Percent", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[5, 
                   Key["Units"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Not Seasonally Adjusted", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[5, 
                   Key["SeasonalAdjustment"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Jan 1948\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[5, 
                   Key["StartDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1 Nov 2016\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[5, 
                   Key["EndDate"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"2 Dec 2016 09:31:25\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[5, 
                   Key["LastUpdated"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "To obtain estimates of women worker employment, the ratio of \
weighted women empl \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
                  GeneralUtilities`Slice[5, 
                   Key["Notes"]]], "Mouse"], 
                ImageSize -> {{1920.0000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1604683467][
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1604683467]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1604683467][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           "", Blank[] :> ""}], TrackedSymbols :> {}], FrameStyle -> None, 
        ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
        ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.690554924899992*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fred", "[", 
  RowBox[{"\"\<SeriesData\>\"", ",", 
   RowBox[{"\"\<ID\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<LNS12032189\>\"", ",", "\"\<PCU3253203253201\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690554931578442*^9, 3.690554931579809*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"LNS12032189\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TimeSeries",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"],
               ImageSizeCache->{12., {0., 12.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = True),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, 
               {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                1.6], Opacity[1.], LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAAFw0KQqS1kGQzqwZwNDiQI5tTfwf
GddBJq5tei624kC4hWylkqvXQYCYH5oxFuNArTM/3VA02EGXmnDVbRDkQLNH
NmZguthBynrXjzQQ5EBVYjPFzEvZQaGJIMBoe+RAwhLksoTT2UG1BRnbag/k
QMvJmnaZZtpBn6rjXBVi5UDl5nWL//baQdlRm1Quk+VAypkEL7F920E54g/+
8fLkQEtTmai/D9xBQnnR3GvZ5UCYouGwGZjcQfbBthbbF+ZA9VdOCsUd3UF8
XAVcsUPmQO4TwTnNrt1BcDPU8oHU5kCzZef3IDbeQeFukTz9u+dAE74TjNHI
3kHPSaq8L6noQIR8ZHHTWN9BsgSlrh6U6UDB0GjlIN/fQcS0kWyFZepAzZW5
l2U44EFGt0vZJzXrQB+OGIRgfOBBhDATUQYC7EC/iXrbCcbgQdG022iG3OtA
Z7hu21sO4UGU9AapPRjtQPWxvKLTUeFBbqbaADRw7kDRrg3V+ZrhQYH0X56F
fO5Ak3a4zkXf4UFTmAvMSKfuQF1x9XA6IuJB4h3HHgMH8EB1bzV+3WriQdZJ
CzozHvFAczjPUqau4kH4ZxYN0rPxQL8EbJId+OJBCi78gHyq8UATBJt6PUDj
Qa7SDk0M9vFATc4jKoOD40Ffg7u98LLxQNWbr0R3zONBsO5ZCW/K8kBCNJUm
kRDkQezLsEUfb/NAuP8MsVNT5EG4Hw5SgP3zQHzOh6bEm+RBYISyGdOZ9EAm
aFxjW9/kQcCgmfw4JPVAHQU0i6Ao5UFEHX8Acrv1QPpsZXoLbeVB7Xr/wLVf
9UDgBykSH7DlQY/8RI0VpfVAFKbvFOH45UFIe9+yyd31QC0PEN/IPOZBVgr5
YZ2O9kCUezMUX4bmQbqBS1/bGPdABBvp8Z3O5kEw5EN/4Ln3QFmF+JYCEudB
4OAoCXmE+ED88gqnFVvnQVF6R8CfAvlAhSt3fk6f50EiVEmvcOn5QBaXdf4v
4udBFbSnnzG9+UD1BXfpvyroQYjovZBxwflAuj/Sm3Vu6EEXjWckThf6QM18
MLnZt+hBhS7HFlxu+kDo7CB/5v/oQXulf7nkWvtA6SdrDBlD6UHo9oXqHaL7
QDhmuAT6i+lBmmL2waFq+0Btb1/EANDpQTj5sEAR7/lA8HsJ77UZ6kFMhgja
k0H6QHu7RcITYupBQS7ftfcc+0Dsxdtcl6XqQRAwqoDyjPtAq9N0Ysnu6kGG
BmDrezL8QE+sZy8hM+tBg3DvXQew/EAA0mUrS3jrQdTFGANwUf1AQh7zaw==

                 "]]}}, {}, {}},
             AspectRatio->1,
             Axes->{False, False},
             AxesLabel->{None, None},
             AxesOrigin->{1.5146784*^9, 38321.45244487775},
             DisplayFunction->Identity,
             Frame->{{True, True}, {True, True}},
             FrameLabel->{{None, None}, {None, None}},
             FrameStyle->Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]],
             FrameTicks->{{None, None}, {None, None}},
             GridLines->{None, None},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImagePadding->All,
             
             ImageSize->
              Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}],
             
             Method->{
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}},
             
             PlotRange->{{1514678400, 3686947200}, {38321.45244487775, 
               120087.00075604703`}},
             PlotRangeClipping->True,
             PlotRangePadding->{{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}},
             Ticks->{Automatic, Automatic}], GridBox[{
              {
               TagBox[
                TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1948\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Nov 2016\"", "SummaryItem"]}]},
                 "RowDefault"],
                "SummaryItem"], "\[SpanFromLeft]"},
              {
               RowBox[{
                TagBox["\<\"Data points: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["827",
                 "SummaryItem"]}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
         GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = False),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, 
               {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                1.6], Opacity[1.], LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAAFw0KQqS1kGQzqwZwNDiQI5tTfwf
GddBJq5tei624kC4hWylkqvXQYCYH5oxFuNArTM/3VA02EGXmnDVbRDkQLNH
NmZguthBynrXjzQQ5EBVYjPFzEvZQaGJIMBoe+RAwhLksoTT2UG1BRnbag/k
QMvJmnaZZtpBn6rjXBVi5UDl5nWL//baQdlRm1Quk+VAypkEL7F920E54g/+
8fLkQEtTmai/D9xBQnnR3GvZ5UCYouGwGZjcQfbBthbbF+ZA9VdOCsUd3UF8
XAVcsUPmQO4TwTnNrt1BcDPU8oHU5kCzZef3IDbeQeFukTz9u+dAE74TjNHI
3kHPSaq8L6noQIR8ZHHTWN9BsgSlrh6U6UDB0GjlIN/fQcS0kWyFZepAzZW5
l2U44EFGt0vZJzXrQB+OGIRgfOBBhDATUQYC7EC/iXrbCcbgQdG022iG3OtA
Z7hu21sO4UGU9AapPRjtQPWxvKLTUeFBbqbaADRw7kDRrg3V+ZrhQYH0X56F
fO5Ak3a4zkXf4UFTmAvMSKfuQF1x9XA6IuJB4h3HHgMH8EB1bzV+3WriQdZJ
CzozHvFAczjPUqau4kH4ZxYN0rPxQL8EbJId+OJBCi78gHyq8UATBJt6PUDj
Qa7SDk0M9vFATc4jKoOD40Ffg7u98LLxQNWbr0R3zONBsO5ZCW/K8kBCNJUm
kRDkQezLsEUfb/NAuP8MsVNT5EG4Hw5SgP3zQHzOh6bEm+RBYISyGdOZ9EAm
aFxjW9/kQcCgmfw4JPVAHQU0i6Ao5UFEHX8Acrv1QPpsZXoLbeVB7Xr/wLVf
9UDgBykSH7DlQY/8RI0VpfVAFKbvFOH45UFIe9+yyd31QC0PEN/IPOZBVgr5
YZ2O9kCUezMUX4bmQbqBS1/bGPdABBvp8Z3O5kEw5EN/4Ln3QFmF+JYCEudB
4OAoCXmE+ED88gqnFVvnQVF6R8CfAvlAhSt3fk6f50EiVEmvcOn5QBaXdf4v
4udBFbSnnzG9+UD1BXfpvyroQYjovZBxwflAuj/Sm3Vu6EEXjWckThf6QM18
MLnZt+hBhS7HFlxu+kDo7CB/5v/oQXulf7nkWvtA6SdrDBlD6UHo9oXqHaL7
QDhmuAT6i+lBmmL2waFq+0Btb1/EANDpQTj5sEAR7/lA8HsJ77UZ6kFMhgja
k0H6QHu7RcITYupBQS7ftfcc+0Dsxdtcl6XqQRAwqoDyjPtAq9N0Ysnu6kGG
BmDrezL8QE+sZy8hM+tBg3DvXQew/EAA0mUrS3jrQdTFGANwUf1AQh7zaw==

                 "]]}}, {}, {}},
             AspectRatio->1,
             Axes->{False, False},
             AxesLabel->{None, None},
             AxesOrigin->{1.5146784*^9, 38321.45244487775},
             DisplayFunction->Identity,
             Frame->{{True, True}, {True, True}},
             FrameLabel->{{None, None}, {None, None}},
             FrameStyle->Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]],
             FrameTicks->{{None, None}, {None, None}},
             GridLines->{None, None},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImagePadding->All,
             
             ImageSize->
              Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}],
             
             Method->{
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}},
             
             PlotRange->{{1514678400, 3686947200}, {38321.45244487775, 
               120087.00075604703`}},
             PlotRangeClipping->True,
             PlotRangePadding->{{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}},
             Ticks->{Automatic, Automatic}], GridBox[{
              {
               TagBox[
                TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1948\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Nov 2016\"", "SummaryItem"]}]},
                 "RowDefault"],
                "SummaryItem"], "\[SpanFromLeft]"},
              {
               RowBox[{
                TagBox["\<\"Data points: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["827",
                 "SummaryItem"]}], "\[SpanFromLeft]"},
              {
               RowBox[{
                TagBox["\<\"Regular: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["True",
                 "SummaryItem"]}], 
               RowBox[{
                TagBox["\<\"Output dimension: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["1",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Metadata: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["None",
                 "SummaryItem"]}], 
               RowBox[{
                TagBox["\<\"Minimum increment: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 RowBox[{"{", 
                  RowBox[{"1", ",", "\<\"Month\"\>"}], "}"}],
                 "SummaryItem"]}]},
              {
               TagBox["\<\"\"\>",
                "SummaryItem"], 
               RowBox[{
                TagBox["\<\"Resampling: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"LinearInterpolation\"\>",
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open$$],
         ImageSize->Automatic],
        BaselinePosition->Baseline],
       DynamicModuleValues:>{}], "]"}],
     TemporalData[TimeSeries, {CompressedData["
1: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
       "], {
        TemporalData`DateSpecification[{1948, 1, 1, 0, 0, 0.}, {
         2016, 11, 1, 0, 0, 0.}, {1, "Month"}]}, 1, {"Continuous", 1}, {
       "Discrete", 1}, 1, {
       ValueDimensions -> 1, DateFunction -> Automatic, 
        ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
      True, 11.],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"PCU3253203253201\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TimeSeries",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"],
               ImageSizeCache->{12., {0., 12.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = True),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, 
               {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                1.6], Opacity[1.], LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAAFw0KQqS1kGQzqwZwNDiQI5tTfwf
GddBJq5tei624kC4hWylkqvXQYCYH5oxFuNArTM/3VA02EGXmnDVbRDkQLNH
NmZguthBynrXjzQQ5EBVYjPFzEvZQaGJIMBoe+RAwhLksoTT2UG1BRnbag/k
QMvJmnaZZtpBn6rjXBVi5UDl5nWL//baQdlRm1Quk+VAypkEL7F920E54g/+
8fLkQEtTmai/D9xBQnnR3GvZ5UCYouGwGZjcQfbBthbbF+ZA9VdOCsUd3UF8
XAVcsUPmQO4TwTnNrt1BcDPU8oHU5kCzZef3IDbeQeFukTz9u+dAE74TjNHI
3kHPSaq8L6noQIR8ZHHTWN9BsgSlrh6U6UDB0GjlIN/fQcS0kWyFZepAzZW5
l2U44EFGt0vZJzXrQB+OGIRgfOBBhDATUQYC7EC/iXrbCcbgQdG022iG3OtA
Z7hu21sO4UGU9AapPRjtQPWxvKLTUeFBbqbaADRw7kDRrg3V+ZrhQYH0X56F
fO5Ak3a4zkXf4UFTmAvMSKfuQF1x9XA6IuJB4h3HHgMH8EB1bzV+3WriQdZJ
CzozHvFAczjPUqau4kH4ZxYN0rPxQL8EbJId+OJBCi78gHyq8UATBJt6PUDj
Qa7SDk0M9vFATc4jKoOD40Ffg7u98LLxQNWbr0R3zONBsO5ZCW/K8kBCNJUm
kRDkQezLsEUfb/NAuP8MsVNT5EG4Hw5SgP3zQHzOh6bEm+RBYISyGdOZ9EAm
aFxjW9/kQcCgmfw4JPVAHQU0i6Ao5UFEHX8Acrv1QPpsZXoLbeVB7Xr/wLVf
9UDgBykSH7DlQY/8RI0VpfVAFKbvFOH45UFIe9+yyd31QC0PEN/IPOZBVgr5
YZ2O9kCUezMUX4bmQbqBS1/bGPdABBvp8Z3O5kEw5EN/4Ln3QFmF+JYCEudB
4OAoCXmE+ED88gqnFVvnQVF6R8CfAvlAhSt3fk6f50EiVEmvcOn5QBaXdf4v
4udBFbSnnzG9+UD1BXfpvyroQYjovZBxwflAuj/Sm3Vu6EFpD37Kjh3qQM18
MLnZt+hB2Gur9K106kDo7CB/5v/oQRdupTZUYetA6SdrDBlD6UFEDFDrrKjr
QDhmuAT6i+lBUlQDiD5y60Btb1/EANDpQYJ+E+7V9ulA8HsJ77UZ6kHmH6Jz
pUjqQHu7RcITYupBgRxeo3Uk60Dsxdtcl6XqQax2L6mTlOtAq9N0Ysnu6kFJ
fF+bLTrsQE+sZy8hM+tBy3yIWKu37EAA0mUrS3jrQZ2DIdBiUf1AixTxuA==

                 "]]}}, {}, {}},
             AspectRatio->1,
             Axes->{False, False},
             AxesLabel->{None, None},
             AxesOrigin->{1.5146784*^9, 38321.45244487775},
             DisplayFunction->Identity,
             Frame->{{True, True}, {True, True}},
             FrameLabel->{{None, None}, {None, None}},
             FrameStyle->Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]],
             FrameTicks->{{None, None}, {None, None}},
             GridLines->{None, None},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImagePadding->All,
             
             ImageSize->
              Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}],
             
             Method->{
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}},
             
             PlotRange->{{1514678400, 3686947200}, {38321.45244487775, 
               120086.17581321155`}},
             PlotRangeClipping->True,
             PlotRangePadding->{{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}},
             Ticks->{Automatic, Automatic}], GridBox[{
              {
               TagBox[
                TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1948\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Nov 2016\"", "SummaryItem"]}]},
                 "RowDefault"],
                "SummaryItem"], "\[SpanFromLeft]"},
              {
               RowBox[{
                TagBox["\<\"Data points: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["827",
                 "SummaryItem"]}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
         GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = False),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, 
               {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                1.6], Opacity[1.], LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAAFw0KQqS1kGQzqwZwNDiQI5tTfwf
GddBJq5tei624kC4hWylkqvXQYCYH5oxFuNArTM/3VA02EGXmnDVbRDkQLNH
NmZguthBynrXjzQQ5EBVYjPFzEvZQaGJIMBoe+RAwhLksoTT2UG1BRnbag/k
QMvJmnaZZtpBn6rjXBVi5UDl5nWL//baQdlRm1Quk+VAypkEL7F920E54g/+
8fLkQEtTmai/D9xBQnnR3GvZ5UCYouGwGZjcQfbBthbbF+ZA9VdOCsUd3UF8
XAVcsUPmQO4TwTnNrt1BcDPU8oHU5kCzZef3IDbeQeFukTz9u+dAE74TjNHI
3kHPSaq8L6noQIR8ZHHTWN9BsgSlrh6U6UDB0GjlIN/fQcS0kWyFZepAzZW5
l2U44EFGt0vZJzXrQB+OGIRgfOBBhDATUQYC7EC/iXrbCcbgQdG022iG3OtA
Z7hu21sO4UGU9AapPRjtQPWxvKLTUeFBbqbaADRw7kDRrg3V+ZrhQYH0X56F
fO5Ak3a4zkXf4UFTmAvMSKfuQF1x9XA6IuJB4h3HHgMH8EB1bzV+3WriQdZJ
CzozHvFAczjPUqau4kH4ZxYN0rPxQL8EbJId+OJBCi78gHyq8UATBJt6PUDj
Qa7SDk0M9vFATc4jKoOD40Ffg7u98LLxQNWbr0R3zONBsO5ZCW/K8kBCNJUm
kRDkQezLsEUfb/NAuP8MsVNT5EG4Hw5SgP3zQHzOh6bEm+RBYISyGdOZ9EAm
aFxjW9/kQcCgmfw4JPVAHQU0i6Ao5UFEHX8Acrv1QPpsZXoLbeVB7Xr/wLVf
9UDgBykSH7DlQY/8RI0VpfVAFKbvFOH45UFIe9+yyd31QC0PEN/IPOZBVgr5
YZ2O9kCUezMUX4bmQbqBS1/bGPdABBvp8Z3O5kEw5EN/4Ln3QFmF+JYCEudB
4OAoCXmE+ED88gqnFVvnQVF6R8CfAvlAhSt3fk6f50EiVEmvcOn5QBaXdf4v
4udBFbSnnzG9+UD1BXfpvyroQYjovZBxwflAuj/Sm3Vu6EFpD37Kjh3qQM18
MLnZt+hB2Gur9K106kDo7CB/5v/oQRdupTZUYetA6SdrDBlD6UFEDFDrrKjr
QDhmuAT6i+lBUlQDiD5y60Btb1/EANDpQYJ+E+7V9ulA8HsJ77UZ6kHmH6Jz
pUjqQHu7RcITYupBgRxeo3Uk60Dsxdtcl6XqQax2L6mTlOtAq9N0Ysnu6kFJ
fF+bLTrsQE+sZy8hM+tBy3yIWKu37EAA0mUrS3jrQZ2DIdBiUf1AixTxuA==

                 "]]}}, {}, {}},
             AspectRatio->1,
             Axes->{False, False},
             AxesLabel->{None, None},
             AxesOrigin->{1.5146784*^9, 38321.45244487775},
             DisplayFunction->Identity,
             Frame->{{True, True}, {True, True}},
             FrameLabel->{{None, None}, {None, None}},
             FrameStyle->Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]],
             FrameTicks->{{None, None}, {None, None}},
             GridLines->{None, None},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImagePadding->All,
             
             ImageSize->
              Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}],
             
             Method->{
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}},
             
             PlotRange->{{1514678400, 3686947200}, {38321.45244487775, 
               120086.17581321155`}},
             PlotRangeClipping->True,
             PlotRangePadding->{{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}},
             Ticks->{Automatic, Automatic}], GridBox[{
              {
               TagBox[
                TemplateBox[{RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1948\"", "SummaryItem"]}],RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Nov 2016\"", "SummaryItem"]}]},
                 "RowDefault"],
                "SummaryItem"], "\[SpanFromLeft]"},
              {
               RowBox[{
                TagBox["\<\"Data points: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["827",
                 "SummaryItem"]}], "\[SpanFromLeft]"},
              {
               RowBox[{
                TagBox["\<\"Regular: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["True",
                 "SummaryItem"]}], 
               RowBox[{
                TagBox["\<\"Output dimension: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["1",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Metadata: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["None",
                 "SummaryItem"]}], 
               RowBox[{
                TagBox["\<\"Minimum increment: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 RowBox[{"{", 
                  RowBox[{"1", ",", "\<\"Month\"\>"}], "}"}],
                 "SummaryItem"]}]},
              {
               TagBox["\<\"\"\>",
                "SummaryItem"], 
               RowBox[{
                TagBox["\<\"Resampling: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"LinearInterpolation\"\>",
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open$$],
         ImageSize->Automatic],
        BaselinePosition->Baseline],
       DynamicModuleValues:>{}], "]"}],
     TemporalData[TimeSeries, {CompressedData["
1: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

       "], {
        TemporalData`DateSpecification[{1948, 1, 1, 0, 0, 0.}, {
         2016, 11, 1, 0, 0, 0.}, {1, "Month"}]}, 1, {"Continuous", 1}, {
       "Discrete", 1}, 1, {
       ValueDimensions -> 1, DateFunction -> Automatic, 
        ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, 
      True, 11.],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.690554936937051*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{936, 1004},
WindowMargins->{{Automatic, 1}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 9, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 188, 2, 92, "Title"],
Cell[771, 26, 136, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[932, 33, 141, 2, 32, "Input"],
Cell[1076, 37, 136, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1249, 45, 266, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1540, 53, 3727, 67, 432, "Input"],
Cell[5270, 122, 172, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5491, 131, 152, 2, 44, "Subsection"],
Cell[5646, 135, 9505, 204, 958, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15188, 344, 100, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[15313, 349, 244, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[15582, 358, 132, 2, 24, "Print"],
Cell[15717, 362, 400, 9, 24, "Print"],
Cell[16120, 373, 387, 9, 24, "Print"],
Cell[16510, 384, 137, 2, 24, "Print"],
Cell[16650, 388, 402, 9, 24, "Print"],
Cell[17055, 399, 388, 9, 24, "Print"],
Cell[17446, 410, 131, 2, 24, "Print"],
Cell[17580, 414, 399, 9, 24, "Print"],
Cell[17982, 425, 388, 9, 24, "Print"],
Cell[18373, 436, 133, 2, 24, "Print"],
Cell[18509, 440, 400, 9, 24, "Print"],
Cell[18912, 451, 388, 9, 24, "Print"],
Cell[19303, 462, 133, 2, 24, "Print"],
Cell[19439, 466, 400, 9, 24, "Print"],
Cell[19842, 477, 388, 9, 24, "Print"],
Cell[20233, 488, 134, 2, 24, "Print"],
Cell[20370, 492, 399, 9, 24, "Print"],
Cell[20772, 503, 390, 9, 24, "Print"],
Cell[21165, 514, 134, 2, 24, "Print"],
Cell[21302, 518, 399, 9, 24, "Print"],
Cell[21704, 529, 390, 9, 24, "Print"],
Cell[22097, 540, 133, 2, 24, "Print"],
Cell[22233, 544, 400, 9, 24, "Print"],
Cell[22636, 555, 388, 9, 24, "Print"],
Cell[23027, 566, 134, 2, 24, "Print"],
Cell[23164, 570, 400, 9, 24, "Print"],
Cell[23567, 581, 388, 9, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24004, 596, 374, 8, 55, "Input"],
Cell[24381, 606, 1592, 37, 134, "Output"],
Cell[25976, 645, 1439, 34, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27452, 684, 244, 5, 32, "Input"],
Cell[27699, 691, 3108, 81, 306, "Output"]
}, Open  ]],
Cell[30822, 775, 1246, 25, 138, "Input"],
Cell[CellGroupData[{
Cell[32093, 804, 294, 7, 54, "Input"],
Cell[32390, 813, 4904, 134, 177, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37331, 952, 1583, 39, 117, "Input"],
Cell[CellGroupData[{
Cell[38939, 995, 789, 15, 25, "Print"],
Cell[39731, 1012, 795, 15, 25, "Print"],
Cell[40529, 1029, 814, 16, 25, "Print"],
Cell[41346, 1047, 794, 15, 25, "Print"],
Cell[42143, 1064, 788, 15, 25, "Print"],
Cell[42934, 1081, 795, 15, 25, "Print"],
Cell[43732, 1098, 795, 15, 25, "Print"],
Cell[44530, 1115, 784, 15, 25, "Print"],
Cell[45317, 1132, 785, 15, 25, "Print"]
}, Open  ]]
}, Open  ]],
Cell[46129, 1151, 515, 8, 306, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46681, 1164, 158, 2, 44, "Subsection"],
Cell[46842, 1168, 71, 1, 32, "Input"],
Cell[46916, 1171, 285, 4, 32, "Input"],
Cell[47204, 1177, 73, 1, 32, "Input"],
Cell[47280, 1180, 1246, 28, 117, "Input"],
Cell[48529, 1210, 388, 6, 285, "Input"],
Cell[48920, 1218, 808, 25, 54, "Input"],
Cell[49731, 1245, 111, 3, 32, "Input"],
Cell[49845, 1250, 603, 9, 453, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50497, 1265, 87, 1, 92, "Title"],
Cell[50587, 1268, 459, 12, 32, "Input"],
Cell[51049, 1282, 56, 1, 32, "Input"],
Cell[51108, 1285, 231, 4, 32, "Input"],
Cell[51342, 1291, 559351, 9213, 132, "Input"],
Cell[610696, 10506, 131, 2, 32, "Input"],
Cell[610830, 10510, 464, 13, 54, "Input"],
Cell[611297, 10525, 1096, 29, 138, "Input"],
Cell[612396, 10556, 172, 3, 32, "Input"],
Cell[612571, 10561, 433, 9, 32, "Input"],
Cell[613007, 10572, 268, 6, 32, "Input"],
Cell[613278, 10580, 376, 9, 32, "Input"],
Cell[613657, 10591, 304, 7, 32, "Input"],
Cell[613964, 10600, 1608, 47, 180, "Input"],
Cell[615575, 10649, 672, 14, 75, "Input"],
Cell[616250, 10665, 2546, 65, 222, "Input"],
Cell[618799, 10732, 960, 28, 96, "Input"],
Cell[619762, 10762, 396, 9, 32, "Input"],
Cell[620161, 10773, 141, 2, 32, "Input"],
Cell[620305, 10777, 363, 5, 264, "Input"],
Cell[CellGroupData[{
Cell[620693, 10786, 227, 6, 32, "Input"],
Cell[620923, 10794, 10649, 214, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631609, 11013, 601, 12, 54, "Input"],
Cell[632213, 11027, 120490, 2580, 612, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752740, 13612, 130, 2, 32, "Input"],
Cell[752873, 13616, 75, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752985, 13622, 320, 8, 32, "Input"],
Cell[753308, 13632, 123, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[753468, 13639, 314, 9, 32, "Input"],
Cell[753785, 13650, 73, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[753895, 13656, 236, 6, 32, "Input"],
Cell[754134, 13664, 20780, 414, 272, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[774951, 14083, 355, 9, 32, "Input"],
Cell[775309, 14094, 40745, 813, 612, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[816091, 14912, 255, 6, 32, "Input"],
Cell[816349, 14920, 13676, 324, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[830062, 15249, 234, 4, 32, "Input"],
Cell[830299, 15255, 15022, 362, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[845358, 15622, 413, 8, 54, "Input"],
Cell[845774, 15632, 43405, 873, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[889216, 16510, 300, 7, 32, "Input"],
Cell[889519, 16519, 33529, 745, 114, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

